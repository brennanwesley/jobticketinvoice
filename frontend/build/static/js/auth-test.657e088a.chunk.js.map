{"version":3,"file":"static/js/auth-test.657e088a.chunk.js","mappings":"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","sources":["components/AuthTestPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * Auth Test Page component\r\n * A utility page for testing authentication functionality\r\n */\r\nconst AuthTestPage = () => {\r\n  const { t } = useLanguage();\r\n  const { user, login, register, logout, uploadLogo } = useAuth();\r\n  \r\n  // Test state\r\n  const [testResults, setTestResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Form data for tests\r\n  const [loginData, setLoginData] = useState({\r\n    email: 'test@example.com',\r\n    password: 'Password123!'\r\n  });\r\n  \r\n  const [registerData, setRegisterData] = useState({\r\n    name: 'Test User',\r\n    email: `test${Math.floor(Math.random() * 10000)}@example.com`,\r\n    password: 'Password123!',\r\n    role: 'tech',\r\n    job_type: 'pump_service_technician'\r\n  });\r\n  \r\n  // Add a test result\r\n  const addResult = (title, success, data) => {\r\n    const timestamp = new Date().toLocaleTimeString();\r\n    setTestResults(prev => [\r\n      { id: Date.now(), timestamp, title, success, data },\r\n      ...prev\r\n    ]);\r\n  };\r\n  \r\n  // Handle login test\r\n  const handleLoginTest = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await login(loginData.email, loginData.password);\r\n      addResult('Login Test', result.success, result);\r\n    } catch (error) {\r\n      addResult('Login Test', false, { error: error.message });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle register test\r\n  const handleRegisterTest = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await register(registerData);\r\n      addResult('Register Test', result.success, result);\r\n      \r\n      // Update login email to match registration\r\n      if (result.success) {\r\n        setLoginData(prev => ({ ...prev, email: registerData.email }));\r\n        \r\n        // Generate new random email for next registration\r\n        setRegisterData(prev => ({\r\n          ...prev,\r\n          email: `test${Math.floor(Math.random() * 10000)}@example.com`\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      addResult('Register Test', false, { error: error.message });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle logout test\r\n  const handleLogoutTest = () => {\r\n    try {\r\n      logout();\r\n      addResult('Logout Test', true, { message: 'Successfully logged out' });\r\n    } catch (error) {\r\n      addResult('Logout Test', false, { error: error.message });\r\n    }\r\n  };\r\n  \r\n  // Handle logo upload test\r\n  const handleLogoUploadTest = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const result = await uploadLogo(file);\r\n      addResult('Logo Upload Test', result.success, result);\r\n    } catch (error) {\r\n      addResult('Logo Upload Test', false, { error: error.message });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle input change\r\n  const handleLoginInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n  \r\n  const handleRegisterInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setRegisterData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-slate-900 py-12 px-4\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <h1 className=\"text-3xl font-bold text-center text-white mb-8\">\r\n          {t('auth.testPageTitle')}\r\n        </h1>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n          {/* Test Controls */}\r\n          <div className=\"bg-slate-800 rounded-lg shadow-lg p-6\">\r\n            <h2 className=\"text-xl font-bold mb-4\">{t('auth.testControls')}</h2>\r\n            \r\n            {/* Current User Status */}\r\n            <div className=\"mb-6 p-4 bg-slate-700 rounded-lg\">\r\n              <h3 className=\"font-medium mb-2\">{t('auth.currentStatus')}</h3>\r\n              <p className=\"text-sm\">\r\n                {user ? (\r\n                  <span className=\"text-green-500\">{t('auth.loggedInAs')}: {user.email}</span>\r\n                ) : (\r\n                  <span className=\"text-red-500\">{t('auth.notLoggedIn')}</span>\r\n                )}\r\n              </p>\r\n              {user && (\r\n                <div className=\"mt-2 text-xs text-gray-400\">\r\n                  <p>Role: {user.role}</p>\r\n                  <p>Name: {user.name}</p>\r\n                  {user.role === 'tech' && <p>Job Type: {user.job_type}</p>}\r\n                  {user.role === 'manager' && <p>Company: {user.company_name}</p>}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Login Test */}\r\n            <div className=\"mb-6\">\r\n              <h3 className=\"font-medium mb-2\">{t('auth.loginTest')}</h3>\r\n              <div className=\"space-y-3\">\r\n                <div>\r\n                  <label htmlFor=\"login-email\" className=\"block text-sm text-gray-400 mb-1\">Email</label>\r\n                  <input\r\n                    id=\"login-email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={loginData.email}\r\n                    onChange={handleLoginInputChange}\r\n                    className=\"w-full px-3 py-2 bg-slate-700 border border-gray-600 rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"login-password\" className=\"block text-sm text-gray-400 mb-1\">Password</label>\r\n                  <input\r\n                    id=\"login-password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={loginData.password}\r\n                    onChange={handleLoginInputChange}\r\n                    className=\"w-full px-3 py-2 bg-slate-700 border border-gray-600 rounded-md\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  onClick={handleLoginTest}\r\n                  disabled={isLoading}\r\n                  className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md disabled:opacity-50\"\r\n                >\r\n                  {isLoading ? t('common.loading') : t('auth.runLoginTest')}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Register Test */}\r\n            <div className=\"mb-6\">\r\n              <h3 className=\"font-medium mb-2\">{t('auth.registerTest')}</h3>\r\n              <div className=\"space-y-3\">\r\n                <div>\r\n                  <label htmlFor=\"register-name\" className=\"block text-sm text-gray-400 mb-1\">Name</label>\r\n                  <input\r\n                    id=\"register-name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={registerData.name}\r\n                    onChange={handleRegisterInputChange}\r\n                    className=\"w-full px-3 py-2 bg-slate-700 border border-gray-600 rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"register-email\" className=\"block text-sm text-gray-400 mb-1\">Email</label>\r\n                  <input\r\n                    id=\"register-email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={registerData.email}\r\n                    onChange={handleRegisterInputChange}\r\n                    className=\"w-full px-3 py-2 bg-slate-700 border border-gray-600 rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"register-password\" className=\"block text-sm text-gray-400 mb-1\">Password</label>\r\n                  <input\r\n                    id=\"register-password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={registerData.password}\r\n                    onChange={handleRegisterInputChange}\r\n                    className=\"w-full px-3 py-2 bg-slate-700 border border-gray-600 rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"register-role\" className=\"block text-sm text-gray-400 mb-1\">Role</label>\r\n                  <select\r\n                    id=\"register-role\"\r\n                    name=\"role\"\r\n                    value={registerData.role}\r\n                    onChange={handleRegisterInputChange}\r\n                    className=\"w-full px-3 py-2 bg-slate-700 border border-gray-600 rounded-md\"\r\n                  >\r\n                    <option value=\"tech\">Tech</option>\r\n                    <option value=\"manager\">Manager</option>\r\n                  </select>\r\n                </div>\r\n                {registerData.role === 'tech' && (\r\n                  <div>\r\n                    <label htmlFor=\"register-job-type\" className=\"block text-sm text-gray-400 mb-1\">Job Type</label>\r\n                    <select\r\n                      id=\"register-job-type\"\r\n                      name=\"job_type\"\r\n                      value={registerData.job_type}\r\n                      onChange={handleRegisterInputChange}\r\n                      className=\"w-full px-3 py-2 bg-slate-700 border border-gray-600 rounded-md\"\r\n                    >\r\n                      <option value=\"pump_service_technician\">Pump Technician</option>\r\n                      <option value=\"roustabout\">Roustabout</option>\r\n                      <option value=\"electrician\">Electrician</option>\r\n                      <option value=\"pipeline_operator\">Pipeline Operator</option>\r\n                      <option value=\"truck_driver\">Truck Driver</option>\r\n                      <option value=\"other\">Other</option>\r\n                    </select>\r\n                  </div>\r\n                )}\r\n                {registerData.role === 'manager' && (\r\n                  <div>\r\n                    <label htmlFor=\"register-company-name\" className=\"block text-sm text-gray-400 mb-1\">Company Name</label>\r\n                    <input\r\n                      id=\"register-company-name\"\r\n                      type=\"text\"\r\n                      name=\"company_name\"\r\n                      value={registerData.company_name || ''}\r\n                      onChange={handleRegisterInputChange}\r\n                      className=\"w-full px-3 py-2 bg-slate-700 border border-gray-600 rounded-md\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                <button\r\n                  onClick={handleRegisterTest}\r\n                  disabled={isLoading}\r\n                  className=\"w-full bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-md disabled:opacity-50\"\r\n                >\r\n                  {isLoading ? t('common.loading') : t('auth.runRegisterTest')}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Other Tests */}\r\n            <div className=\"space-y-3\">\r\n              <button\r\n                onClick={handleLogoutTest}\r\n                className=\"w-full bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-md\"\r\n              >\r\n                {t('auth.runLogoutTest')}\r\n              </button>\r\n              \r\n              {user && user.role === 'manager' && (\r\n                <div>\r\n                  <label className=\"block text-sm text-gray-400 mb-2\">{t('auth.logoUploadTest')}</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleLogoUploadTest}\r\n                    className=\"w-full text-sm text-gray-400 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-orange-600 file:text-white hover:file:bg-orange-700\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Test Results */}\r\n          <div className=\"bg-slate-800 rounded-lg shadow-lg p-6\">\r\n            <h2 className=\"text-xl font-bold mb-4\">{t('auth.testResults')}</h2>\r\n            \r\n            {testResults.length === 0 ? (\r\n              <p className=\"text-gray-400 text-center py-8\">{t('auth.noTestResults')}</p>\r\n            ) : (\r\n              <div className=\"space-y-4 max-h-[600px] overflow-y-auto\">\r\n                {testResults.map(result => (\r\n                  <div \r\n                    key={result.id}\r\n                    className={`p-3 rounded-md border ${\r\n                      result.success ? 'border-green-500 bg-green-900 bg-opacity-20' : 'border-red-500 bg-red-900 bg-opacity-20'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex justify-between items-start mb-2\">\r\n                      <h3 className=\"font-medium\">{result.title}</h3>\r\n                      <span className=\"text-xs text-gray-400\">{result.timestamp}</span>\r\n                    </div>\r\n                    <div className=\"text-sm\">\r\n                      <p className={result.success ? 'text-green-500' : 'text-red-500'}>\r\n                        {result.success ? '✓ Success' : '✗ Failed'}\r\n                      </p>\r\n                      <pre className=\"mt-2 text-xs bg-slate-900 p-2 rounded overflow-x-auto\">\r\n                        {JSON.stringify(result.data, null, 2)}\r\n                      </pre>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            {testResults.length > 0 && (\r\n              <button\r\n                onClick={() => setTestResults([])}\r\n                className=\"mt-4 w-full bg-slate-700 hover:bg-slate-600 text-white font-medium py-2 px-4 rounded-md\"\r\n              >\r\n                {t('auth.clearResults')}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-8 text-center\">\r\n          <Link to=\"/\" className=\"text-orange-500 hover:text-orange-400\">\r\n            &larr; {t('common.back')}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthTestPage;\r\n"],"names":["AuthTestPage","t","useLanguage","user","login","register","logout","uploadLogo","useAuth","testResults","setTestResults","useState","isLoading","setIsLoading","loginData","setLoginData","email","password","registerData","setRegisterData","name","concat","Math","floor","random","role","job_type","addResult","title","success","data","timestamp","Date","toLocaleTimeString","prev","id","now","handleLoginInputChange","e","value","target","_objectSpread","handleRegisterInputChange","_jsx","className","children","_jsxs","company_name","htmlFor","type","onChange","onClick","async","result","error","message","disabled","handleLogoutTest","accept","file","files","length","map","JSON","stringify","Link","to"],"sourceRoot":""}