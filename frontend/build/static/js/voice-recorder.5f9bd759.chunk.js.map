{"version":3,"file":"static/js/voice-recorder.5f9bd759.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/solid/esm/ArrowLeftIcon.js","../node_modules/@heroicons/react/24/outline/esm/PencilSquareIcon.js","components/VoiceRecorderPage.js","../node_modules/@heroicons/react/24/outline/esm/MicrophoneIcon.js","context/VoiceContext.js","../node_modules/@heroicons/react/24/outline/esm/StopIcon.js","../node_modules/@heroicons/react/24/solid/esm/ExclamationCircleIcon.js","utils/voiceParser.js","components/VoiceRecorder.js"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M11.03 3.97a.75.75 0 010 1.06l-6.22 6.22H21a.75.75 0 010 1.5H4.81l6.22 6.22a.75.75 0 11-1.06 1.06l-7.5-7.5a.75.75 0 010-1.06l7.5-7.5a.75.75 0 011.06 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilSquareIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PencilSquareIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLanguage } from '../context/LanguageContext';\nimport { useVoice } from '../context/VoiceContext';\nimport VoiceRecorder from './VoiceRecorder';\n\n/**\n * VoiceRecorderPage component\n * Dedicated page for voice-based job ticket creation\n */\nconst VoiceRecorderPage = () => {\n  const { t } = useLanguage();\n  const { startVoiceRecording } = useVoice();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Start voice recording when the component mounts\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n      startVoiceRecording();\n    }, 500);\n    \n    return () => clearTimeout(timer);\n  }, [startVoiceRecording]);\n  \n  // Handle back button click\n  const handleBackClick = () => {\n    navigate('/dashboard/landing');\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-6\">\n      {/* Header with back button */}\n      <div className=\"mb-6 flex items-center\">\n        <button \n          onClick={handleBackClick}\n          className=\"mr-4 p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n          aria-label={t('common.back')}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n          </svg>\n        </button>\n        <h1 className=\"text-2xl font-bold\">{t('jobTicket.createByVoice')}</h1>\n      </div>\n      \n      {/* Voice recorder container */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n        <VoiceRecorder />\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceRecorderPage;\n","import * as React from \"react\";\nfunction MicrophoneIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 18.75a6 6 0 006-6v-1.5m-6 7.5a6 6 0 01-6-6v-1.5m6 7.5v3.75m-3.75 0h7.5M12 15.75a3 3 0 01-3-3V4.5a3 3 0 116 0v8.25a3 3 0 01-3 3z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(MicrophoneIcon);\nexport default ForwardRef;","import React, { createContext, useState, useContext, useRef, useCallback, useEffect } from 'react';\r\nimport { useLanguage } from './LanguageContext';\r\n\r\n// Create the context\r\nconst VoiceContext = createContext();\r\n\r\n/**\r\n * Provider component for voice recording context\r\n * @param {Object} props - Component props\r\n * @returns {React.Component} Provider component\r\n */\r\nexport const VoiceProvider = ({ children }) => {\r\n  const { t } = useLanguage();\r\n  \r\n  // Voice recording states\r\n  const [voiceStatus, setVoiceStatus] = useState(null); // null, 'listening', 'processing', 'captured', or 'error'\r\n  const [transcribedText, setTranscribedText] = useState('');\r\n  const [transcriptionError, setTranscriptionError] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  \r\n  // Refs\r\n  const recognitionRef = useRef(null);\r\n  const silenceTimerRef = useRef(null);\r\n  \r\n  // Initialize Web Speech API\r\n  useEffect(() => {\r\n    // Check if browser supports speech recognition\r\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\r\n      console.error('Speech recognition not supported');\r\n      return;\r\n    }\r\n    \r\n    // Create speech recognition instance\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    recognitionRef.current = new SpeechRecognition();\r\n    \r\n    // Configure speech recognition\r\n    recognitionRef.current.continuous = true;\r\n    recognitionRef.current.interimResults = true;\r\n    recognitionRef.current.lang = 'en-US';\r\n    \r\n    // Clean up on unmount\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        try {\r\n          recognitionRef.current.stop();\r\n        } catch (e) {\r\n          console.error('Error stopping recognition:', e);\r\n        }\r\n      }\r\n      \r\n      if (silenceTimerRef.current) {\r\n        clearTimeout(silenceTimerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  // Reset silence timer\r\n  const resetSilenceTimer = useCallback(() => {\r\n    if (silenceTimerRef.current) {\r\n      clearTimeout(silenceTimerRef.current);\r\n    }\r\n    \r\n    silenceTimerRef.current = setTimeout(() => {\r\n      if (isListening) {\r\n        stopVoiceRecording();\r\n        setTranscriptionError(t('listeningTimeout'));\r\n        setVoiceStatus('error');\r\n      }\r\n    }, 15000); // 15 seconds of silence\r\n  }, [isListening, t]);\r\n  \r\n  // Start voice recording\r\n  const startVoiceRecording = useCallback(() => {\r\n    if (!recognitionRef.current) {\r\n      setTranscriptionError(t('browserNotSupported'));\r\n      setVoiceStatus('error');\r\n      return;\r\n    }\r\n    \r\n    setTranscribedText('');\r\n    setTranscriptionError('');\r\n    setVoiceStatus('listening');\r\n    setIsListening(true);\r\n    \r\n    try {\r\n      // Set up event handlers\r\n      recognitionRef.current.onstart = () => {\r\n        console.log('Voice recognition started');\r\n        resetSilenceTimer();\r\n      };\r\n      \r\n      recognitionRef.current.onresult = (event) => {\r\n        resetSilenceTimer();\r\n        const transcript = Array.from(event.results)\r\n          .map(result => result[0].transcript)\r\n          .join(' ');\r\n        setTranscribedText(transcript);\r\n      };\r\n      \r\n      recognitionRef.current.onerror = (event) => {\r\n        console.error('Speech recognition error', event.error);\r\n        if (event.error === 'no-speech') {\r\n          setTranscriptionError(t('noSpeechDetected'));\r\n        } else if (event.error === 'not-allowed') {\r\n          setTranscriptionError(t('microphoneError'));\r\n        } else {\r\n          setTranscriptionError(t('transcriptionError'));\r\n        }\r\n        setVoiceStatus('error');\r\n        setIsListening(false);\r\n        \r\n        if (silenceTimerRef.current) {\r\n          clearTimeout(silenceTimerRef.current);\r\n        }\r\n      };\r\n      \r\n      recognitionRef.current.onend = () => {\r\n        console.log('Voice recognition ended');\r\n        if (isListening && voiceStatus === 'listening') {\r\n          // If we're still supposed to be listening, restart\r\n          try {\r\n            recognitionRef.current.start();\r\n          } catch (e) {\r\n            console.error('Error restarting recognition:', e);\r\n          }\r\n        } else {\r\n          setIsListening(false);\r\n          if (voiceStatus === 'listening') {\r\n            setVoiceStatus('captured');\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Start recognition\r\n      recognitionRef.current.start();\r\n    } catch (error) {\r\n      console.error('Error starting voice recognition:', error);\r\n      setTranscriptionError(t('transcriptionError'));\r\n      setVoiceStatus('error');\r\n      setIsListening(false);\r\n    }\r\n  }, [isListening, resetSilenceTimer, t, voiceStatus]);\r\n  \r\n  // Stop voice recording\r\n  const stopVoiceRecording = useCallback(() => {\r\n    if (recognitionRef.current && isListening) {\r\n      try {\r\n        recognitionRef.current.stop();\r\n        console.log('Voice recognition stopped');\r\n      } catch (e) {\r\n        console.error('Error stopping recognition:', e);\r\n      }\r\n    }\r\n    \r\n    if (silenceTimerRef.current) {\r\n      clearTimeout(silenceTimerRef.current);\r\n      silenceTimerRef.current = null;\r\n    }\r\n    \r\n    setIsListening(false);\r\n    setVoiceStatus('processing');\r\n    \r\n    // Simulate processing delay\r\n    setTimeout(() => {\r\n      if (transcribedText) {\r\n        setVoiceStatus('captured');\r\n      } else {\r\n        setTranscriptionError(t('noSpeechDetected'));\r\n        setVoiceStatus('error');\r\n      }\r\n    }, 1000);\r\n  }, [isListening, t, transcribedText]);\r\n  \r\n  // Cancel voice recording\r\n  const cancelVoiceRecording = useCallback(() => {\r\n    if (recognitionRef.current && isListening) {\r\n      try {\r\n        recognitionRef.current.stop();\r\n        console.log('Voice recognition cancelled');\r\n      } catch (e) {\r\n        console.error('Error stopping recognition:', e);\r\n      }\r\n    }\r\n    \r\n    if (silenceTimerRef.current) {\r\n      clearTimeout(silenceTimerRef.current);\r\n      silenceTimerRef.current = null;\r\n    }\r\n    \r\n    setIsListening(false);\r\n    setVoiceStatus(null);\r\n    setTranscribedText('');\r\n    setTranscriptionError('');\r\n  }, [isListening]);\r\n  \r\n  // Context value\r\n  const contextValue = {\r\n    voiceStatus,\r\n    setVoiceStatus,\r\n    transcribedText,\r\n    setTranscribedText,\r\n    transcriptionError,\r\n    setTranscriptionError,\r\n    isListening,\r\n    startVoiceRecording,\r\n    stopVoiceRecording,\r\n    cancelVoiceRecording\r\n  };\r\n  \r\n  return (\r\n    <VoiceContext.Provider value={contextValue}>\r\n      {children}\r\n    </VoiceContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Custom hook to use the voice context\r\n * @returns {Object} Voice context value\r\n */\r\nexport const useVoice = () => {\r\n  const context = useContext(VoiceContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useVoice must be used within a VoiceProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default VoiceContext;\r\n","import * as React from \"react\";\nfunction StopIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M5.25 7.5A2.25 2.25 0 017.5 5.25h9a2.25 2.25 0 012.25 2.25v9a2.25 2.25 0 01-2.25 2.25h-9a2.25 2.25 0 01-2.25-2.25v-9z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(StopIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ExclamationCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ExclamationCircleIcon);\nexport default ForwardRef;","/**\n * Voice Parser Utility\n * \n * Parses transcribed text from voice input and extracts structured data\n * for job ticket form fields.\n */\n\n/**\n * Extract job ticket data from transcribed text\n * @param {string} text - The transcribed text from voice input\n * @returns {Object} - Extracted job ticket data\n */\nexport const parseJobTicketFromVoice = (text) => {\n  if (!text) return {};\n  \n  // Normalize text for consistent parsing\n  const normalizedText = text.toLowerCase().trim();\n  \n  // Initialize extracted data object\n  const extractedData = {};\n  \n  // Extract company name\n  extractedData.companyName = extractCompanyName(normalizedText);\n  \n  // Extract customer name\n  extractedData.customerName = extractCustomerName(normalizedText);\n  \n  // Extract location\n  extractedData.location = extractLocation(normalizedText);\n  \n  // Extract work type\n  extractedData.workType = extractWorkType(normalizedText);\n  \n  // Extract equipment\n  extractedData.equipment = extractEquipment(normalizedText);\n  \n  // Extract work description\n  extractedData.workDescription = extractWorkDescription(normalizedText);\n  \n  // Extract parts used\n  extractedData.partsUsed = extractPartsUsed(normalizedText);\n  \n  // Extract submitted by\n  extractedData.submittedBy = extractSubmittedBy(normalizedText);\n  \n  // Extract times\n  const times = extractTimes(normalizedText);\n  if (times.workStartTime) extractedData.workStartTime = times.workStartTime;\n  if (times.workEndTime) extractedData.workEndTime = times.workEndTime;\n  if (times.driveStartTime) extractedData.driveStartTime = times.driveStartTime;\n  if (times.driveEndTime) extractedData.driveEndTime = times.driveEndTime;\n  \n  // Extract travel type\n  extractedData.travelType = extractTravelType(normalizedText);\n  \n  // Extract job date\n  extractedData.jobDate = extractJobDate(normalizedText);\n  \n  return extractedData;\n};\n\n/**\n * Extract company name from text\n */\nconst extractCompanyName = (text) => {\n  // Common patterns for company name\n  const patterns = [\n    /(?:company|company name|for company|at company|with company)[:\\s]+([^.,]+)/i,\n    /(?:job|work)(?:\\s+is)?(?:\\s+for)?(?:\\s+company)?[:\\s]+([^.,]+)/i,\n    /(?:at|for)[:\\s]+([^.,]+?)(?:\\s+(?:in|at|on|job|work))/i\n  ];\n  \n  for (const pattern of patterns) {\n    const match = text.match(pattern);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n  }\n  \n  return '';\n};\n\n/**\n * Extract customer name from text\n */\nconst extractCustomerName = (text) => {\n  // Common patterns for customer name\n  const patterns = [\n    /(?:customer|customer name|client|client name)[:\\s]+([^.,]+)/i,\n    /(?:for|with) customer[:\\s]+([^.,]+)/i\n  ];\n  \n  for (const pattern of patterns) {\n    const match = text.match(pattern);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n  }\n  \n  return '';\n};\n\n/**\n * Extract location from text\n */\nconst extractLocation = (text) => {\n  // Common patterns for location\n  const patterns = [\n    /(?:location|site|address|place|facility|well|lease)[:\\s]+([^.,]+)/i,\n    /(?:at|in) (?:location|site|address|place|facility|well|lease)[:\\s]+([^.,]+)/i,\n    /(?:at|in)[:\\s]+([^.,]+?)(?:\\s+(?:on|for|to|performed|did|completed))/i\n  ];\n  \n  for (const pattern of patterns) {\n    const match = text.match(pattern);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n  }\n  \n  return '';\n};\n\n/**\n * Extract work type from text\n */\nconst extractWorkType = (text) => {\n  // Common patterns for work type\n  const patterns = [\n    /(?:work type|type of work|job type)[:\\s]+([^.,]+)/i,\n    /(?:performed|did|completed)[:\\s]+([^.,]+?)(?:\\s+(?:at|on|for|work|job))/i\n  ];\n  \n  for (const pattern of patterns) {\n    const match = text.match(pattern);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n  }\n  \n  return '';\n};\n\n/**\n * Extract equipment from text\n */\nconst extractEquipment = (text) => {\n  // Common patterns for equipment\n  const patterns = [\n    /(?:equipment|machine|pump|unit|system)[:\\s]+([^.,]+)/i,\n    /(?:worked on|serviced|repaired|maintained)[:\\s]+([^.,]+?)(?:\\s+(?:at|on|for|which|that))/i\n  ];\n  \n  for (const pattern of patterns) {\n    const match = text.match(pattern);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n  }\n  \n  return '';\n};\n\n/**\n * Extract work description from text\n */\nconst extractWorkDescription = (text) => {\n  // Common patterns for work description\n  const patterns = [\n    /(?:work description|description of work|work performed|job description)[:\\s]+([^.]+)/i,\n    /(?:performed|did|completed|work included)[:\\s]+([^.]+)/i\n  ];\n  \n  for (const pattern of patterns) {\n    const match = text.match(pattern);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n  }\n  \n  // If no specific description found, use the entire text as fallback\n  return text;\n};\n\n/**\n * Extract parts used from text\n */\nconst extractPartsUsed = (text) => {\n  const parts = [];\n  \n  // Common part names to look for\n  const commonParts = [\n    'lubricant', 'pump seal', 'thrust chamber', \n    'vfd breaker', 'vfd switch', 'service kit', \n    'safety maintenance kit', 'maintenance kit'\n  ];\n  \n  // Check for parts used section\n  const partsSection = text.match(/(?:parts used|used parts|parts|replaced|installed)[:\\s]+([^.]+)/i);\n  \n  if (partsSection && partsSection[1]) {\n    const partsText = partsSection[1].toLowerCase();\n    \n    // Check for common parts in the parts section\n    commonParts.forEach(part => {\n      if (partsText.includes(part)) {\n        parts.push(part);\n      }\n    });\n  } else {\n    // If no specific parts section, check entire text\n    commonParts.forEach(part => {\n      if (text.includes(part)) {\n        parts.push(part);\n      }\n    });\n  }\n  \n  return parts;\n};\n\n/**\n * Extract submitted by from text\n */\nconst extractSubmittedBy = (text) => {\n  // Common patterns for submitted by\n  const patterns = [\n    /(?:submitted by|completed by|technician|tech|my name is|this is)[:\\s]+([^.,]+)/i,\n    /(?:submitted|completed)(?:\\s+by)?[:\\s]+([^.,]+)/i\n  ];\n  \n  for (const pattern of patterns) {\n    const match = text.match(pattern);\n    if (match && match[1]) {\n      return match[1].trim();\n    }\n  }\n  \n  return '';\n};\n\n/**\n * Extract times from text\n */\nconst extractTimes = (text) => {\n  const times = {};\n  \n  // Time patterns (both 12h and 24h formats)\n  const timePattern = /(\\d{1,2})(?::(\\d{2}))?(?:\\s*(am|pm))?/i;\n  \n  // Work start time\n  const workStartMatch = text.match(/(?:work|job)(?:\\s+start(?:ed)?|\\s+begin|began)(?:\\s+at)?[:\\s]+([^.,]+)/i);\n  if (workStartMatch && workStartMatch[1]) {\n    const timeMatch = workStartMatch[1].match(timePattern);\n    if (timeMatch) {\n      times.workStartTime = formatTimeString(timeMatch);\n    }\n  }\n  \n  // Work end time\n  const workEndMatch = text.match(/(?:work|job)(?:\\s+end(?:ed)?|finished|complete(?:d)?)(?:\\s+at)?[:\\s]+([^.,]+)/i);\n  if (workEndMatch && workEndMatch[1]) {\n    const timeMatch = workEndMatch[1].match(timePattern);\n    if (timeMatch) {\n      times.workEndTime = formatTimeString(timeMatch);\n    }\n  }\n  \n  // Drive/travel start time\n  const driveStartMatch = text.match(/(?:drive|travel|trip)(?:\\s+start(?:ed)?|\\s+begin|began)(?:\\s+at)?[:\\s]+([^.,]+)/i);\n  if (driveStartMatch && driveStartMatch[1]) {\n    const timeMatch = driveStartMatch[1].match(timePattern);\n    if (timeMatch) {\n      times.driveStartTime = formatTimeString(timeMatch);\n    }\n  }\n  \n  // Drive/travel end time\n  const driveEndMatch = text.match(/(?:drive|travel|trip)(?:\\s+end(?:ed)?|finished|complete(?:d)?)(?:\\s+at)?[:\\s]+([^.,]+)/i);\n  if (driveEndMatch && driveEndMatch[1]) {\n    const timeMatch = driveEndMatch[1].match(timePattern);\n    if (timeMatch) {\n      times.driveEndTime = formatTimeString(timeMatch);\n    }\n  }\n  \n  return times;\n};\n\n/**\n * Format time string to HH:MM format\n */\nconst formatTimeString = (timeMatch) => {\n  let hours = parseInt(timeMatch[1], 10);\n  const minutes = timeMatch[2] ? timeMatch[2] : '00';\n  const ampm = timeMatch[3] ? timeMatch[3].toLowerCase() : null;\n  \n  // Convert to 24-hour format if needed\n  if (ampm === 'pm' && hours < 12) {\n    hours += 12;\n  } else if (ampm === 'am' && hours === 12) {\n    hours = 0;\n  }\n  \n  // Format as HH:MM\n  return `${hours.toString().padStart(2, '0')}:${minutes.padStart(2, '0')}`;\n};\n\n/**\n * Extract travel type from text\n */\nconst extractTravelType = (text) => {\n  if (text.includes('one way') || text.includes('oneway') || text.includes('one-way')) {\n    return 'oneWay';\n  } else if (text.includes('round trip') || text.includes('roundtrip') || text.includes('round-trip')) {\n    return 'roundTrip';\n  }\n  \n  return '';\n};\n\n/**\n * Extract job date from text\n */\nconst extractJobDate = (text) => {\n  // Common date patterns\n  const datePattern = /(\\d{1,2})[-./](\\d{1,2})[-./](\\d{2,4})/;\n  const dateTextPattern = /(?:date|job date|on)[:\\s]+([^.,]+)/i;\n  \n  // Check for date in format MM/DD/YYYY or similar\n  const dateMatch = text.match(datePattern);\n  if (dateMatch) {\n    const month = parseInt(dateMatch[1], 10);\n    const day = parseInt(dateMatch[2], 10);\n    let year = parseInt(dateMatch[3], 10);\n    \n    // Fix two-digit years\n    if (year < 100) {\n      year += 2000;\n    }\n    \n    // Format as YYYY-MM-DD for input[type=\"date\"]\n    return `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n  }\n  \n  // Check for date mentioned in text\n  const dateTextMatch = text.match(dateTextPattern);\n  if (dateTextMatch && dateTextMatch[1]) {\n    // Try to parse the date text - this is a simplified approach\n    const dateText = dateTextMatch[1].toLowerCase();\n    \n    // Check for \"today\", \"yesterday\", etc.\n    const today = new Date();\n    \n    if (dateText.includes('today')) {\n      return formatDateString(today);\n    } else if (dateText.includes('yesterday')) {\n      const yesterday = new Date(today);\n      yesterday.setDate(yesterday.getDate() - 1);\n      return formatDateString(yesterday);\n    } else if (dateText.includes('tomorrow')) {\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      return formatDateString(tomorrow);\n    }\n  }\n  \n  // Default to today's date if no date found\n  return formatDateString(new Date());\n};\n\n/**\n * Format date as YYYY-MM-DD\n */\nconst formatDateString = (date) => {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  \n  return `${year}-${month}-${day}`;\n};\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { MicrophoneIcon, StopIcon, PencilSquareIcon } from '@heroicons/react/24/outline';\r\nimport { ArrowLeftIcon, ExclamationCircleIcon } from '@heroicons/react/24/solid';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useVoice } from '../context/VoiceContext';\r\nimport { useTicket } from '../context/TicketContext';\r\nimport { GenericJobTicketForm } from './tickets/forms';\r\nimport { parseJobTicketFromVoice } from '../utils/voiceParser';\r\n\r\n/**\r\n * Voice Recorder component for voice-based job ticket creation\r\n */\r\nconst VoiceRecorder = () => {\r\n  const { translations, t } = useLanguage();\r\n  const { \r\n    voiceStatus, \r\n    transcribedText, \r\n    transcriptionError, \r\n    startVoiceRecording, \r\n    stopVoiceRecording, \r\n    cancelVoiceRecording \r\n  } = useVoice();\r\n  \r\n  const { \r\n    setTicketMode, \r\n    setViewMode, \r\n    saveJobTicketAsDraft, \r\n    setSelectedDraftTicket,\r\n    updateFormData\r\n  } = useTicket();\r\n  \r\n  // State to store parsed job ticket data\r\n  const [parsedJobTicket, setParsedJobTicket] = useState({});\r\n  \r\n  // Parse transcribed text when it changes\r\n  useEffect(() => {\r\n    if (transcribedText && voiceStatus === 'captured') {\r\n      const extractedData = parseJobTicketFromVoice(transcribedText);\r\n      console.log('Parsed job ticket data:', extractedData);\r\n      setParsedJobTicket(extractedData);\r\n      \r\n      // Update form data with extracted values\r\n      Object.entries(extractedData).forEach(([field, value]) => {\r\n        if (value) {\r\n          updateFormData(field, value);\r\n        }\r\n      });\r\n    }\r\n  }, [transcribedText, voiceStatus, updateFormData]);\r\n  \r\n  // Handle back button click\r\n  const handleBackClick = () => {\r\n    setTicketMode(null);\r\n    setViewMode('landing');\r\n    cancelVoiceRecording();\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <button \r\n        onClick={handleBackClick}\r\n        className=\"flex items-center text-gray-400 hover:text-white mb-6\"\r\n      >\r\n        <ArrowLeftIcon className=\"h-4 w-4 mr-1\" />\r\n        {translations.back}\r\n      </button>\r\n      \r\n      {/* Listening state with animated microphone */}\r\n      {voiceStatus === 'listening' && (\r\n        <div className=\"flex flex-col items-center\">\r\n          {/* Enhanced instruction text - larger and burnt orange */}\r\n          <p className=\"text-2xl md:text-3xl font-bold text-orange-500 mb-8\">\r\n            {translations.speakJobTicketInfo}\r\n          </p>\r\n          \r\n          <div className=\"relative mb-8\">\r\n            {/* Larger animated microphone with pulse effect */}\r\n            <div className=\"pulse-dot\">\r\n              <MicrophoneIcon className=\"h-20 w-20 mx-auto mb-4 text-orange-500\" />\r\n            </div>\r\n            \r\n            {/* Enhanced animated sound wave circles */}\r\n            <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 -z-10\">\r\n              <div className=\"h-24 w-24 rounded-full bg-orange-500 opacity-20 pulse-ring\"></div>\r\n              <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 h-32 w-32 rounded-full bg-orange-500 opacity-10 pulse-ring animation-delay-300\"></div>\r\n              <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 h-40 w-40 rounded-full bg-orange-500 opacity-5 pulse-ring animation-delay-600\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Animated waveform */}\r\n          <div className=\"waveform mb-8\">\r\n            <div className=\"waveform-bar\"></div>\r\n            <div className=\"waveform-bar\"></div>\r\n            <div className=\"waveform-bar\"></div>\r\n            <div className=\"waveform-bar\"></div>\r\n            <div className=\"waveform-bar\"></div>\r\n            <div className=\"waveform-bar\"></div>\r\n            <div className=\"waveform-bar\"></div>\r\n            <div className=\"waveform-bar\"></div>\r\n            <div className=\"waveform-bar\"></div>\r\n          </div>\r\n          \r\n          <p className=\"text-xl font-medium mb-6\">{translations.listening}</p>\r\n          \r\n          {/* Control buttons */}\r\n          <div className=\"flex flex-col space-y-4 items-center\">\r\n            <div className=\"flex flex-wrap justify-center gap-4\">\r\n              <button \r\n                onClick={stopVoiceRecording}\r\n                className=\"bg-orange-700 hover:bg-orange-800 text-white px-6 py-2 rounded-lg transition-colors flex items-center space-x-2\"\r\n              >\r\n                <StopIcon className=\"h-5 w-5\" />\r\n                <span>{translations.stopRecording}</span>\r\n              </button>\r\n              \r\n              <button \r\n                onClick={cancelVoiceRecording}\r\n                className=\"bg-gray-700 hover:bg-gray-800 text-white px-6 py-2 rounded-lg transition-colors\"\r\n              >\r\n                {translations.cancelRecording}\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Additional buttons for visual only - no functionality */}\r\n            <div className=\"flex flex-wrap justify-center gap-4 mt-4\">\r\n              <button \r\n                onClick={startVoiceRecording}\r\n                className=\"bg-orange-600 hover:bg-orange-700 text-white px-6 py-2 rounded-lg transition-colors flex items-center space-x-2\"\r\n              >\r\n                <MicrophoneIcon className=\"h-5 w-5\" />\r\n                <span>{translations.restartRecording}</span>\r\n              </button>\r\n              \r\n              <button \r\n                onClick={stopVoiceRecording}\r\n                className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg transition-colors flex items-center space-x-2\"\r\n              >\r\n                <PencilSquareIcon className=\"h-5 w-5\" />\r\n                <span>{translations.allDoneCreateJobTicket}</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Processing state */}\r\n      {voiceStatus === 'processing' && (\r\n        <div className=\"flex flex-col items-center\">\r\n          <div className=\"mb-4\">\r\n            <svg className=\"animate-spin h-10 w-10 text-orange-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n          </div>\r\n          <p className=\"text-xl font-medium\">{translations.processingAudio}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Error state */}\r\n      {voiceStatus === 'error' && (\r\n        <div className=\"flex flex-col items-center\">\r\n          <div className=\"text-red-500 mb-4\">\r\n            <ExclamationCircleIcon className=\"h-16 w-16 mx-auto\" />\r\n          </div>\r\n          <p className=\"text-xl font-medium text-red-500 mb-4\">{transcriptionError}</p>\r\n          <button \r\n            onClick={() => setTicketMode(null)}\r\n            className=\"bg-orange-700 hover:bg-orange-800 text-white px-6 py-2 rounded-lg transition-colors\"\r\n          >\r\n            {translations.goBack}\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Captured state with transcription and options */}\r\n      {voiceStatus === 'captured' && (\r\n        <div>\r\n          {/* Header with title and back button */}\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h2 className=\"text-2xl font-bold\">{t('jobTicket.voiceCaptured')}</h2>\r\n            <button \r\n              onClick={handleBackClick}\r\n              className=\"bg-gray-700 hover:bg-gray-800 text-white px-4 py-2 rounded-lg transition-colors flex items-center space-x-2\"\r\n            >\r\n              <ArrowLeftIcon className=\"h-5 w-5\" />\r\n              <span>{t('jobTicket.goBack')}</span>\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Prominent transcription display - the main feature requested */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 mb-8 border-2 border-orange-500\">\r\n            <h3 className=\"text-xl font-bold mb-3 text-orange-500\">{t('jobTicket.rawTranscription')}</h3>\r\n            <div className=\"bg-gray-100 dark:bg-gray-700 p-4 rounded-lg max-h-60 overflow-y-auto\">\r\n              <p className=\"text-gray-900 dark:text-gray-100 text-lg\">{transcribedText || t('jobTicket.noTranscriptionAvailable')}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Action buttons - clearly separated and prominently displayed */}\r\n          <div className=\"flex flex-wrap gap-4 justify-center mb-8\">\r\n            <button \r\n              onClick={startVoiceRecording}\r\n              className=\"bg-orange-600 hover:bg-orange-700 text-white px-6 py-3 rounded-lg transition-colors flex items-center space-x-2 text-lg\"\r\n            >\r\n              <MicrophoneIcon className=\"h-6 w-6\" />\r\n              <span>{t('jobTicket.restartRecording')}</span>\r\n            </button>\r\n            \r\n            <button\r\n              onClick={() => {\r\n                const newDraft = saveJobTicketAsDraft({ ...parsedJobTicket, workDescription: transcribedText });\r\n                setSelectedDraftTicket(newDraft);\r\n                setViewMode('draft');\r\n              }}\r\n              className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg transition-colors flex items-center space-x-2 text-lg\"\r\n            >\r\n              <PencilSquareIcon className=\"h-6 w-6\" />\r\n              <span>{t('jobTicket.submit')}</span>\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Extracted data with collapsible section */}\r\n          <div className=\"bg-gray-800 rounded-lg p-4 mb-6 border border-gray-700\">\r\n            <div className=\"flex justify-between items-center cursor-pointer\" \r\n                 onClick={() => {\r\n                   const detailsEl = document.getElementById('extractedDataDetails');\r\n                   if (detailsEl) detailsEl.open = !detailsEl.open;\r\n                 }}>\r\n              <h3 className=\"text-lg font-medium\">{t('jobTicket.extractedData')}</h3>\r\n              <span className=\"text-sm text-gray-400\">(Click to expand/collapse)</span>\r\n            </div>\r\n            \r\n            <details id=\"extractedDataDetails\" className=\"mt-2\">\r\n              <summary className=\"sr-only\">Extracted Data Details</summary>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4 pl-4 border-l-2 border-gray-700\">\r\n                {Object.entries(parsedJobTicket).map(([key, value]) => {\r\n                  // Skip empty values and arrays\r\n                  if (!value || (Array.isArray(value) && value.length === 0)) return null;\r\n                  \r\n                  // Format the key for display\r\n                  const formattedKey = key.replace(/([A-Z])/g, ' $1')\r\n                    .replace(/^./, str => str.toUpperCase());\r\n                  \r\n                  // Format the value for display\r\n                  const formattedValue = Array.isArray(value) \r\n                    ? value.join(', ')\r\n                    : value;\r\n                  \r\n                  return (\r\n                    <div key={key} className=\"flex\">\r\n                      <span className=\"font-medium text-gray-400 mr-2\">{formattedKey}:</span>\r\n                      <span className=\"text-white\">{formattedValue}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n                \r\n                {/* Recognition quality indicator */}\r\n                <div className=\"col-span-2 mt-4 flex items-center\">\r\n                  <span className=\"text-sm text-gray-400 mr-2\">{t('jobTicket.recognitionQuality')}:</span>\r\n                  <div className=\"flex space-x-1\">\r\n                    {Object.keys(parsedJobTicket).filter(key => !!parsedJobTicket[key]).length >= 5 ? (\r\n                      <>\r\n                        <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\r\n                        <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\r\n                        <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\r\n                        <span className=\"ml-2 text-green-500 text-xs\">Good</span>\r\n                      </>\r\n                    ) : Object.keys(parsedJobTicket).filter(key => !!parsedJobTicket[key]).length >= 3 ? (\r\n                      <>\r\n                        <div className=\"h-2 w-2 rounded-full bg-yellow-500\"></div>\r\n                        <div className=\"h-2 w-2 rounded-full bg-yellow-500\"></div>\r\n                        <div className=\"h-2 w-2 rounded-full bg-gray-600\"></div>\r\n                        <span className=\"ml-2 text-yellow-500 text-xs\">Fair</span>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"h-2 w-2 rounded-full bg-red-500\"></div>\r\n                        <div className=\"h-2 w-2 rounded-full bg-gray-600\"></div>\r\n                        <div className=\"h-2 w-2 rounded-full bg-gray-600\"></div>\r\n                        <span className=\"ml-2 text-red-500 text-xs\">Poor</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          </div>\r\n          \r\n          {/* Optional: Form with prefilled data (collapsed by default) */}\r\n          <div className=\"bg-gray-800 rounded-lg p-4 mb-6 border border-gray-700\">\r\n            <div className=\"flex justify-between items-center cursor-pointer\"\r\n                 onClick={() => {\r\n                   const formEl = document.getElementById('jobTicketFormDetails');\r\n                   if (formEl) formEl.open = !formEl.open;\r\n                 }}>\r\n              <h3 className=\"text-lg font-medium\">{t('jobTicket.editForm')}</h3>\r\n              <span className=\"text-sm text-gray-400\">(Click to expand/collapse)</span>\r\n            </div>\r\n            \r\n            <details id=\"jobTicketFormDetails\" className=\"mt-2\">\r\n              <summary className=\"sr-only\">Job Ticket Form</summary>\r\n              <div className=\"mt-4\">\r\n                <GenericJobTicketForm />\r\n              </div>\r\n            </details>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(VoiceRecorder);\r\n"],"names":["React","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","viewBox","fill","ref","id","fillRule","d","clipRule","strokeWidth","stroke","strokeLinecap","strokeLinejoin","VoiceRecorderPage","t","useLanguage","startVoiceRecording","useVoice","navigate","useNavigate","isLoading","setIsLoading","useState","useEffect","timer","setTimeout","clearTimeout","_jsxs","className","children","_jsx","onClick","handleBackClick","VoiceRecorder","VoiceContext","createContext","VoiceProvider","voiceStatus","setVoiceStatus","transcribedText","setTranscribedText","transcriptionError","setTranscriptionError","isListening","setIsListening","recognitionRef","useRef","silenceTimerRef","window","console","error","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","stop","e","resetSilenceTimer","useCallback","stopVoiceRecording","onstart","log","onresult","event","transcript","Array","from","results","map","result","join","onerror","onend","start","cancelVoiceRecording","contextValue","Provider","value","context","useContext","Error","extractCompanyName","text","patterns","pattern","match","trim","extractCustomerName","extractLocation","extractWorkType","extractEquipment","extractWorkDescription","extractPartsUsed","parts","commonParts","partsSection","partsText","toLowerCase","forEach","part","includes","push","extractSubmittedBy","extractTimes","times","timePattern","workStartMatch","timeMatch","workStartTime","formatTimeString","workEndMatch","workEndTime","driveStartMatch","driveStartTime","driveEndMatch","driveEndTime","hours","parseInt","minutes","ampm","concat","toString","padStart","extractTravelType","extractJobDate","dateMatch","month","day","year","dateTextMatch","dateText","today","Date","formatDateString","yesterday","setDate","getDate","tomorrow","date","getFullYear","getMonth","translations","setTicketMode","setViewMode","saveJobTicketAsDraft","setSelectedDraftTicket","updateFormData","useTicket","parsedJobTicket","setParsedJobTicket","extractedData","normalizedText","companyName","customerName","location","workType","equipment","workDescription","partsUsed","submittedBy","travelType","jobDate","parseJobTicketFromVoice","entries","field","ArrowLeftIcon","back","speakJobTicketInfo","MicrophoneIcon","listening","StopIcon","stopRecording","cancelRecording","restartRecording","PencilSquareIcon","allDoneCreateJobTicket","cx","cy","r","processingAudio","ExclamationCircleIcon","goBack","newDraft","_objectSpread","detailsEl","document","getElementById","open","_ref2","key","isArray","length","formattedKey","replace","str","toUpperCase","formattedValue","keys","filter","_Fragment","formEl","GenericJobTicketForm","memo"],"sourceRoot":""}