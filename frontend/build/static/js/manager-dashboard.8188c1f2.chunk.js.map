{"version":3,"file":"static/js/manager-dashboard.8188c1f2.chunk.js","mappings":"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","sources":["components/LanguageToggle.js","hooks/useManagerAccess.js","components/manager/InviteTechnicianModal.js","../node_modules/@heroicons/react/24/outline/esm/XMarkIcon.js","components/ui/Toast.js","components/manager/TechnicianManagement.js","components/manager/CompanyProfile.js","components/manager/Invoicing.js","components/manager/JobTickets.js","components/manager/AuditLogs.js","../node_modules/@heroicons/react/24/outline/esm/HomeIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClipboardDocumentListIcon.js","../node_modules/@heroicons/react/24/outline/esm/BuildingOfficeIcon.js","../node_modules/@heroicons/react/24/outline/esm/UsersIcon.js","../node_modules/@heroicons/react/24/outline/esm/Cog6ToothIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowRightOnRectangleIcon.js","components/manager/ManagerDashboard.js","../node_modules/@heroicons/react/24/outline/esm/Bars3Icon.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\n\r\n/**\r\n * Language Toggle component\r\n * Provides a button to switch between English and Spanish\r\n */\r\nconst LanguageToggle = () => {\r\n  const { language, toggleLanguage } = useLanguage();\r\n  \r\n  // Determine which language to show in the toggle button (opposite of current)\r\n  const targetLanguage = language === 'en' ? 'Español' : 'English';\r\n  const instructionText = language === 'es' ? 'click for' : 'haga clic para';\r\n  \r\n  return (\r\n    <button\r\n      onClick={toggleLanguage}\r\n      className=\"absolute top-0 right-0 m-4 px-3 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md transition-colors flex items-center focus:outline-none focus:ring-2 focus:ring-orange-700\"\r\n      aria-label={`${instructionText} ${targetLanguage}`}\r\n      title={`${instructionText} ${targetLanguage}`}\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"text-xs italic text-white mr-1\">{instructionText}</span>\r\n      <span>{targetLanguage}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(LanguageToggle);\r\n","import { useCallback, useMemo } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { auditSecurityEvent, AUDIT_ACTIONS } from '../utils/audit';\n\n/**\n * Custom hook for role-based access control in manager features\n * Provides utilities for checking permissions and logging unauthorized access attempts\n */\nexport const useManagerAccess = () => {\n  const { user, isAuthenticated } = useAuth();\n\n  // Check if user has manager role\n  const isManager = useMemo(() => {\n    return isAuthenticated && user && (user.role === 'manager' || user.role === 'admin');\n  }, [isAuthenticated, user]);\n\n  // Check if user has admin role\n  const isAdmin = useMemo(() => {\n    return isAuthenticated && user && user.role === 'admin';\n  }, [isAuthenticated, user]);\n\n  // Check if user has technician role\n  const isTechnician = useMemo(() => {\n    return isAuthenticated && user && user.role === 'tech';\n  }, [isAuthenticated, user]);\n\n  // Get user's company ID for multi-tenancy\n  const companyId = useMemo(() => {\n    return user?.company_id || null;\n  }, [user]);\n\n  // Check if user can access manager features\n  const canAccessManagerFeatures = useCallback(() => {\n    if (!isAuthenticated || !user) {\n      return false;\n    }\n    return user.role === 'manager' || user.role === 'admin';\n  }, [isAuthenticated, user]);\n\n  // Check if user can manage technicians\n  const canManageTechnicians = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can edit company profile\n  const canEditCompanyProfile = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can view audit logs\n  const canViewAuditLogs = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can export data\n  const canExportData = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can invite technicians\n  const canInviteTechnicians = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can deactivate/remove technicians\n  const canDeactivateTechnicians = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can perform batch operations\n  const canPerformBatchOperations = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can upload company logo\n  const canUploadCompanyLogo = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user belongs to the same company (for multi-tenancy)\n  const belongsToSameCompany = useCallback((targetCompanyId) => {\n    if (!companyId || !targetCompanyId) {\n      return false;\n    }\n    return companyId === targetCompanyId;\n  }, [companyId]);\n\n  // Validate access and log unauthorized attempts\n  const validateAccess = useCallback(async (requiredPermission, context = {}) => {\n    let hasAccess = false;\n    let reason = '';\n\n    // Check authentication\n    if (!isAuthenticated) {\n      reason = 'User not authenticated';\n    } else if (!user) {\n      reason = 'User data not available';\n    } else {\n      // Check specific permissions\n      switch (requiredPermission) {\n        case 'manager_features':\n          hasAccess = canAccessManagerFeatures();\n          reason = hasAccess ? '' : 'Insufficient role permissions';\n          break;\n        case 'technician_management':\n          hasAccess = canManageTechnicians();\n          reason = hasAccess ? '' : 'Cannot manage technicians';\n          break;\n        case 'company_profile':\n          hasAccess = canEditCompanyProfile();\n          reason = hasAccess ? '' : 'Cannot edit company profile';\n          break;\n        case 'audit_logs':\n          hasAccess = canViewAuditLogs();\n          reason = hasAccess ? '' : 'Cannot view audit logs';\n          break;\n        case 'data_export':\n          hasAccess = canExportData();\n          reason = hasAccess ? '' : 'Cannot export data';\n          break;\n        case 'invite_technicians':\n          hasAccess = canInviteTechnicians();\n          reason = hasAccess ? '' : 'Cannot invite technicians';\n          break;\n        case 'deactivate_technicians':\n          hasAccess = canDeactivateTechnicians();\n          reason = hasAccess ? '' : 'Cannot deactivate technicians';\n          break;\n        case 'batch_operations':\n          hasAccess = canPerformBatchOperations();\n          reason = hasAccess ? '' : 'Cannot perform batch operations';\n          break;\n        case 'upload_logo':\n          hasAccess = canUploadCompanyLogo();\n          reason = hasAccess ? '' : 'Cannot upload company logo';\n          break;\n        default:\n          hasAccess = false;\n          reason = 'Unknown permission type';\n      }\n\n      // Additional company-level check if target company is specified\n      if (hasAccess && context.targetCompanyId) {\n        if (!belongsToSameCompany(context.targetCompanyId)) {\n          hasAccess = false;\n          reason = 'Cross-company access denied';\n        }\n      }\n    }\n\n    // Log unauthorized access attempts\n    if (!hasAccess) {\n      await auditSecurityEvent(AUDIT_ACTIONS.UNAUTHORIZED_ACCESS_ATTEMPT, {\n        permission: requiredPermission,\n        reason,\n        context,\n        user_id: user?.id || null,\n        user_email: user?.email || null,\n        user_role: user?.role || null,\n        company_id: companyId,\n        url: window.location.pathname,\n        timestamp: new Date().toISOString(),\n      });\n    }\n\n    return {\n      hasAccess,\n      reason: hasAccess ? null : reason,\n    };\n  }, [\n    isAuthenticated,\n    user,\n    companyId,\n    canAccessManagerFeatures,\n    canManageTechnicians,\n    canEditCompanyProfile,\n    canViewAuditLogs,\n    canExportData,\n    canInviteTechnicians,\n    canDeactivateTechnicians,\n    canPerformBatchOperations,\n    canUploadCompanyLogo,\n    belongsToSameCompany,\n  ]);\n\n  // Higher-order component for protecting routes\n  const withManagerAccess = useCallback((WrappedComponent, requiredPermission = 'manager_features') => {\n    return function ProtectedComponent(props) {\n      const { hasAccess } = validateAccess(requiredPermission);\n      \n      if (!hasAccess) {\n        return (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            <h4 className=\"alert-heading\">Access Denied</h4>\n            <p>You don&apos;t have permission to access this feature.</p>\n            <hr />\n            <p className=\"mb-0\">Please contact your administrator if you believe this is an error.</p>\n          </div>\n        );\n      }\n      \n      return <WrappedComponent {...props} />;\n    };\n  }, [validateAccess]);\n\n  // Get user permissions summary\n  const getPermissionsSummary = useCallback(() => {\n    return {\n      isAuthenticated,\n      isManager,\n      isAdmin,\n      isTechnician,\n      companyId,\n      permissions: {\n        managerFeatures: canAccessManagerFeatures(),\n        technicianManagement: canManageTechnicians(),\n        companyProfile: canEditCompanyProfile(),\n        auditLogs: canViewAuditLogs(),\n        dataExport: canExportData(),\n        inviteTechnicians: canInviteTechnicians(),\n        deactivateTechnicians: canDeactivateTechnicians(),\n        batchOperations: canPerformBatchOperations(),\n        uploadLogo: canUploadCompanyLogo(),\n      },\n    };\n  }, [\n    isAuthenticated,\n    isManager,\n    isAdmin,\n    isTechnician,\n    companyId,\n    canAccessManagerFeatures,\n    canManageTechnicians,\n    canEditCompanyProfile,\n    canViewAuditLogs,\n    canExportData,\n    canInviteTechnicians,\n    canDeactivateTechnicians,\n    canPerformBatchOperations,\n    canUploadCompanyLogo,\n  ]);\n\n  return {\n    // User role checks\n    isManager,\n    isAdmin,\n    isTechnician,\n    isAuthenticated,\n    user,\n    companyId,\n\n    // Permission checks\n    canAccessManagerFeatures,\n    canManageTechnicians,\n    canEditCompanyProfile,\n    canViewAuditLogs,\n    canExportData,\n    canInviteTechnicians,\n    canDeactivateTechnicians,\n    canPerformBatchOperations,\n    canUploadCompanyLogo,\n    belongsToSameCompany,\n\n    // Utilities\n    validateAccess,\n    withManagerAccess,\n    getPermissionsSummary,\n  };\n};\n\nexport default useManagerAccess;\n","import React, { useState } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { auditTechnicianAction, AUDIT_ACTIONS } from '../../utils/audit';\n\n/**\n * Invite Technician Modal Component\n * Handles technician invitation form\n */\nconst InviteTechnicianModal = ({ show, onHide, onSuccess }) => {\n  const { t } = useLanguage();\n  const { inviteTechnician } = useManager();\n  const { validateAccess } = useManagerAccess();\n  \n  // Form state\n  const [formData, setFormData] = useState({\n    email: '',\n    firstName: '',\n    lastName: '',\n    jobType: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Job types\n  const jobTypes = [\n    'Electrician',\n    'Plumber',\n    'HVAC Technician',\n    'Carpenter',\n    'General Maintenance',\n    'Appliance Repair',\n    'Landscaper',\n    'Painter',\n    'Cleaner',\n    'Other'\n  ];\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error for this field\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n\n  // Validate form\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Email validation\n    if (!formData.email.trim()) {\n      newErrors.email = t('manager.techManagement.inviteForm.errors.emailRequired');\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = t('manager.techManagement.inviteForm.errors.emailInvalid');\n    }\n\n    // First name validation\n    if (!formData.firstName.trim()) {\n      newErrors.firstName = t('manager.techManagement.inviteForm.errors.firstNameRequired');\n    } else if (formData.firstName.trim().length < 2) {\n      newErrors.firstName = t('manager.techManagement.inviteForm.errors.firstNameTooShort');\n    }\n\n    // Last name validation\n    if (!formData.lastName.trim()) {\n      newErrors.lastName = t('manager.techManagement.inviteForm.errors.lastNameRequired');\n    } else if (formData.lastName.trim().length < 2) {\n      newErrors.lastName = t('manager.techManagement.inviteForm.errors.lastNameTooShort');\n    }\n\n    // Job type validation\n    if (!formData.jobType) {\n      newErrors.jobType = t('manager.techManagement.inviteForm.errors.jobTypeRequired');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    // Check access\n    const { hasAccess } = await validateAccess('invitation_management');\n    if (!hasAccess) {\n      setErrors({ submit: t('common.accessDenied') });\n      return;\n    }\n\n    setIsSubmitting(true);\n    setErrors({});\n\n    try {\n      const result = await inviteTechnician({\n        email: formData.email.trim(),\n        first_name: formData.firstName.trim(),\n        last_name: formData.lastName.trim(),\n        job_type: formData.jobType\n      });\n\n      if (result.success) {\n        // Log the invitation\n        await auditTechnicianAction(\n          AUDIT_ACTIONS.TECHNICIAN_INVITED,\n          null,\n          `${formData.firstName} ${formData.lastName}`,\n          {\n            email: formData.email,\n            job_type: formData.jobType,\n            invitation_id: result.invitation?.id\n          }\n        );\n\n        // Reset form\n        setFormData({\n          email: '',\n          firstName: '',\n          lastName: '',\n          jobType: ''\n        });\n\n        // Call success callback\n        onSuccess();\n      } else {\n        // Handle specific error cases\n        if (result.error?.includes('already exists') || result.error?.includes('duplicate')) {\n          setErrors({ email: t('manager.techManagement.inviteForm.errors.emailExists') });\n        } else if (result.error?.includes('invalid email')) {\n          setErrors({ email: t('manager.techManagement.inviteForm.errors.emailInvalid') });\n        } else {\n          setErrors({ submit: result.error || t('common.errorOccurred') });\n        }\n      }\n    } catch (error) {\n      console.error('Error inviting technician:', error);\n      setErrors({ submit: t('common.errorOccurred') });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle modal close\n  const handleClose = () => {\n    if (!isSubmitting) {\n      setFormData({\n        email: '',\n        firstName: '',\n        lastName: '',\n        jobType: ''\n      });\n      setErrors({});\n      onHide();\n    }\n  };\n\n  if (!show) return null;\n\n  return (\n    <div className=\"modal fade show d-block\" tabIndex=\"-1\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">\n              <i className=\"bi bi-person-plus me-2\"></i>\n              {t('manager.techManagement.inviteForm.title')}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={handleClose}\n              disabled={isSubmitting}\n              aria-label={t('common.close')}\n            ></button>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"modal-body\">\n              <p className=\"text-muted mb-4\">\n                {t('manager.techManagement.inviteForm.description')}\n              </p>\n\n              {errors.submit && (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  <i className=\"bi bi-exclamation-triangle me-2\"></i>\n                  {errors.submit}\n                </div>\n              )}\n\n              <div className=\"row g-3\">\n                {/* Email */}\n                <div className=\"col-12\">\n                  <label htmlFor=\"email\" className=\"form-label\">\n                    {t('manager.techManagement.inviteForm.email')} <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"email\"\n                    className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    placeholder={t('manager.techManagement.inviteForm.emailPlaceholder')}\n                    disabled={isSubmitting}\n                    autoComplete=\"email\"\n                  />\n                  {errors.email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.email}\n                    </div>\n                  )}\n                  <div className=\"form-text\">\n                    {t('manager.techManagement.inviteForm.emailHelp')}\n                  </div>\n                </div>\n\n                {/* First Name */}\n                <div className=\"col-md-6\">\n                  <label htmlFor=\"firstName\" className=\"form-label\">\n                    {t('manager.techManagement.inviteForm.firstName')} <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleInputChange}\n                    placeholder={t('manager.techManagement.inviteForm.firstNamePlaceholder')}\n                    disabled={isSubmitting}\n                    autoComplete=\"given-name\"\n                  />\n                  {errors.firstName && (\n                    <div className=\"invalid-feedback\">\n                      {errors.firstName}\n                    </div>\n                  )}\n                </div>\n\n                {/* Last Name */}\n                <div className=\"col-md-6\">\n                  <label htmlFor=\"lastName\" className=\"form-label\">\n                    {t('manager.techManagement.inviteForm.lastName')} <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className={`form-control ${errors.lastName ? 'is-invalid' : ''}`}\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleInputChange}\n                    placeholder={t('manager.techManagement.inviteForm.lastNamePlaceholder')}\n                    disabled={isSubmitting}\n                    autoComplete=\"family-name\"\n                  />\n                  {errors.lastName && (\n                    <div className=\"invalid-feedback\">\n                      {errors.lastName}\n                    </div>\n                  )}\n                </div>\n\n                {/* Job Type */}\n                <div className=\"col-12\">\n                  <label htmlFor=\"jobType\" className=\"form-label\">\n                    {t('manager.techManagement.inviteForm.jobType')} <span className=\"text-danger\">*</span>\n                  </label>\n                  <select\n                    className={`form-select ${errors.jobType ? 'is-invalid' : ''}`}\n                    id=\"jobType\"\n                    name=\"jobType\"\n                    value={formData.jobType}\n                    onChange={handleInputChange}\n                    disabled={isSubmitting}\n                  >\n                    <option value=\"\">\n                      {t('manager.techManagement.inviteForm.jobTypePlaceholder')}\n                    </option>\n                    {jobTypes.map(type => (\n                      <option key={type} value={type}>\n                        {type}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.jobType && (\n                    <div className=\"invalid-feedback\">\n                      {errors.jobType}\n                    </div>\n                  )}\n                  <div className=\"form-text\">\n                    {t('manager.techManagement.inviteForm.jobTypeHelp')}\n                  </div>\n                </div>\n              </div>\n\n              {/* Information Box */}\n              <div className=\"alert alert-info mt-4\" role=\"alert\">\n                <i className=\"bi bi-info-circle me-2\"></i>\n                <strong>{t('manager.techManagement.inviteForm.infoTitle')}</strong>\n                <ul className=\"mb-0 mt-2\">\n                  <li>{t('manager.techManagement.inviteForm.info1')}</li>\n                  <li>{t('manager.techManagement.inviteForm.info2')}</li>\n                  <li>{t('manager.techManagement.inviteForm.info3')}</li>\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={handleClose}\n                disabled={isSubmitting}\n              >\n                {t('common.cancel')}\n              </button>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    {t('manager.techManagement.inviteForm.sending')}\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-envelope me-2\"></i>\n                    {t('manager.techManagement.inviteForm.sendInvitation')}\n                  </>\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InviteTechnicianModal;\n","import * as React from \"react\";\nfunction XMarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 18L18 6M6 6l12 12\"\n  }));\n}\nconst ForwardRef = React.forwardRef(XMarkIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n/**\n * Toast notification component\n * \n * @param {Object} props\n * @param {string} props.type - Type of toast: 'success', 'error', 'info', 'warning'\n * @param {string} props.message - Message to display\n * @param {number} props.duration - Duration in milliseconds before auto-dismissing\n * @param {boolean} props.show - Whether to show the toast\n * @param {function} props.onClose - Function to call when toast is closed\n */\nexport const Toast = ({ \n  type = 'info', \n  message, \n  duration = 5000, \n  show = true, \n  onClose \n}) => {\n  const [isVisible, setIsVisible] = useState(show);\n  \n  // Auto-dismiss after duration\n  useEffect(() => {\n    setIsVisible(show);\n    \n    if (show && duration) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n        if (onClose) onClose();\n      }, duration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [show, duration, onClose]);\n  \n  // Handle manual close\n  const handleClose = () => {\n    setIsVisible(false);\n    if (onClose) onClose();\n  };\n  \n  if (!isVisible) return null;\n  \n  // Determine styles based on type\n  const styles = {\n    success: 'bg-green-500 bg-opacity-20 border border-green-500 text-green-500',\n    error: 'bg-red-500 bg-opacity-20 border border-red-500 text-red-500',\n    warning: 'bg-yellow-500 bg-opacity-20 border border-yellow-500 text-yellow-500',\n    info: 'bg-blue-500 bg-opacity-20 border border-blue-500 text-blue-500',\n  };\n  \n  return (\n    <div className={`fixed bottom-4 right-4 z-50 px-4 py-3 rounded-md shadow-lg flex items-center justify-between ${styles[type] || styles.info}`}>\n      <div className=\"mr-3\">{message}</div>\n      <button \n        onClick={handleClose}\n        className=\"text-current hover:text-opacity-70\"\n        aria-label=\"Close\"\n      >\n        <XMarkIcon className=\"h-5 w-5\" />\n      </button>\n    </div>\n  );\n};\n\nexport default Toast;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { auditTechnicianAction, AUDIT_ACTIONS } from '../../utils/audit';\nimport InviteTechnicianModal from './InviteTechnicianModal';\nimport Toast from '../ui/Toast';\nimport './TechnicianManagement.css';\n\n/**\n * Technician Management Component\n * Handles listing, filtering, and managing technicians\n */\nconst TechnicianManagement = () => {\n  const { t } = useLanguage();\n  const {\n    technicians,\n    loadingTechnicians,\n    technicianError,\n    technicianFilter,\n    setTechnicianFilter,\n    selectedTechnicians,\n    setSelectedTechnicians,\n    fetchTechnicians,\n    updateTechnicianStatus,\n    batchUpdateTechnicians,\n    resendInvitation,\n    getTechnicianStats,\n    invitations\n  } = useManager();\n  \n  const { validateAccess } = useManagerAccess();\n  \n  // Local state\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [confirmationModal, setConfirmationModal] = useState(null);\n  const [toast, setToast] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  // Load technicians on mount\n  useEffect(() => {\n    fetchTechnicians();\n  }, [fetchTechnicians]);\n\n  // Filter and sort technicians\n  const filteredAndSortedTechnicians = useCallback(() => {\n    let filtered = technicians.filter(tech => {\n      const matchesSearch = !searchTerm || \n        tech.first_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        tech.last_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        tech.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        tech.job_type?.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      return matchesSearch;\n    });\n\n    // Sort technicians\n    filtered.sort((a, b) => {\n      let aValue, bValue;\n      \n      switch (sortBy) {\n        case 'name':\n          aValue = `${a.first_name || ''} ${a.last_name || ''}`.trim();\n          bValue = `${b.first_name || ''} ${b.last_name || ''}`.trim();\n          break;\n        case 'email':\n          aValue = a.email || '';\n          bValue = b.email || '';\n          break;\n        case 'status':\n          aValue = getStatusPriority(a);\n          bValue = getStatusPriority(b);\n          break;\n        case 'jobType':\n          aValue = a.job_type || '';\n          bValue = b.job_type || '';\n          break;\n        case 'lastActive':\n          aValue = new Date(a.last_login || 0);\n          bValue = new Date(b.last_login || 0);\n          break;\n        default:\n          aValue = a[sortBy] || '';\n          bValue = b[sortBy] || '';\n      }\n\n      if (sortBy === 'lastActive') {\n        return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\n      }\n\n      const comparison = aValue.toString().localeCompare(bValue.toString());\n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n    return filtered;\n  }, [technicians, searchTerm, sortBy, sortOrder]);\n\n  // Get status priority for sorting\n  const getStatusPriority = (technician) => {\n    if (technician.pending_invitation) return 3; // Pending\n    if (technician.is_active) return 1; // Active\n    return 2; // Deactivated\n  };\n\n  // Get technician status\n  const getTechnicianStatus = (technician) => {\n    if (technician.pending_invitation) {\n      return {\n        key: 'pending',\n        label: t('manager.techManagement.statusPending'),\n        class: 'warning'\n      };\n    }\n    if (technician.is_active) {\n      return {\n        key: 'active',\n        label: t('manager.techManagement.statusActive'),\n        class: 'success'\n      };\n    }\n    return {\n      key: 'deactivated',\n      label: t('manager.techManagement.statusDeactivated'),\n      class: 'secondary'\n    };\n  };\n\n  // Handle technician action\n  const handleTechnicianAction = async (technician, action) => {\n    const { hasAccess } = await validateAccess('technician_management');\n    if (!hasAccess) {\n      setToast({\n        type: 'error',\n        message: t('common.accessDenied')\n      });\n      return;\n    }\n\n    const technicianName = `${technician.first_name} ${technician.last_name}`;\n    \n    // Show confirmation modal for destructive actions\n    if (['deactivate', 'remove'].includes(action)) {\n      setConfirmationModal({\n        title: t(`manager.techManagement.confirmations.${action}.title`),\n        message: t(`manager.techManagement.confirmations.${action}.message`, { name: technicianName }),\n        confirmText: t(`manager.techManagement.confirmations.${action}.confirm`),\n        cancelText: t(`manager.techManagement.confirmations.${action}.cancel`),\n        variant: action === 'remove' ? 'danger' : 'warning',\n        showWarning: action === 'remove',\n        warningText: action === 'remove' ? t(`manager.techManagement.confirmations.${action}.warning`) : null,\n        onConfirm: () => executeTechnicianAction(technician, action, technicianName),\n        onCancel: () => setConfirmationModal(null)\n      });\n    } else {\n      await executeTechnicianAction(technician, action, technicianName);\n    }\n  };\n\n  // Execute technician action\n  const executeTechnicianAction = async (technician, action, technicianName) => {\n    setConfirmationModal(null);\n    \n    try {\n      let result;\n      \n      if (action === 'reinvite') {\n        // Find the invitation for this technician\n        const invitation = invitations.find(inv => inv.email === technician.email);\n        if (invitation) {\n          result = await resendInvitation(invitation.id);\n        } else {\n          throw new Error('Invitation not found');\n        }\n      } else {\n        result = await updateTechnicianStatus(technician.id, action);\n      }\n\n      if (result.success) {\n        // Log the action\n        await auditTechnicianAction(\n          AUDIT_ACTIONS[`TECHNICIAN_${action.toUpperCase()}`] || `technician_${action}`,\n          technician.id,\n          technicianName,\n          { action, previous_status: getTechnicianStatus(technician).key }\n        );\n\n        // Show success message\n        const messageKey = action === 'reinvite' ? 'invitationResent' : `technician${action.charAt(0).toUpperCase() + action.slice(1)}d`;\n        setToast({\n          type: 'success',\n          message: t(`manager.techManagement.messages.${messageKey}`)\n        });\n      } else {\n        throw new Error(result.error);\n      }\n    } catch (error) {\n      console.error(`Error ${action} technician:`, error);\n      setToast({\n        type: 'error',\n        message: error.message || t('common.errorOccurred')\n      });\n    }\n  };\n\n  // Handle batch actions\n  const handleBatchAction = async (action) => {\n    if (selectedTechnicians.length === 0) return;\n\n    const { hasAccess } = await validateAccess('batch_operations');\n    if (!hasAccess) {\n      setToast({\n        type: 'error',\n        message: t('common.accessDenied')\n      });\n      return;\n    }\n\n    // Show confirmation modal\n    setConfirmationModal({\n      title: t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.title`),\n      message: t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.message`, { count: selectedTechnicians.length }),\n      confirmText: t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.confirm`),\n      cancelText: t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.cancel`),\n      variant: action === 'remove' ? 'danger' : 'warning',\n      showWarning: action === 'remove',\n      warningText: action === 'remove' ? t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.warning`) : null,\n      onConfirm: () => executeBatchAction(action),\n      onCancel: () => setConfirmationModal(null)\n    });\n  };\n\n  // Execute batch action\n  const executeBatchAction = async (action) => {\n    setConfirmationModal(null);\n    \n    try {\n      const result = await batchUpdateTechnicians(selectedTechnicians, action);\n      \n      if (result.success || result.successCount > 0) {\n        // Log batch action\n        await auditTechnicianAction(\n          AUDIT_ACTIONS.BATCH_TECHNICIAN_UPDATE,\n          null,\n          'Multiple technicians',\n          {\n            action,\n            technician_ids: selectedTechnicians,\n            success_count: result.successCount,\n            failure_count: result.failureCount\n          }\n        );\n\n        // Show success message\n        const messageKey = `technicians${action.charAt(0).toUpperCase() + action.slice(1)}d`;\n        setToast({\n          type: result.failureCount > 0 ? 'warning' : 'success',\n          message: t(`manager.techManagement.messages.${messageKey}`, { count: result.successCount })\n        });\n\n        // Clear selection\n        setSelectedTechnicians([]);\n      } else {\n        throw new Error('Batch operation failed');\n      }\n    } catch (error) {\n      console.error(`Error batch ${action}:`, error);\n      setToast({\n        type: 'error',\n        message: t('common.errorOccurred')\n      });\n    }\n  };\n\n  // Handle select all\n  const handleSelectAll = () => {\n    if (selectedTechnicians.length === filteredAndSortedTechnicians().length) {\n      setSelectedTechnicians([]);\n    } else {\n      setSelectedTechnicians(filteredAndSortedTechnicians().map(tech => tech.id));\n    }\n  };\n\n  // Handle individual selection\n  const handleSelectTechnician = (technicianId) => {\n    setSelectedTechnicians(prev => {\n      if (prev.includes(technicianId)) {\n        return prev.filter(id => id !== technicianId);\n      } else {\n        return [...prev, technicianId];\n      }\n    });\n  };\n\n  const stats = getTechnicianStats();\n  const filteredTechnicians = filteredAndSortedTechnicians();\n\n  return (\n    <div className=\"technician-management\">\n      {/* Header */}\n      <div className=\"management-header mb-4\">\n        <div className=\"row align-items-center\">\n          <div className=\"col\">\n            <h2 className=\"h4 mb-1\">{t('manager.techManagement.title')}</h2>\n            <p className=\"text-muted mb-0\">{t('manager.techManagement.subtitle')}</p>\n          </div>\n          <div className=\"col-auto\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => setShowInviteModal(true)}\n            >\n              <i className=\"bi bi-person-plus me-2\"></i>\n              {t('manager.techManagement.inviteTechnician')}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Statistics */}\n      <div className=\"row g-3 mb-4\">\n        <div className=\"col-md-3\">\n          <div className=\"stat-card card\">\n            <div className=\"card-body\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"stat-icon bg-primary me-3\">\n                  <i className=\"bi bi-people-fill text-white\"></i>\n                </div>\n                <div>\n                  <h5 className=\"mb-0\">{stats.total}</h5>\n                  <small className=\"text-muted\">{t('manager.techManagement.totalTechnicians')}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"stat-card card\">\n            <div className=\"card-body\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"stat-icon bg-success me-3\">\n                  <i className=\"bi bi-check-circle-fill text-white\"></i>\n                </div>\n                <div>\n                  <h5 className=\"mb-0\">{stats.active}</h5>\n                  <small className=\"text-muted\">{t('manager.techManagement.activeTechnicians')}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"stat-card card\">\n            <div className=\"card-body\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"stat-icon bg-warning me-3\">\n                  <i className=\"bi bi-clock-fill text-white\"></i>\n                </div>\n                <div>\n                  <h5 className=\"mb-0\">{stats.pending}</h5>\n                  <small className=\"text-muted\">{t('manager.techManagement.pendingInvitations')}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"stat-card card\">\n            <div className=\"card-body\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"stat-icon bg-secondary me-3\">\n                  <i className=\"bi bi-pause-circle-fill text-white\"></i>\n                </div>\n                <div>\n                  <h5 className=\"mb-0\">{stats.deactivated}</h5>\n                  <small className=\"text-muted\">{t('manager.techManagement.deactivatedTechnicians')}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters and Search */}\n      <div className=\"filters-section card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row g-3 align-items-center\">\n            <div className=\"col-md-3\">\n              <label className=\"form-label\">{t('common.search')}</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">\n                  <i className=\"bi bi-search\"></i>\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder={t('common.searchPlaceholder')}\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('common.status')}</label>\n              <select\n                className=\"form-select\"\n                value={technicianFilter}\n                onChange={(e) => setTechnicianFilter(e.target.value)}\n              >\n                <option value=\"all\">{t('manager.techManagement.filterAll')}</option>\n                <option value=\"active\">{t('manager.techManagement.filterActive')}</option>\n                <option value=\"pending\">{t('manager.techManagement.filterPending')}</option>\n                <option value=\"deactivated\">{t('manager.techManagement.filterDeactivated')}</option>\n              </select>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('common.sortBy')}</label>\n              <select\n                className=\"form-select\"\n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value)}\n              >\n                <option value=\"name\">{t('manager.techManagement.name')}</option>\n                <option value=\"email\">{t('manager.techManagement.email')}</option>\n                <option value=\"status\">{t('manager.techManagement.status')}</option>\n                <option value=\"jobType\">{t('manager.techManagement.jobType')}</option>\n                <option value=\"lastActive\">{t('manager.techManagement.lastActive')}</option>\n              </select>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('common.order')}</label>\n              <select\n                className=\"form-select\"\n                value={sortOrder}\n                onChange={(e) => setSortOrder(e.target.value)}\n              >\n                <option value=\"asc\">{t('common.ascending')}</option>\n                <option value=\"desc\">{t('common.descending')}</option>\n              </select>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"form-label\">&nbsp;</div>\n              <div className=\"d-flex gap-2\">\n                {selectedTechnicians.length > 0 && (\n                  <div className=\"dropdown\">\n                    <button\n                      className=\"btn btn-outline-primary dropdown-toggle\"\n                      type=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                    >\n                      {t('manager.techManagement.batchActions')} ({selectedTechnicians.length})\n                    </button>\n                    <ul className=\"dropdown-menu\">\n                      <li>\n                        <button\n                          className=\"dropdown-item\"\n                          onClick={() => handleBatchAction('activate')}\n                        >\n                          <i className=\"bi bi-check-circle me-2\"></i>\n                          {t('manager.techManagement.batchActivate')}\n                        </button>\n                      </li>\n                      <li>\n                        <button\n                          className=\"dropdown-item\"\n                          onClick={() => handleBatchAction('deactivate')}\n                        >\n                          <i className=\"bi bi-pause-circle me-2\"></i>\n                          {t('manager.techManagement.batchDeactivate')}\n                        </button>\n                      </li>\n                      <li><hr className=\"dropdown-divider\" /></li>\n                      <li>\n                        <button\n                          className=\"dropdown-item text-danger\"\n                          onClick={() => handleBatchAction('remove')}\n                        >\n                          <i className=\"bi bi-trash me-2\"></i>\n                          {t('manager.techManagement.batchRemove')}\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Technicians Table */}\n      <div className=\"technicians-table card\">\n        <div className=\"card-body p-0\">\n          {loadingTechnicians ? (\n            <div className=\"text-center py-5\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">{t('manager.techManagement.messages.loadingTechnicians')}</span>\n              </div>\n              <p className=\"mt-2 text-muted\">{t('manager.techManagement.messages.loadingTechnicians')}</p>\n            </div>\n          ) : technicianError ? (\n            <div className=\"alert alert-danger m-3\" role=\"alert\">\n              <i className=\"bi bi-exclamation-triangle me-2\"></i>\n              {technicianError}\n            </div>\n          ) : filteredTechnicians.length === 0 ? (\n            <div className=\"text-center py-5\">\n              <i className=\"bi bi-people display-1 text-muted\"></i>\n              <p className=\"mt-3 text-muted\">{t('manager.techManagement.messages.noTechniciansFound')}</p>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => setShowInviteModal(true)}\n              >\n                <i className=\"bi bi-person-plus me-2\"></i>\n                {t('manager.techManagement.inviteTechnician')}\n              </button>\n            </div>\n          ) : (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover mb-0\">\n                <thead className=\"table-light\">\n                  <tr>\n                    <th>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          checked={selectedTechnicians.length === filteredTechnicians.length && filteredTechnicians.length > 0}\n                          onChange={handleSelectAll}\n                        />\n                      </div>\n                    </th>\n                    <th>{t('manager.techManagement.name')}</th>\n                    <th>{t('manager.techManagement.email')}</th>\n                    <th>{t('manager.techManagement.jobType')}</th>\n                    <th>{t('manager.techManagement.status')}</th>\n                    <th>{t('manager.techManagement.lastActive')}</th>\n                    <th>{t('manager.techManagement.actions')}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredTechnicians.map((technician) => {\n                    const status = getTechnicianStatus(technician);\n                    return (\n                      <tr key={technician.id}>\n                        <td>\n                          <div className=\"form-check\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"checkbox\"\n                              checked={selectedTechnicians.includes(technician.id)}\n                              onChange={() => handleSelectTechnician(technician.id)}\n                            />\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"d-flex align-items-center\">\n                            <div className=\"avatar me-3\">\n                              <div className=\"avatar-initials\">\n                                {(technician.first_name?.[0] || '') + (technician.last_name?.[0] || '')}\n                              </div>\n                            </div>\n                            <div>\n                              <div className=\"fw-medium\">\n                                {technician.first_name} {technician.last_name}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td>{technician.email}</td>\n                        <td>\n                          <span className=\"badge bg-light text-dark\">\n                            {technician.job_type || 'N/A'}\n                          </span>\n                        </td>\n                        <td>\n                          <span className={`badge bg-${status.class}`}>\n                            {status.label}\n                          </span>\n                        </td>\n                        <td>\n                          {technician.last_login ? \n                            new Date(technician.last_login).toLocaleDateString() : \n                            t('common.never')\n                          }\n                        </td>\n                        <td>\n                          <div className=\"dropdown\">\n                            <button\n                              className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n                              type=\"button\"\n                              data-bs-toggle=\"dropdown\"\n                            >\n                              {t('manager.techManagement.actions')}\n                            </button>\n                            <ul className=\"dropdown-menu\">\n                              {status.key === 'pending' && (\n                                <li>\n                                  <button\n                                    className=\"dropdown-item\"\n                                    onClick={() => handleTechnicianAction(technician, 'reinvite')}\n                                  >\n                                    <i className=\"bi bi-envelope me-2\"></i>\n                                    {t('manager.techManagement.reinvite')}\n                                  </button>\n                                </li>\n                              )}\n                              {status.key === 'deactivated' && (\n                                <li>\n                                  <button\n                                    className=\"dropdown-item\"\n                                    onClick={() => handleTechnicianAction(technician, 'activate')}\n                                  >\n                                    <i className=\"bi bi-check-circle me-2\"></i>\n                                    {t('manager.techManagement.activate')}\n                                  </button>\n                                </li>\n                              )}\n                              {status.key === 'active' && (\n                                <li>\n                                  <button\n                                    className=\"dropdown-item\"\n                                    onClick={() => handleTechnicianAction(technician, 'deactivate')}\n                                  >\n                                    <i className=\"bi bi-pause-circle me-2\"></i>\n                                    {t('manager.techManagement.deactivate')}\n                                  </button>\n                                </li>\n                              )}\n                              <li><hr className=\"dropdown-divider\" /></li>\n                              <li>\n                                <button\n                                  className=\"dropdown-item text-danger\"\n                                  onClick={() => handleTechnicianAction(technician, 'remove')}\n                                >\n                                  <i className=\"bi bi-trash me-2\"></i>\n                                  {t('manager.techManagement.remove')}\n                                </button>\n                              </li>\n                            </ul>\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Modals */}\n      {showInviteModal && (\n        <InviteTechnicianModal\n          show={showInviteModal}\n          onHide={() => setShowInviteModal(false)}\n          onSuccess={() => {\n            setShowInviteModal(false);\n            setToast({\n              type: 'success',\n              message: t('manager.techManagement.inviteForm.invitationSent')\n            });\n          }}\n        />\n      )}\n\n      {/* Toast Notifications */}\n      {toast && (\n        <Toast\n          type={toast.type}\n          message={toast.message}\n          show={true}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TechnicianManagement;\n","import React, { useState, useEffect } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useAuth } from '../../context/AuthContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport Toast from '../ui/Toast';\nimport './CompanyProfile.css';\n\n/**\n * Company Profile Component\n * Simplified version showing basic company info and settings placeholder\n */\nconst CompanyProfile = () => {\n  const { t } = useLanguage();\n  const { user } = useAuth();\n  const {\n    companyProfile,\n    loadingCompany,\n    companyError,\n    fetchCompanyProfile\n  } = useManager();\n  \n  const { validateAccess } = useManagerAccess();\n  const [toast, setToast] = useState(null);\n  \n  // Load company data on mount\n  useEffect(() => {\n    console.log('CompanyProfile: Component mounted, fetching company profile...');\n    fetchCompanyProfile();\n  }, [fetchCompanyProfile]);\n\n  // Validate access\n  useEffect(() => {\n    if (!validateAccess()) {\n      setToast({\n        type: 'error',\n        message: t('common.insufficientPermissions'),\n        duration: 5000\n      });\n    }\n  }, [validateAccess, t]);\n\n  const showToast = (type, message, duration = 3000) => {\n    setToast({ type, message, duration });\n  };\n\n  if (loadingCompany) {\n    return (\n      <div className=\"company-profile-container\">\n        <div className=\"loading-spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">{t('common.loading')}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (companyError) {\n    return (\n      <div className=\"company-profile-container\">\n        <div className=\"alert alert-danger\" role=\"alert\">\n          <h4 className=\"alert-heading\">{t('common.error')}</h4>\n          <p>{companyError}</p>\n          <button \n            className=\"btn btn-outline-danger\"\n            onClick={fetchCompanyProfile}\n          >\n            {t('common.retry')}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"company-profile-container\">\n      {toast && (\n        <Toast\n          type={toast.type}\n          message={toast.message}\n          duration={toast.duration}\n          onClose={() => setToast(null)}\n        />\n      )}\n\n      {/* Company Profile Section */}\n      <div className=\"card shadow-sm border mb-4\">\n        <div className=\"card-header bg-primary text-white\">\n          <h3 className=\"card-title mb-0\">\n            <i className=\"fas fa-building me-2\"></i>\n            {t('manager.companyProfile.title')}\n          </h3>\n        </div>\n        \n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <strong>{t('manager.companyProfile.companyName')}:</strong>\n                <span className=\"ms-2\">{companyProfile?.name || t('common.notAvailable')}</span>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <strong>{t('manager.companyProfile.managerName')}:</strong>\n                <span className=\"ms-2\">{user?.first_name && user?.last_name ? `${user.first_name} ${user.last_name}` : user?.email || t('common.notAvailable')}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <strong>{t('manager.companyProfile.technicianCount')}:</strong>\n                <span className=\"ms-2\">0</span>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <strong>{t('manager.companyProfile.rateSheet')}:</strong>\n                <div className=\"ms-2 d-inline-block\">\n                  <button className=\"btn btn-outline-primary btn-sm me-2\" disabled>\n                    <i className=\"fas fa-upload me-1\"></i>\n                    {t('manager.companyProfile.uploadRateSheet')}\n                  </button>\n                  <small className=\"text-muted\">{t('manager.companyProfile.rateSheetNote')}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Settings Section */}\n      <div className=\"card shadow-sm border\">\n        <div className=\"card-header bg-secondary text-white\">\n          <h3 className=\"card-title mb-0\">\n            <i className=\"fas fa-cog me-2\"></i>\n            {t('manager.settings.title')}\n          </h3>\n        </div>\n        \n        <div className=\"card-body\">\n          <div className=\"text-center py-4\">\n            <i className=\"fas fa-tools fa-3x text-muted mb-3\"></i>\n            <p className=\"text-muted mb-0\">{t('manager.settings.comingSoon')}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyProfile;\n","import React from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\n\n/**\n * Invoicing Component\n * Basic framework for invoice management - functionality to be added later\n */\nconst Invoicing = () => {\n  const { t } = useLanguage();\n  const { validateAccess } = useManagerAccess();\n\n  // Validate manager access\n  if (!validateAccess()) {\n    return null;\n  }\n\n  return (\n    <div className=\"invoicing-container\">\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <div>\n          <h1 className=\"h2 mb-1\">{t('manager.invoicing.title')}</h1>\n          <p className=\"text-muted mb-0\">{t('manager.invoicing.subtitle')}</p>\n        </div>\n      </div>\n\n      {/* Main Content Area */}\n      <div className=\"card shadow-sm border\">\n        <div className=\"card-header bg-primary text-white\">\n          <h3 className=\"card-title mb-0\">\n            <i className=\"fas fa-file-invoice me-2\"></i>\n            {t('manager.invoicing.title')}\n          </h3>\n        </div>\n        \n        <div className=\"card-body\">\n          <div className=\"text-center py-5\">\n            <i className=\"fas fa-file-invoice fa-4x text-muted mb-4\"></i>\n            <h4 className=\"text-muted mb-3\">{t('manager.invoicing.comingSoon')}</h4>\n            <p className=\"text-muted\">\n              {t('manager.invoicing.description')}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Invoicing;\n","import React from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\n\n/**\n * Job Tickets Component\n * Basic framework for job ticket management - functionality to be added later\n */\nconst JobTickets = () => {\n  const { t } = useLanguage();\n  const { validateAccess } = useManagerAccess();\n\n  // Validate manager access\n  if (!validateAccess()) {\n    return null;\n  }\n\n  return (\n    <div className=\"job-tickets-container\">\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <div>\n          <h1 className=\"h2 mb-1\">{t('manager.jobTickets.title')}</h1>\n          <p className=\"text-muted mb-0\">{t('manager.jobTickets.subtitle')}</p>\n        </div>\n      </div>\n\n      {/* Main Content Area */}\n      <div className=\"card shadow-sm border\">\n        <div className=\"card-header bg-success text-white\">\n          <h3 className=\"card-title mb-0\">\n            <i className=\"fas fa-clipboard-list me-2\"></i>\n            {t('manager.jobTickets.title')}\n          </h3>\n        </div>\n        \n        <div className=\"card-body\">\n          <div className=\"text-center py-5\">\n            <i className=\"fas fa-clipboard-list fa-4x text-muted mb-4\"></i>\n            <h4 className=\"text-muted mb-3\">{t('manager.jobTickets.comingSoon')}</h4>\n            <p className=\"text-muted\">\n              {t('manager.jobTickets.description')}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobTickets;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { fetchAuditLogs, exportAuditLogs, AUDIT_CATEGORIES } from '../../utils/audit';\nimport Toast from '../ui/Toast';\nimport './AuditLogs.css';\n\n/**\n * Audit Logs Component\n * Displays audit logs with filtering, pagination, and export functionality\n */\nconst AuditLogs = () => {\n  const { t } = useLanguage();\n  const { auditLogs, loadingAuditLogs, auditError } = useManager();\n  const { validateAccess } = useManagerAccess();\n  \n  // Local state\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [toast, setToast] = useState(null);\n  \n  // Filters\n  const [filters, setFilters] = useState({\n    category: '',\n    action: '',\n    user: '',\n    dateFrom: '',\n    dateTo: '',\n    search: ''\n  });\n  \n  // Pagination\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 50,\n    total: 0,\n    totalPages: 0\n  });\n  \n  // Sorting\n  const [sortBy, setSortBy] = useState('timestamp');\n  const [sortOrder, setSortOrder] = useState('desc');\n  \n  // Export state\n  const [exporting, setExporting] = useState(false);\n\n  // Load audit logs\n  const loadAuditLogs = useCallback(async () => {\n    const { hasAccess } = await validateAccess('audit_logs');\n    if (!hasAccess) {\n      setError(t('common.accessDenied'));\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const params = {\n        page: pagination.page,\n        limit: pagination.limit,\n        sort_by: sortBy,\n        sort_order: sortOrder,\n        ...filters\n      };\n\n      // Remove empty filters\n      Object.keys(params).forEach(key => {\n        if (!params[key]) delete params[key];\n      });\n\n      const result = await fetchAuditLogs(params);\n      \n      if (result.success) {\n        setLogs(result.logs || []);\n        setPagination(prev => ({\n          ...prev,\n          total: result.total || 0,\n          totalPages: Math.ceil((result.total || 0) / prev.limit)\n        }));\n      } else {\n        throw new Error(result.error || 'Failed to fetch audit logs');\n      }\n    } catch (error) {\n      console.error('Error loading audit logs:', error);\n      setError(error.message || t('common.errorOccurred'));\n    } finally {\n      setLoading(false);\n    }\n  }, [pagination.page, pagination.limit, sortBy, sortOrder, filters, validateAccess, t]);\n\n  // Load logs on mount and when dependencies change\n  useEffect(() => {\n    loadAuditLogs();\n  }, [loadAuditLogs]);\n\n  // Handle filter change\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    setPagination(prev => ({\n      ...prev,\n      page: 1\n    }));\n  };\n\n  // Handle sort change\n  const handleSortChange = (newSortBy) => {\n    if (sortBy === newSortBy) {\n      setSortOrder(prev => prev === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(newSortBy);\n      setSortOrder('desc');\n    }\n    setPagination(prev => ({\n      ...prev,\n      page: 1\n    }));\n  };\n\n  // Handle page change\n  const handlePageChange = (newPage) => {\n    setPagination(prev => ({\n      ...prev,\n      page: newPage\n    }));\n  };\n\n  // Handle export\n  const handleExport = async () => {\n    const { hasAccess } = await validateAccess('data_export');\n    if (!hasAccess) {\n      setToast({\n        type: 'error',\n        message: t('common.accessDenied')\n      });\n      return;\n    }\n\n    setExporting(true);\n\n    try {\n      const params = {\n        ...filters,\n        sort_by: sortBy,\n        sort_order: sortOrder\n      };\n\n      // Remove empty filters\n      Object.keys(params).forEach(key => {\n        if (!params[key]) delete params[key];\n      });\n\n      const result = await exportAuditLogs(params);\n      \n      if (result.success) {\n        // Create download link\n        const blob = new Blob([result.csv], { type: 'text/csv' });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `audit-logs-${new Date().toISOString().split('T')[0]}.csv`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n\n        setToast({\n          type: 'success',\n          message: t('manager.auditLogs.messages.exportSuccess')\n        });\n      } else {\n        throw new Error(result.error || 'Export failed');\n      }\n    } catch (error) {\n      console.error('Error exporting audit logs:', error);\n      setToast({\n        type: 'error',\n        message: error.message || t('common.errorOccurred')\n      });\n    } finally {\n      setExporting(false);\n    }\n  };\n\n  // Clear filters\n  const clearFilters = () => {\n    setFilters({\n      category: '',\n      action: '',\n      user: '',\n      dateFrom: '',\n      dateTo: '',\n      search: ''\n    });\n    setPagination(prev => ({\n      ...prev,\n      page: 1\n    }));\n  };\n\n  // Format log entry\n  const formatLogEntry = (log) => {\n    const timestamp = new Date(log.timestamp).toLocaleString();\n    const category = log.category || 'System';\n    const action = log.action || 'Unknown';\n    const user = log.user_name || log.user_email || 'System';\n    const details = log.details ? JSON.stringify(log.details, null, 2) : '';\n    \n    return {\n      ...log,\n      formattedTimestamp: timestamp,\n      formattedCategory: category,\n      formattedAction: action,\n      formattedUser: user,\n      formattedDetails: details\n    };\n  };\n\n  // Get category badge class\n  const getCategoryBadgeClass = (category) => {\n    switch (category?.toLowerCase()) {\n      case 'security': return 'bg-danger';\n      case 'user': return 'bg-primary';\n      case 'company': return 'bg-info';\n      case 'technician': return 'bg-success';\n      case 'system': return 'bg-secondary';\n      default: return 'bg-light text-dark';\n    }\n  };\n\n  // Get unique categories and actions for filters\n  const getFilterOptions = () => {\n    const categories = [...new Set(logs.map(log => log.category).filter(Boolean))];\n    const actions = [...new Set(logs.map(log => log.action).filter(Boolean))];\n    const users = [...new Set(logs.map(log => log.user_name || log.user_email).filter(Boolean))];\n    \n    return { categories, actions, users };\n  };\n\n  const { categories, actions, users } = getFilterOptions();\n\n  return (\n    <div className=\"audit-logs\">\n      {/* Header */}\n      <div className=\"logs-header mb-4\">\n        <div className=\"row align-items-center\">\n          <div className=\"col\">\n            <h2 className=\"h4 mb-1\">{t('manager.auditLogs.title')}</h2>\n            <p className=\"text-muted mb-0\">{t('manager.auditLogs.subtitle')}</p>\n          </div>\n          <div className=\"col-auto\">\n            <button\n              className=\"btn btn-outline-primary\"\n              onClick={handleExport}\n              disabled={exporting || logs.length === 0}\n            >\n              {exporting ? (\n                <>\n                  <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                  {t('manager.auditLogs.exporting')}\n                </>\n              ) : (\n                <>\n                  <i className=\"bi bi-download me-2\"></i>\n                  {t('manager.auditLogs.exportLogs')}\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"filters-section card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row g-3 align-items-end\">\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.category')}</label>\n              <select\n                className=\"form-select\"\n                value={filters.category}\n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">{t('common.all')}</option>\n                {Object.values(AUDIT_CATEGORIES).map(category => (\n                  <option key={category} value={category}>\n                    {t(`manager.auditLogs.categories.${category.toLowerCase()}`)}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.action')}</label>\n              <select\n                className=\"form-select\"\n                value={filters.action}\n                onChange={(e) => handleFilterChange('action', e.target.value)}\n              >\n                <option value=\"\">{t('common.all')}</option>\n                {actions.map(action => (\n                  <option key={action} value={action}>\n                    {action}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.user')}</label>\n              <select\n                className=\"form-select\"\n                value={filters.user}\n                onChange={(e) => handleFilterChange('user', e.target.value)}\n              >\n                <option value=\"\">{t('common.all')}</option>\n                {users.map(user => (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.dateFrom')}</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={filters.dateFrom}\n                onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.dateTo')}</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={filters.dateTo}\n                onChange={(e) => handleFilterChange('dateTo', e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-2\">\n              <div className=\"d-flex gap-2\">\n                <button\n                  className=\"btn btn-outline-secondary\"\n                  onClick={clearFilters}\n                  title={t('manager.auditLogs.clearFilters')}\n                >\n                  <i className=\"bi bi-x-circle\"></i>\n                </button>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={loadAuditLogs}\n                  disabled={loading}\n                  title={t('common.refresh')}\n                >\n                  <i className=\"bi bi-arrow-clockwise\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"row g-3 mt-2\">\n            <div className=\"col-md-6\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder={t('manager.auditLogs.filters.searchPlaceholder')}\n                value={filters.search}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"d-flex align-items-center gap-3\">\n                <small className=\"text-muted\">\n                  {t('manager.auditLogs.totalLogs', { count: pagination.total })}\n                </small>\n                <select\n                  className=\"form-select form-select-sm\"\n                  style={{ width: 'auto' }}\n                  value={pagination.limit}\n                  onChange={(e) => setPagination(prev => ({ ...prev, limit: parseInt(e.target.value), page: 1 }))}\n                >\n                  <option value={25}>25</option>\n                  <option value={50}>50</option>\n                  <option value={100}>100</option>\n                </select>\n                <small className=\"text-muted\">{t('manager.auditLogs.perPage')}</small>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Logs Table */}\n      <div className=\"logs-table card\">\n        <div className=\"card-body p-0\">\n          {loading ? (\n            <div className=\"text-center py-5\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">{t('manager.auditLogs.messages.loadingLogs')}</span>\n              </div>\n              <p className=\"mt-2 text-muted\">{t('manager.auditLogs.messages.loadingLogs')}</p>\n            </div>\n          ) : error ? (\n            <div className=\"alert alert-danger m-3\" role=\"alert\">\n              <i className=\"bi bi-exclamation-triangle me-2\"></i>\n              {error}\n            </div>\n          ) : logs.length === 0 ? (\n            <div className=\"text-center py-5\">\n              <i className=\"bi bi-journal-text display-1 text-muted\"></i>\n              <p className=\"mt-3 text-muted\">{t('manager.auditLogs.messages.noLogsFound')}</p>\n            </div>\n          ) : (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover mb-0\">\n                <thead className=\"table-light\">\n                  <tr>\n                    <th \n                      className=\"sortable\"\n                      onClick={() => handleSortChange('timestamp')}\n                    >\n                      {t('manager.auditLogs.timestamp')}\n                      {sortBy === 'timestamp' && (\n                        <i className={`bi bi-arrow-${sortOrder === 'asc' ? 'up' : 'down'} ms-1`}></i>\n                      )}\n                    </th>\n                    <th \n                      className=\"sortable\"\n                      onClick={() => handleSortChange('category')}\n                    >\n                      {t('manager.auditLogs.category')}\n                      {sortBy === 'category' && (\n                        <i className={`bi bi-arrow-${sortOrder === 'asc' ? 'up' : 'down'} ms-1`}></i>\n                      )}\n                    </th>\n                    <th \n                      className=\"sortable\"\n                      onClick={() => handleSortChange('action')}\n                    >\n                      {t('manager.auditLogs.action')}\n                      {sortBy === 'action' && (\n                        <i className={`bi bi-arrow-${sortOrder === 'asc' ? 'up' : 'down'} ms-1`}></i>\n                      )}\n                    </th>\n                    <th \n                      className=\"sortable\"\n                      onClick={() => handleSortChange('user_name')}\n                    >\n                      {t('manager.auditLogs.user')}\n                      {sortBy === 'user_name' && (\n                        <i className={`bi bi-arrow-${sortOrder === 'asc' ? 'up' : 'down'} ms-1`}></i>\n                      )}\n                    </th>\n                    <th>{t('manager.auditLogs.description')}</th>\n                    <th>{t('manager.auditLogs.ipAddress')}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {logs.map((log) => {\n                    const formattedLog = formatLogEntry(log);\n                    return (\n                      <tr key={log.id}>\n                        <td>\n                          <small className=\"text-muted\">\n                            {formattedLog.formattedTimestamp}\n                          </small>\n                        </td>\n                        <td>\n                          <span className={`badge ${getCategoryBadgeClass(log.category)}`}>\n                            {t(`manager.auditLogs.categories.${(log.category || 'system').toLowerCase()}`)}\n                          </span>\n                        </td>\n                        <td>\n                          <code className=\"small\">{log.action}</code>\n                        </td>\n                        <td>\n                          <div className=\"d-flex align-items-center\">\n                            <div className=\"avatar-sm me-2\">\n                              <div className=\"avatar-initials-sm\">\n                                {(formattedLog.formattedUser[0] || 'S').toUpperCase()}\n                              </div>\n                            </div>\n                            <div>\n                              <div className=\"small fw-medium\">{formattedLog.formattedUser}</div>\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"log-description\">\n                            {log.description || log.action}\n                            {log.details && (\n                              <button\n                                className=\"btn btn-link btn-sm p-0 ms-2\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target={`#details-${log.id}`}\n                                aria-expanded=\"false\"\n                              >\n                                <i className=\"bi bi-info-circle\"></i>\n                              </button>\n                            )}\n                          </div>\n                          {log.details && (\n                            <div className=\"collapse mt-2\" id={`details-${log.id}`}>\n                              <div className=\"card card-body small\">\n                                <pre className=\"mb-0\">{formattedLog.formattedDetails}</pre>\n                              </div>\n                            </div>\n                          )}\n                        </td>\n                        <td>\n                          <small className=\"text-muted font-monospace\">\n                            {log.ip_address || 'N/A'}\n                          </small>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Pagination */}\n      {pagination.totalPages > 1 && (\n        <div className=\"d-flex justify-content-between align-items-center mt-4\">\n          <div>\n            <small className=\"text-muted\">\n              {t('manager.auditLogs.showingResults', {\n                start: (pagination.page - 1) * pagination.limit + 1,\n                end: Math.min(pagination.page * pagination.limit, pagination.total),\n                total: pagination.total\n              })}\n            </small>\n          </div>\n          <nav>\n            <ul className=\"pagination pagination-sm mb-0\">\n              <li className={`page-item ${pagination.page === 1 ? 'disabled' : ''}`}>\n                <button\n                  className=\"page-link\"\n                  onClick={() => handlePageChange(pagination.page - 1)}\n                  disabled={pagination.page === 1}\n                >\n                  <i className=\"bi bi-chevron-left\"></i>\n                </button>\n              </li>\n              {Array.from({ length: Math.min(5, pagination.totalPages) }, (_, i) => {\n                const page = Math.max(1, Math.min(pagination.totalPages - 4, pagination.page - 2)) + i;\n                return (\n                  <li key={page} className={`page-item ${pagination.page === page ? 'active' : ''}`}>\n                    <button\n                      className=\"page-link\"\n                      onClick={() => handlePageChange(page)}\n                    >\n                      {page}\n                    </button>\n                  </li>\n                );\n              })}\n              <li className={`page-item ${pagination.page === pagination.totalPages ? 'disabled' : ''}`}>\n                <button\n                  className=\"page-link\"\n                  onClick={() => handlePageChange(pagination.page + 1)}\n                  disabled={pagination.page === pagination.totalPages}\n                >\n                  <i className=\"bi bi-chevron-right\"></i>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      )}\n\n      {/* Toast Notifications */}\n      {toast && (\n        <Toast\n          type={toast.type}\n          message={toast.message}\n          show={true}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AuditLogs;\n","import * as React from \"react\";\nfunction HomeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"\n  }));\n}\nconst ForwardRef = React.forwardRef(HomeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClipboardDocumentListIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25zM6.75 12h.008v.008H6.75V12zm0 3h.008v.008H6.75V15zm0 3h.008v.008H6.75V18z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ClipboardDocumentListIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction BuildingOfficeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 21h16.5M4.5 3h15M5.25 3v18m13.5-18v18M9 6.75h1.5m-1.5 3h1.5m-1.5 3h1.5m3-6H15m-1.5 3H15m-1.5 3H15M9 21v-3.375c0-.621.504-1.125 1.125-1.125h3.75c.621 0 1.125.504 1.125 1.125V21\"\n  }));\n}\nconst ForwardRef = React.forwardRef(BuildingOfficeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction UsersIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(UsersIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction Cog6ToothIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.324.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 011.37.49l1.296 2.247a1.125 1.125 0 01-.26 1.431l-1.003.827c-.293.24-.438.613-.431.992a6.759 6.759 0 010 .255c-.007.378.138.75.43.99l1.005.828c.424.35.534.954.26 1.43l-1.298 2.247a1.125 1.125 0 01-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.57 6.57 0 01-.22.128c-.331.183-.581.495-.644.869l-.213 1.28c-.09.543-.56.941-1.11.941h-2.594c-.55 0-1.02-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 01-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 01-1.369-.49l-1.297-2.247a1.125 1.125 0 01.26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.932 6.932 0 010-.255c.007-.378-.138-.75-.43-.99l-1.004-.828a1.125 1.125 0 01-.26-1.43l1.297-2.247a1.125 1.125 0 011.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(Cog6ToothIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowRightOnRectangleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15m3 0l3-3m0 0l-3-3m3 3H9\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ArrowRightOnRectangleIcon);\nexport default ForwardRef;","import React, { useState, useEffect, useRef } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { useAuth } from '../../context/AuthContext';\nimport TechnicianManagement from './TechnicianManagement';\nimport CompanyProfile from './CompanyProfile';\nimport Invoicing from './Invoicing';\nimport JobTickets from './JobTickets';\nimport AuditLogs from './AuditLogs';\nimport { \n  HomeIcon, \n  UsersIcon, \n  BuildingOfficeIcon, \n  ClipboardDocumentListIcon,\n  DocumentTextIcon,\n  Cog6ToothIcon,\n  Bars3Icon,\n  XMarkIcon,\n  ArrowRightOnRectangleIcon\n} from '@heroicons/react/24/outline';\nimport LanguageToggle from '../LanguageToggle';\n\n/**\n * Main Manager Dashboard Component\n * Provides navigation and content area for manager-specific features\n */\nconst ManagerDashboard = () => {\n  const { t } = useLanguage();\n  const { hasManagerAccess, getTechnicianStats } = useManager();\n  const { validateAccess } = useManagerAccess();\n  const { user, logout } = useAuth();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [accessValidated, setAccessValidated] = useState(false);\n  const [accessError, setAccessError] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const toggleButtonRef = useRef();\n  const sidebarRef = useRef();\n\n  // Validate access on component mount\n  useEffect(() => {\n    const checkAccess = async () => {\n      const { hasAccess, reason } = await validateAccess('manager_features');\n      if (hasAccess) {\n        setAccessValidated(true);\n      } else {\n        setAccessError(reason);\n      }\n    };\n    \n    checkAccess();\n  }, [validateAccess]);\n\n  // Handle clicks outside the sidebar to close it on mobile\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (window.innerWidth >= 768) return;\n      \n      if (\n        sidebarOpen && \n        sidebarRef.current && \n        !sidebarRef.current.contains(event.target) &&\n        toggleButtonRef.current && \n        !toggleButtonRef.current.contains(event.target)\n      ) {\n        setSidebarOpen(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [sidebarOpen]);\n\n  // Navigation items\n  const navigationItems = [\n    {\n      id: 'overview',\n      label: t('manager.overview'),\n      icon: HomeIcon,\n      component: <OverviewTab stats={getTechnicianStats()} setActiveTab={setActiveTab} />\n    },\n    {\n      id: 'invoicing',\n      label: t('manager.invoicing.title'),\n      icon: DocumentTextIcon,\n      component: <Invoicing />\n    },\n    {\n      id: 'jobTickets',\n      label: t('manager.jobTickets.title'),\n      icon: ClipboardDocumentListIcon,\n      component: <JobTickets />\n    },\n    {\n      id: 'company',\n      label: t('manager.company'),\n      icon: BuildingOfficeIcon,\n      component: <CompanyProfile />\n    },\n    {\n      id: 'technicians',\n      label: t('manager.technicians'),\n      icon: UsersIcon,\n      component: <TechnicianManagement />\n    },\n    {\n      id: 'audit',\n      label: t('audit.title'),\n      icon: Cog6ToothIcon,\n      component: <AuditLogs />\n    }\n  ];\n\n  // Handle access errors\n  if (accessError) {\n    return (\n      <div className=\"bg-slate-900 min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-red-400 text-6xl mb-4\">⚠️</div>\n          <h2 className=\"text-2xl font-bold text-white mb-2\">{t('common.accessDenied')}</h2>\n          <p className=\"text-gray-400 mb-4\">{accessError}</p>\n          <p className=\"text-gray-500\">{t('common.contactAdmin')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Loading state\n  if (!accessValidated) {\n    return (\n      <div className=\"bg-slate-900 min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-gray-400\">{t('common.loading')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-slate-900 min-h-screen\">\n      {/* Header area for language toggle */}\n      <div className=\"h-14 relative\">\n        <LanguageToggle />\n      </div>\n      \n      <div className=\"flex\">\n        {/* Mobile sidebar toggle */}\n        <button\n          ref={toggleButtonRef}\n          className=\"md:hidden fixed top-4 left-4 z-50 p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700\"\n          onClick={() => setSidebarOpen(!sidebarOpen)}\n        >\n          <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n        </button>\n        \n        {/* Sidebar */}\n        <div\n          ref={sidebarRef}\n          className={`${\n            sidebarOpen ? 'translate-x-0' : '-translate-x-full'\n          } md:translate-x-0 transition-transform duration-300 ease-in-out fixed md:static inset-y-0 left-0 z-40 w-64 bg-gray-800 border-r border-gray-700 h-screen`}\n        >\n          <div className=\"flex h-full flex-col gap-y-3 md:gap-y-4 overflow-y-auto px-6 py-4 pt-16 md:pt-4\">\n            {/* Company/Manager Header - moved down on mobile to avoid hamburger overlap */}\n            <div className=\"flex h-16 shrink-0 items-center\">\n              <div className=\"flex items-center\">\n                <BuildingOfficeIcon className=\"h-8 w-8 text-blue-500 mr-3\" />\n                <div>\n                  <h2 className=\"text-lg font-semibold text-white\">\n                    {user?.company_name || t('manager.dashboard')}\n                  </h2>\n                  <p className=\"text-sm text-gray-400\">{t('manager.portal')}</p>\n                </div>\n              </div>\n            </div>\n            \n            {/* Navigation */}\n            <nav className=\"flex flex-1 flex-col\">\n              <ul className=\"flex flex-1 flex-col gap-y-4 md:gap-y-5\">\n                <li>\n                  <ul className=\"-mx-2 space-y-1\">\n                    {navigationItems.map((item) => {\n                      const Icon = item.icon;\n                      return (\n                        <li key={item.id}>\n                          <button\n                            onClick={() => {\n                              setActiveTab(item.id);\n                              setSidebarOpen(false); // Close mobile sidebar\n                            }}\n                            className={`${\n                              activeTab === item.id\n                                ? 'bg-gray-700 text-white'\n                                : 'text-gray-300 hover:text-white hover:bg-gray-700'\n                            } group flex w-full gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold transition-colors duration-200`}\n                          >\n                            <Icon className=\"h-6 w-6 shrink-0\" aria-hidden=\"true\" />\n                            {item.label}\n                          </button>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </li>\n                \n                {/* User section at bottom */}\n                <li className=\"mt-auto\">\n                  <div className=\"border-t border-gray-700 pt-3 md:pt-4\">\n                    <div className=\"flex items-center gap-x-3 mb-2 md:mb-3\">\n                      <div className=\"flex h-8 w-8 items-center justify-center rounded-full bg-blue-600\">\n                        <span className=\"text-sm font-medium text-white\">\n                          {user?.name?.charAt(0)?.toUpperCase() || 'M'}\n                        </span>\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium text-white truncate\">\n                          {user?.name || t('common.manager')}\n                        </p>\n                        <p className=\"text-xs text-gray-400 truncate\">\n                          {user?.email}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <button\n                      onClick={logout}\n                      className=\"group flex w-full gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold text-gray-300 hover:text-white hover:bg-gray-700 transition-colors duration-200\"\n                    >\n                      <ArrowRightOnRectangleIcon className=\"h-6 w-6 shrink-0\" aria-hidden=\"true\" />\n                      {t('auth.logout')}\n                    </button>\n                  </div>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n        \n        {/* Main content */}\n        <main className=\"flex-1 bg-slate-900 p-6 overflow-y-auto text-white\">\n          <div className=\"mt-2 md:mt-0 pl-14 md:pl-0 md:ml-64\">\n            <div className=\"max-w-7xl mx-auto\">\n              {/* Page Header */}\n              <div className=\"mb-8\">\n                <h1 className=\"text-3xl font-bold text-white\">\n                  {navigationItems.find(item => item.id === activeTab)?.label}\n                </h1>\n                <p className=\"text-gray-400 mt-2\">\n                  {activeTab === 'overview' && t('manager.dashboardSubtitle')}\n                  {activeTab === 'technicians' && t('manager.manageTechnicians')}\n                  {activeTab === 'invoicing' && t('manager.invoicing.subtitle')}\n                  {activeTab === 'jobTickets' && t('manager.jobTickets.subtitle')}\n                  {activeTab === 'company' && t('manager.manageCompany')}\n                  {activeTab === 'audit' && t('audit.viewLogs')}\n                </p>\n              </div>\n              \n              {/* Tab Content */}\n              <div className=\"bg-gray-800 rounded-lg shadow-xl\">\n                {navigationItems.find(item => item.id === activeTab)?.component}\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\n// Overview Tab Component\nconst OverviewTab = ({ stats, setActiveTab }) => {\n  const { t } = useLanguage();\n  const { user } = useAuth();\n\n  const overviewCards = [\n    {\n      title: t('manager.totalTechnicians'),\n      value: stats?.totalTechnicians || 0,\n      icon: UsersIcon,\n      color: 'blue',\n      description: t('manager.activeTechnicians')\n    },\n    {\n      title: t('manager.totalWorkHours'),\n      value: stats?.totalWorkHours || 0,\n      icon: Cog6ToothIcon,\n      color: 'yellow',\n      description: t('manager.thisMonth')\n    },\n    {\n      title: t('manager.completedJobs'),\n      value: stats?.completedJobs || 0,\n      icon: ClipboardDocumentListIcon,\n      color: 'green',\n      description: t('manager.thisMonth')\n    }\n  ];\n\n  return (\n    <div className=\"p-6\">\n      {/* Welcome Section */}\n      <div className=\"mb-8\">\n        <h2 className=\"text-2xl font-bold text-white mb-2\">\n          {t('common.welcome')}, {user?.name}!\n        </h2>\n        <p className=\"text-gray-400\">\n          {t('manager.overviewDescription')}\n        </p>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        {overviewCards.map((card, index) => {\n          const Icon = card.icon;\n          const colorClasses = {\n            blue: 'bg-blue-600 text-blue-100',\n            yellow: 'bg-yellow-600 text-yellow-100',\n            green: 'bg-green-600 text-green-100'\n          };\n          \n          return (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-6 border border-gray-600\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-gray-400 text-sm font-medium\">{card.title}</p>\n                  <p className=\"text-3xl font-bold text-white mt-2\">{card.value}</p>\n                  <p className=\"text-gray-500 text-sm mt-1\">{card.description}</p>\n                </div>\n                <div className={`p-3 rounded-full ${colorClasses[card.color]}`}>\n                  <Icon className=\"h-6 w-6\" />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Quick Actions */}\n      <QuickActionsSection setActiveTab={setActiveTab} />\n    </div>\n  );\n};\n\n// Quick Actions Section\nconst QuickActionsSection = ({ setActiveTab }) => {\n  const { t } = useLanguage();\n\n  return (\n    <div className=\"bg-gray-700 rounded-lg p-6 border border-gray-600\">\n      <h3 className=\"text-lg font-semibold text-white mb-4\">{t('manager.quickActions')}</h3>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        <button className=\"flex items-center p-4 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors duration-200\">\n          <UsersIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('manager.inviteTechnician')}</span>\n        </button>\n        <button className=\"flex items-center p-4 bg-gray-500 hover:bg-gray-600 rounded-lg transition-colors duration-200\">\n          <BuildingOfficeIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('manager.updateCompany')}</span>\n        </button>\n        <button className=\"flex items-center p-4 bg-purple-600 hover:bg-purple-700 rounded-lg transition-colors duration-200\">\n          <ClipboardDocumentListIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('audit.viewReports')}</span>\n        </button>\n        <button \n          className=\"flex items-center p-4 bg-green-600 hover:bg-green-700 rounded-lg transition-colors duration-200\"\n          onClick={() => setActiveTab('invoicing')}\n        >\n          <ClipboardDocumentListIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('manager.createInvoice')}</span>\n        </button>\n        <button \n          className=\"flex items-center p-4 bg-orange-600 hover:bg-orange-700 rounded-lg transition-colors duration-200\"\n          onClick={() => setActiveTab('jobTickets')}\n        >\n          <ClipboardDocumentListIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('manager.createJobTicket')}</span>\n        </button>\n        <button \n          className=\"relative flex items-center p-4 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl overflow-hidden group\"\n          style={{\n            background: 'linear-gradient(135deg, #39b198 0%, #2d8a73 100%)',\n            boxShadow: '0 4px 15px rgba(57, 177, 152, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.2)'\n          }}\n        >\n          {/* Animated shine overlay effect */}\n          <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white to-transparent opacity-0 group-hover:opacity-20 transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-all duration-700\"></div>\n          \n          <svg className=\"h-5 w-5 text-white mr-3 relative z-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n          </svg>\n          <span className=\"text-white font-medium relative z-10\">PatchAI</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerDashboard;\n","import * as React from \"react\";\nfunction Bars3Icon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(Bars3Icon);\nexport default ForwardRef;"],"names":["LanguageToggle","language","toggleLanguage","useLanguage","targetLanguage","instructionText","_jsxs","onClick","className","concat","title","tabIndex","children","_jsx","memo","useManagerAccess","user","isAuthenticated","useAuth","isManager","useMemo","role","isAdmin","isTechnician","companyId","company_id","canAccessManagerFeatures","useCallback","canManageTechnicians","canEditCompanyProfile","canViewAuditLogs","canExportData","canInviteTechnicians","canDeactivateTechnicians","canPerformBatchOperations","canUploadCompanyLogo","belongsToSameCompany","targetCompanyId","validateAccess","async","requiredPermission","context","arguments","length","undefined","hasAccess","reason","auditSecurityEvent","AUDIT_ACTIONS","UNAUTHORIZED_ACCESS_ATTEMPT","permission","user_id","id","user_email","email","user_role","url","window","location","pathname","timestamp","Date","toISOString","withManagerAccess","WrappedComponent","props","_objectSpread","getPermissionsSummary","permissions","managerFeatures","technicianManagement","companyProfile","auditLogs","dataExport","inviteTechnicians","deactivateTechnicians","batchOperations","uploadLogo","_ref","show","onHide","onSuccess","t","inviteTechnician","useManager","formData","setFormData","useState","firstName","lastName","jobType","errors","setErrors","isSubmitting","setIsSubmitting","handleInputChange","e","name","value","target","prev","handleClose","style","backgroundColor","type","disabled","onSubmit","preventDefault","validateForm","newErrors","trim","test","Object","keys","result","first_name","last_name","job_type","_result$invitation","_result$error","_result$error2","_result$error3","success","auditTechnicianAction","TECHNICIAN_INVITED","invitation_id","invitation","error","includes","submit","console","htmlFor","onChange","placeholder","autoComplete","map","_Fragment","React","svgRef","titleId","_objectWithoutProperties","_excluded","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","message","duration","onClose","isVisible","setIsVisible","useEffect","timer","setTimeout","clearTimeout","styles","warning","info","XMarkIcon","TechnicianManagement","technicians","loadingTechnicians","technicianError","technicianFilter","setTechnicianFilter","selectedTechnicians","setSelectedTechnicians","fetchTechnicians","updateTechnicianStatus","batchUpdateTechnicians","resendInvitation","getTechnicianStats","invitations","showInviteModal","setShowInviteModal","confirmationModal","setConfirmationModal","toast","setToast","searchTerm","setSearchTerm","sortBy","setSortBy","sortOrder","setSortOrder","filteredAndSortedTechnicians","filtered","filter","tech","_tech$first_name","_tech$last_name","_tech$email","_tech$job_type","toLowerCase","sort","a","b","aValue","bValue","getStatusPriority","last_login","comparison","toString","localeCompare","technician","pending_invitation","is_active","getTechnicianStatus","key","label","class","handleTechnicianAction","action","technicianName","confirmText","cancelText","variant","showWarning","warningText","onConfirm","executeTechnicianAction","onCancel","find","inv","Error","toUpperCase","previous_status","messageKey","charAt","slice","handleBatchAction","count","executeBatchAction","successCount","BATCH_TECHNICIAN_UPDATE","technician_ids","success_count","failure_count","failureCount","stats","filteredTechnicians","total","active","pending","deactivated","checked","handleSelectAll","_technician$first_nam","_technician$last_name","status","handleSelectTechnician","technicianId","toLocaleDateString","InviteTechnicianModal","Toast","CompanyProfile","loadingCompany","companyError","fetchCompanyProfile","log","Invoicing","JobTickets","AuditLogs","loadingAuditLogs","auditError","logs","setLogs","loading","setLoading","setError","filters","setFilters","category","dateFrom","dateTo","search","pagination","setPagination","page","limit","totalPages","exporting","setExporting","loadAuditLogs","params","sort_by","sort_order","forEach","fetchAuditLogs","Math","ceil","handleFilterChange","handleSortChange","newSortBy","handlePageChange","newPage","getCategoryBadgeClass","categories","actions","users","Set","Boolean","user_name","exportAuditLogs","blob","Blob","csv","URL","createObjectURL","link","document","createElement","href","download","split","body","appendChild","click","removeChild","revokeObjectURL","values","AUDIT_CATEGORIES","clearFilters","width","parseInt","formattedLog","toLocaleString","details","JSON","stringify","formattedTimestamp","formattedCategory","formattedAction","formattedUser","formattedDetails","formatLogEntry","description","ip_address","start","end","min","Array","from","_","i","max","OverviewTab","setActiveTab","overviewCards","totalTechnicians","icon","UsersIcon","color","totalWorkHours","Cog6ToothIcon","completedJobs","ClipboardDocumentListIcon","card","index","Icon","blue","yellow","green","QuickActionsSection","_ref2","BuildingOfficeIcon","background","boxShadow","ManagerDashboard","_user$name","_user$name$charAt","_navigationItems$find","_navigationItems$find2","hasManagerAccess","logout","activeTab","accessValidated","setAccessValidated","accessError","setAccessError","sidebarOpen","setSidebarOpen","toggleButtonRef","useRef","sidebarRef","checkAccess","handleClickOutside","event","innerWidth","current","contains","addEventListener","removeEventListener","navigationItems","HomeIcon","component","DocumentTextIcon","Bars3Icon","company_name","item","ArrowRightOnRectangleIcon"],"sourceRoot":""}