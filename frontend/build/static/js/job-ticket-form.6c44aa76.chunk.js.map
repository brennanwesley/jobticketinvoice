{"version":3,"file":"static/js/job-ticket-form.6c44aa76.chunk.js","mappings":"6RA0BA,MA+HA,EA/H0BA,KACxB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,OACR,KAAEC,IAASC,EAAAA,EAAAA,OACX,UAAEC,IAAcC,EAAAA,EAAAA,MAChBC,GAAWC,EAAAA,EAAAA,OACVC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,GACzCG,GAAkBC,EAAAA,EAAAA,UAClBC,GAAaD,EAAAA,EAAAA,UAGbE,GAAc,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMc,UAAW,SAe3BC,EAZe,CACnB,UAAaC,EAAAA,GACb,OAAUC,EAAAA,GACV,WAAcC,EAAAA,GACd,YAAeC,EAAAA,GACf,kBAAqBC,EAAAA,GACrB,aAAgBC,EAAAA,GAChB,MAASC,EAAAA,GACT,OAAUC,EAAAA,SAIuBT,IAAYS,EAAAA,SAG/CC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,YAAW,KACvBnB,GAAa,KACZ,KAEH,MAAO,IAAMoB,aAAaF,KACzB,KAGHD,EAAAA,EAAAA,YAAU,KACR,MAAMI,EAAsBC,IAEtBC,OAAOC,YAAc,KAIvBtB,GACAI,EAAWmB,UACVnB,EAAWmB,QAAQC,SAASJ,EAAMK,SACnCvB,EAAgBqB,UACfrB,EAAgBqB,QAAQC,SAASJ,EAAMK,SAExCxB,GAAe,IASnB,OAJAyB,SAASC,iBAAiB,YAAaR,GACvCO,SAASC,iBAAiB,aAAcR,GAGjC,KACLO,SAASE,oBAAoB,YAAaT,GAC1CO,SAASE,oBAAoB,aAAcT,MAE5C,CAACnB,IAOJ,OACE6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EAExCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,OAGjBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EAEnBC,EAAAA,EAAAA,KAAA,UACEE,IAAKhC,EACL4B,UAAU,oGACVK,QAASA,IAAMlC,GAAgBD,GAAa+B,UAE5CC,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACN,UAAU,UAAU,cAAY,YAI7CE,EAAAA,EAAAA,KAACK,EAAAA,EAAO,CAACrC,YAAaA,EAAaC,eAAgBA,EAAgBiC,IAAK9B,KAGxE4B,EAAAA,EAAAA,KAAA,QAAMF,UAAU,qDAAoDC,UAClEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sCAAqCC,UAClDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAEhCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,UACEG,QA/BQG,KACtB3C,EAAS,eA+BKmC,UAAU,4DACV,aAAYzC,EAAE,eAAe0C,UAE7BC,EAAAA,EAAAA,KAAA,OAAKO,MAAM,6BAA6BT,UAAU,UAAUU,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAcX,UAC/GC,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qCAGzEd,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gCAA+BC,SAAE1C,EAAE,6BAInD2C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uCAAsCC,SAClDlC,GACCmC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yCAAwCC,UACrDC,EAAAA,EAAAA,KAACe,EAAAA,GAAc,CAACC,KAAK,UAGvBhB,EAAAA,EAAAA,KAAC1B,EAAa,CAACb,UAAWA,mB","sources":["components/JobTicketFormPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Bars3Icon } from '@heroicons/react/24/outline';\nimport { useLanguage } from '../context/LanguageContext';\nimport { useAuth } from '../context/AuthContext';\nimport { useTicket } from '../context/TicketContext';\nimport { LoadingSpinner } from './ui';\nimport Sidebar from './layout/Sidebar';\nimport LanguageToggle from './LanguageToggle';\n\n// Import all form components from the forms directory\nimport JobTicketForm from './tickets/JobTicketForm';\nimport {\n  PumpTechTicketForm,\n  DriverTicketForm,\n  RoustaboutTicketForm,\n  ElectricianTicketForm,\n  PipelineOperatorTicketForm,\n  TruckDriverTicketForm,\n  OtherTicketForm\n} from './tickets/forms';\n\n/**\n * JobTicketFormPage component\n * Dedicated page for manual job ticket creation\n */\nconst JobTicketFormPage = () => {\n  const { t } = useLanguage();\n  const { user } = useAuth();\n  const { draftData } = useTicket();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const toggleButtonRef = useRef();\n  const sidebarRef = useRef();\n  \n  // Get the user's job type\n  const jobType = user?.jobType || 'manual';\n  \n  // Map job types to their respective form components\n  const jobTypeForms = {\n    'pump_tech': PumpTechTicketForm,\n    'driver': DriverTicketForm,\n    'roustabout': RoustaboutTicketForm,\n    'electrician': ElectricianTicketForm,\n    'pipeline_operator': PipelineOperatorTicketForm,\n    'truck_driver': TruckDriverTicketForm,\n    'other': OtherTicketForm,\n    'manual': JobTicketForm, // Fallback for manual selection or admin users\n  };\n  \n  // Select the appropriate form component based on job type\n  const FormComponent = jobTypeForms[jobType] || JobTicketForm;\n  \n  // Simulate loading to ensure all components are ready\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n    \n    return () => clearTimeout(timer);\n  }, []);\n  \n  // Handle clicks outside the sidebar to close it on mobile\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Only run this on mobile (when sidebar can be toggled)\n      if (window.innerWidth >= 768) return; // md breakpoint\n      \n      // If sidebar is open and click is outside sidebar and not on the toggle button\n      if (\n        sidebarOpen && \n        sidebarRef.current && \n        !sidebarRef.current.contains(event.target) &&\n        toggleButtonRef.current && \n        !toggleButtonRef.current.contains(event.target)\n      ) {\n        setSidebarOpen(false);\n      }\n    };\n    \n    // Add event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n    \n    // Cleanup\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [sidebarOpen]);\n  \n  // Handle back button click\n  const handleBackClick = () => {\n    navigate('/dashboard');\n  };\n  \n  return (\n    <div className=\"bg-slate-900 min-h-screen\">\n      {/* Header area for language toggle */}\n      <div className=\"h-14 relative\">\n        <LanguageToggle />\n      </div>\n      \n      <div className=\"flex\">\n        {/* Mobile sidebar toggle */}\n        <button\n          ref={toggleButtonRef}\n          className=\"md:hidden fixed top-4 left-4 z-50 p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700\"\n          onClick={() => setSidebarOpen(!sidebarOpen)}\n        >\n          <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n        </button>\n        \n        {/* Sidebar */}\n        <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} ref={sidebarRef} />\n        \n        {/* Main content */}\n        <main className=\"flex-1 bg-slate-900 p-6 overflow-y-auto text-white\">\n          <div className=\"mt-2 md:mt-0 pl-14 md:pl-0 md:ml-64\">\n            <div className=\"max-w-4xl mx-auto\">\n              {/* Header with back button */}\n              <div className=\"mb-6 flex items-center\">\n                <button \n                  onClick={handleBackClick}\n                  className=\"mr-4 p-2 rounded-full hover:bg-gray-700 transition-colors\"\n                  aria-label={t('common.back')}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                  </svg>\n                </button>\n                <h1 className=\"text-2xl font-bold text-white\">{t('jobTicket.createNew')}</h1>\n              </div>\n              \n              {/* Form container */}\n              <div className=\"bg-gray-800 rounded-lg shadow-lg p-6\">\n                {isLoading ? (\n                  <div className=\"flex justify-center items-center py-12\">\n                    <LoadingSpinner size=\"lg\" />\n                  </div>\n                ) : (\n                  <FormComponent draftData={draftData} />\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default JobTicketFormPage;\n"],"names":["JobTicketFormPage","t","useLanguage","user","useAuth","draftData","useTicket","navigate","useNavigate","isLoading","setIsLoading","useState","sidebarOpen","setSidebarOpen","toggleButtonRef","useRef","sidebarRef","jobType","FormComponent","PumpTechTicketForm","DriverTicketForm","RoustaboutTicketForm","ElectricianTicketForm","PipelineOperatorTicketForm","TruckDriverTicketForm","OtherTicketForm","JobTicketForm","useEffect","timer","setTimeout","clearTimeout","handleClickOutside","event","window","innerWidth","current","contains","target","document","addEventListener","removeEventListener","_jsxs","className","children","_jsx","LanguageToggle","ref","onClick","Bars3Icon","Sidebar","handleBackClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","LoadingSpinner","size"],"sourceRoot":""}