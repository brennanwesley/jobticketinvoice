{"version":3,"file":"static/js/manager-dashboard.231eb39f.chunk.js","mappings":"sLAOA,MAAMA,EAAiBA,KACrB,MAAM,SAAEC,EAAQ,eAAEC,IAAmBC,EAAAA,EAAAA,MAG/BC,EAA8B,OAAbH,EAAoB,aAAY,UACjDI,EAA+B,OAAbJ,EAAoB,YAAc,iBAE1D,OACEK,EAAAA,EAAAA,MAAA,UACEC,QAASL,EACTM,UAAU,yLACV,gBAAAC,OAAeJ,EAAe,KAAAI,OAAIL,GAClCM,MAAK,GAAAD,OAAKJ,EAAe,KAAAI,OAAIL,GAC7BO,SAAU,EAAEC,SAAA,EAEZC,EAAAA,EAAAA,KAAA,QAAML,UAAU,iCAAgCI,SAAEP,KAClDQ,EAAAA,EAAAA,KAAA,QAAAD,SAAOR,QAKb,GAAeU,EAAAA,EAAAA,MAAKd,E,yHCpBb,MAAMe,EAAmBA,KAC9B,MAAM,KAAEC,EAAI,gBAAEC,IAAoBC,EAAAA,EAAAA,MAG5BC,GAAYC,EAAAA,EAAAA,UAAQ,IACjBH,GAAmBD,IAAuB,YAAdA,EAAKK,MAAoC,UAAdL,EAAKK,OAClE,CAACJ,EAAiBD,IAGfM,GAAUF,EAAAA,EAAAA,UAAQ,IACfH,GAAmBD,GAAsB,UAAdA,EAAKK,MACtC,CAACJ,EAAiBD,IAGfO,GAAeH,EAAAA,EAAAA,UAAQ,IACpBH,GAAmBD,GAAsB,SAAdA,EAAKK,MACtC,CAACJ,EAAiBD,IAGfQ,GAAYJ,EAAAA,EAAAA,UAAQ,KACb,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMS,aAAc,MAC1B,CAACT,IAGEU,GAA2BC,EAAAA,EAAAA,cAAY,OACtCV,IAAoBD,KAGJ,YAAdA,EAAKK,MAAoC,UAAdL,EAAKK,OACtC,CAACJ,EAAiBD,IAGfY,GAAuBD,EAAAA,EAAAA,cAAY,IAChCD,KACN,CAACA,IAGEG,GAAwBF,EAAAA,EAAAA,cAAY,IACjCD,KACN,CAACA,IAGEI,GAAmBH,EAAAA,EAAAA,cAAY,IAC5BD,KACN,CAACA,IAGEK,GAAgBJ,EAAAA,EAAAA,cAAY,IACzBD,KACN,CAACA,IAGEM,GAAuBL,EAAAA,EAAAA,cAAY,IAChCD,KACN,CAACA,IAGEO,GAA2BN,EAAAA,EAAAA,cAAY,IACpCD,KACN,CAACA,IAGEQ,GAA4BP,EAAAA,EAAAA,cAAY,IACrCD,KACN,CAACA,IAGES,GAAuBR,EAAAA,EAAAA,cAAY,IAChCD,KACN,CAACA,IAGEU,GAAuBT,EAAAA,EAAAA,cAAaU,MACnCb,IAAca,IAGZb,IAAca,GACpB,CAACb,IAGEc,GAAiBX,EAAAA,EAAAA,cAAYY,eAAOC,GAAsC,IAAlBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnEG,GAAY,EACZC,EAAS,GAGb,GAAK7B,EAEE,GAAKD,EAEL,CAEL,OAAQwB,GACN,IAAK,mBACHK,EAAYnB,IACZoB,EAASD,EAAY,GAAK,gCAC1B,MACF,IAAK,wBACHA,EAAYjB,IACZkB,EAASD,EAAY,GAAK,4BAC1B,MACF,IAAK,kBACHA,EAAYhB,IACZiB,EAASD,EAAY,GAAK,8BAC1B,MACF,IAAK,aACHA,EAAYf,IACZgB,EAASD,EAAY,GAAK,yBAC1B,MACF,IAAK,cACHA,EAAYd,IACZe,EAASD,EAAY,GAAK,qBAC1B,MACF,IAAK,qBACHA,EAAYb,IACZc,EAASD,EAAY,GAAK,4BAC1B,MACF,IAAK,yBACHA,EAAYZ,IACZa,EAASD,EAAY,GAAK,gCAC1B,MACF,IAAK,mBACHA,EAAYX,IACZY,EAASD,EAAY,GAAK,kCAC1B,MACF,IAAK,cACHA,EAAYV,IACZW,EAASD,EAAY,GAAK,6BAC1B,MACF,QACEA,GAAY,EACZC,EAAS,0BAITD,GAAaJ,EAAQJ,kBAClBD,EAAqBK,EAAQJ,mBAChCQ,GAAY,EACZC,EAAS,+BAGf,MApDEA,EAAS,+BAFTA,EAAS,yBAuEX,OAdKD,SACGE,EAAAA,EAAAA,IAAmBC,EAAAA,GAAcC,4BAA6B,CAClEC,WAAYV,EACZM,SACAL,UACAU,SAAa,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,KAAM,KACrBC,YAAgB,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMsC,QAAS,KAC3BC,WAAe,OAAJvC,QAAI,IAAJA,OAAI,EAAJA,EAAMK,OAAQ,KACzBI,WAAYD,EACZgC,IAAKC,OAAOC,SAASC,SACrBC,WAAW,IAAIC,MAAOC,gBAInB,CACLjB,YACAC,OAAQD,EAAY,KAAOC,EAE/B,GAAG,CACD7B,EACAD,EACAQ,EACAE,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAII2B,GAAoBpC,EAAAA,EAAAA,cAAY,SAACqC,GAA+D,IAA7CxB,EAAkBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,mBAC5E,OAAO,SAA4BuB,GACjC,MAAM,UAAEpB,GAAcP,EAAeE,GAErC,OAAKK,GAWEhC,EAAAA,EAAAA,KAACmD,GAAgBE,EAAAA,EAAAA,GAAA,GAAKD,KATzB3D,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qBAAqBa,KAAK,QAAOT,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,gBAAeI,SAAC,mBAC9BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uDACHC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAGL,UAAU,OAAMI,SAAC,yEAM5B,CACF,GAAG,CAAC0B,IAGE6B,GAAwBxC,EAAAA,EAAAA,cAAY,KACjC,CACLV,kBACAE,YACAG,UACAC,eACAC,YACA4C,YAAa,CACXC,gBAAiB3C,IACjB4C,qBAAsB1C,IACtB2C,eAAgB1C,IAChB2C,UAAW1C,IACX2C,WAAY1C,IACZ2C,kBAAmB1C,IACnB2C,sBAAuB1C,IACvB2C,gBAAiB1C,IACjB2C,WAAY1C,QAGf,CACDlB,EACAE,EACAG,EACAC,EACAC,EACAE,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAGF,MAAO,CAELhB,YACAG,UACAC,eACAN,kBACAD,OACAQ,YAGAE,2BACAE,uBACAC,wBACAC,mBACAC,gBACAC,uBACAC,2BACAC,4BACAC,uBACAC,uBAGAE,iBACAyB,oBACAI,0BC0FJ,EA1V8BW,IAAkC,IAAjC,KAAEC,EAAI,OAAEC,EAAM,UAAEC,GAAWH,EACxD,MAAM,EAAEI,IAAM/E,EAAAA,EAAAA,OACR,iBAAEgF,IAAqBC,EAAAA,EAAAA,OACvB,eAAE9C,GAAmBvB,KAGpBsE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCjC,MAAO,GACPkC,UAAW,GACXC,SAAU,GACVC,QAAS,MAEJC,EAAQC,IAAaL,EAAAA,EAAAA,UAAS,CAAC,IAC/BM,EAAcC,IAAmBP,EAAAA,EAAAA,WAAS,GAiB3CQ,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1Bb,GAAYc,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXkC,GAAI,IACP,CAACH,GAAOC,MAINP,EAAOM,IACTL,GAAUQ,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTkC,GAAI,IACP,CAACH,GAAO,UA2GRI,EAAcA,KACbR,IACHP,EAAY,CACVhC,MAAO,GACPkC,UAAW,GACXC,SAAU,GACVC,QAAS,KAEXE,EAAU,CAAC,GACXZ,MAIJ,OAAKD,GAGHlE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,0BAA0BG,SAAS,KAAK2F,MAAO,CAAEC,gBAAiB,mBAAoB3F,UACnGC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,wBAAuBI,UACpCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAeI,SAAA,EAC5BN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcI,SAAA,EAC3BN,EAAAA,EAAAA,MAAA,MAAIE,UAAU,cAAaI,SAAA,EACzBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,2BACZ0E,EAAE,+CAELrE,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLhG,UAAU,YACVD,QAAS8F,EACTI,SAAUZ,EACV,aAAYX,EAAE,sBAIlB5E,EAAAA,EAAAA,MAAA,QAAMoG,SApGOnE,UAGnB,GAFAyD,EAAEW,kBAnCiBC,MACnB,MAAMC,EAAY,CAAC,EA6BnB,OA1BKxB,EAAS/B,MAAMwD,OAER,6BAA6BC,KAAK1B,EAAS/B,SACrDuD,EAAUvD,MAAQ4B,EAAE,0DAFpB2B,EAAUvD,MAAQ4B,EAAE,0DAMjBG,EAASG,UAAUsB,OAEbzB,EAASG,UAAUsB,OAAOnE,OAAS,IAC5CkE,EAAUrB,UAAYN,EAAE,+DAFxB2B,EAAUrB,UAAYN,EAAE,8DAMrBG,EAASI,SAASqB,OAEZzB,EAASI,SAASqB,OAAOnE,OAAS,IAC3CkE,EAAUpB,SAAWP,EAAE,8DAFvB2B,EAAUpB,SAAWP,EAAE,6DAMpBG,EAASK,UACZmB,EAAUnB,QAAUR,EAAE,6DAGxBU,EAAUiB,GAC+B,IAAlCG,OAAOC,KAAKJ,GAAWlE,QAOzBiE,GACH,OAIF,MAAM,UAAE/D,SAAoBP,EAAe,yBAC3C,GAAKO,EAAL,CAKAiD,GAAgB,GAChBF,EAAU,CAAC,GAEX,IACE,MAAMsB,QAAe/B,EAAiB,CACpC7B,MAAO+B,EAAS/B,MAAMwD,OACtBK,WAAY9B,EAASG,UAAUsB,OAC/BM,UAAW/B,EAASI,SAASqB,OAC7BO,SAAUhC,EAASK,UAGA,IAAD4B,EAuBbC,EAAAC,EAAAC,EAvBP,GAAIP,EAAOQ,cAEHC,EAAAA,EAAAA,IACJ3E,EAAAA,GAAc4E,mBACd,KAAK,GAADnH,OACD4E,EAASG,UAAS,KAAA/E,OAAI4E,EAASI,UAClC,CACEnC,MAAO+B,EAAS/B,MAChB+D,SAAUhC,EAASK,QACnBmC,cAAgC,QAAnBP,EAAEJ,EAAOY,kBAAU,IAAAR,OAAA,EAAjBA,EAAmBlE,KAKtCkC,EAAY,CACVhC,MAAO,GACPkC,UAAW,GACXC,SAAU,GACVC,QAAS,KAIXT,SAGgB,QAAZsC,EAAAL,EAAOa,aAAK,IAAAR,GAAZA,EAAcS,SAAS,mBAAiC,QAAhBR,EAAIN,EAAOa,aAAK,IAAAP,GAAZA,EAAcQ,SAAS,aACrEpC,EAAU,CAAEtC,MAAO4B,EAAE,0DACA,QAAhBuC,EAAIP,EAAOa,aAAK,IAAAN,GAAZA,EAAcO,SAAS,iBAChCpC,EAAU,CAAEtC,MAAO4B,EAAE,2DAErBU,EAAU,CAAEqC,OAAQf,EAAOa,OAAS7C,EAAE,yBAG5C,CAAE,MAAO6C,GACPG,QAAQH,MAAM,6BAA8BA,GAC5CnC,EAAU,CAAEqC,OAAQ/C,EAAE,yBACxB,CAAC,QACCY,GAAgB,EAClB,CAnDA,MAFEF,EAAU,CAAEqC,OAAQ/C,EAAE,0BA0FWtE,SAAA,EAC3BN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYI,SAAA,EACzBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kBAAiBI,SAC3BsE,EAAE,mDAGJS,EAAOsC,SACN3H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qBAAqBa,KAAK,QAAOT,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,oCACZmF,EAAOsC,WAIZ3H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,UAASI,SAAA,EAEtBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,SAAQI,SAAA,EACrBN,EAAAA,EAAAA,MAAA,SAAO6H,QAAQ,QAAQ3H,UAAU,aAAYI,SAAA,CAC1CsE,EAAE,2CAA2C,KAACrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,cAAaI,SAAC,UAE/EC,EAAAA,EAAAA,KAAA,SACE2F,KAAK,QACLhG,UAAS,gBAAAC,OAAkBkF,EAAOrC,MAAQ,aAAe,IACzDF,GAAG,QACH6C,KAAK,QACLC,MAAOb,EAAS/B,MAChB8E,SAAUrC,EACVsC,YAAanD,EAAE,sDACfuB,SAAUZ,EACVyC,aAAa,UAEd3C,EAAOrC,QACNzC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAkBI,SAC9B+E,EAAOrC,SAGZzC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,YAAWI,SACvBsE,EAAE,qDAKP5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBN,EAAAA,EAAAA,MAAA,SAAO6H,QAAQ,YAAY3H,UAAU,aAAYI,SAAA,CAC9CsE,EAAE,+CAA+C,KAACrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,cAAaI,SAAC,UAEnFC,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACLhG,UAAS,gBAAAC,OAAkBkF,EAAOH,UAAY,aAAe,IAC7DpC,GAAG,YACH6C,KAAK,YACLC,MAAOb,EAASG,UAChB4C,SAAUrC,EACVsC,YAAanD,EAAE,0DACfuB,SAAUZ,EACVyC,aAAa,eAEd3C,EAAOH,YACN3E,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAkBI,SAC9B+E,EAAOH,gBAMdlF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBN,EAAAA,EAAAA,MAAA,SAAO6H,QAAQ,WAAW3H,UAAU,aAAYI,SAAA,CAC7CsE,EAAE,8CAA8C,KAACrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,cAAaI,SAAC,UAElFC,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACLhG,UAAS,gBAAAC,OAAkBkF,EAAOF,SAAW,aAAe,IAC5DrC,GAAG,WACH6C,KAAK,WACLC,MAAOb,EAASI,SAChB2C,SAAUrC,EACVsC,YAAanD,EAAE,yDACfuB,SAAUZ,EACVyC,aAAa,gBAEd3C,EAAOF,WACN5E,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAkBI,SAC9B+E,EAAOF,eAMdnF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,SAAQI,SAAA,EACrBN,EAAAA,EAAAA,MAAA,SAAO6H,QAAQ,UAAU3H,UAAU,aAAYI,SAAA,CAC5CsE,EAAE,6CAA6C,KAACrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,cAAaI,SAAC,UAEjFN,EAAAA,EAAAA,MAAA,UACEE,UAAS,eAAAC,OAAiBkF,EAAOD,QAAU,aAAe,IAC1DtC,GAAG,UACH6C,KAAK,UACLC,MAAOb,EAASK,QAChB0C,SAAUrC,EACVU,SAAUZ,EAAajF,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SACbsE,EAAE,0DAzQN,CACf,cACA,UACA,kBACA,YACA,sBACA,mBACA,aACA,UACA,UACA,SAiQ0BqD,KAAI/B,IACZ3F,EAAAA,EAAAA,KAAA,UAAmBqF,MAAOM,EAAK5F,SAC5B4F,GADUA,QAKhBb,EAAOD,UACN7E,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAkBI,SAC9B+E,EAAOD,WAGZ7E,EAAAA,EAAAA,KAAA,OAAKL,UAAU,YAAWI,SACvBsE,EAAE,0DAMT5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wBAAwBa,KAAK,QAAOT,SAAA,EACjDC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BACbK,EAAAA,EAAAA,KAAA,UAAAD,SAASsE,EAAE,kDACX5E,EAAAA,EAAAA,MAAA,MAAIE,UAAU,YAAWI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKsE,EAAE,8CACPrE,EAAAA,EAAAA,KAAA,MAAAD,SAAKsE,EAAE,8CACPrE,EAAAA,EAAAA,KAAA,MAAAD,SAAKsE,EAAE,uDAKb5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcI,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLhG,UAAU,oBACVD,QAAS8F,EACTI,SAAUZ,EAAajF,SAEtBsE,EAAE,oBAELrE,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLhG,UAAU,kBACViG,SAAUZ,EAAajF,SAEtBiF,GACCvF,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAML,UAAU,wCAAwCa,KAAK,SAAS,cAAY,SACjF6D,EAAE,iDAGL5E,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBACZ0E,EAAE,sEA7KH,M,cC9Jb,MAqDP,EArDqBJ,IAMd,IANe,KACpB0B,EAAO,OAAM,QACbiC,EAAO,SACPC,EAAW,IAAI,KACf3D,GAAO,EAAI,QACX4D,GACD7D,EACC,MAAO8D,EAAWC,IAAgBtD,EAAAA,EAAAA,UAASR,IAG3C+D,EAAAA,EAAAA,YAAU,KAGR,GAFAD,EAAa9D,GAETA,GAAQ2D,EAAU,CACpB,MAAMK,EAAQC,YAAW,KACvBH,GAAa,GACTF,GAASA,MACZD,GAEH,MAAO,IAAMO,aAAaF,EAC5B,IACC,CAAChE,EAAM2D,EAAUC,IAQpB,IAAKC,EAAW,OAAO,KAGvB,MAAMM,EAAS,CACbxB,QAAS,oEACTK,MAAO,8DACPoB,QAAS,uEACTC,KAAM,kEAGR,OACE9I,EAAAA,EAAAA,MAAA,OAAKE,UAAS,gGAAAC,OAAkGyI,EAAO1C,IAAS0C,EAAOE,MAAOxI,SAAA,EAC5IC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,OAAMI,SAAE6H,KACvB5H,EAAAA,EAAAA,KAAA,UACEN,QAnBc8F,KAClBwC,GAAa,GACTF,GAASA,KAkBTnI,UAAU,qCACV,aAAW,QAAOI,UAElBC,EAAAA,EAAAA,KAACwI,EAAAA,EAAS,CAAC7I,UAAU,kB,gECxC7B,MA+mBA,EA/mB6B8I,KAC3B,MAAM,EAAEpE,IAAM/E,EAAAA,EAAAA,OACR,YACJoJ,EAAW,mBACXC,EAAkB,gBAClBC,EAAe,iBACfC,EAAgB,oBAChBC,EAAmB,oBACnBC,EAAmB,uBACnBC,EAAsB,iBACtBC,EAAgB,uBAChBC,EAAsB,uBACtBC,EAAsB,iBACtBC,EAAgB,mBAChBC,EAAkB,YAClBC,IACE/E,EAAAA,EAAAA,OAEE,eAAE9C,GAAmBvB,KAGpBqJ,EAAiBC,IAAsB9E,EAAAA,EAAAA,WAAS,IAChD+E,EAAOC,IAAYhF,EAAAA,EAAAA,UAAS,OAC5BiF,EAAYC,IAAiBlF,EAAAA,EAAAA,UAAS,KACtCmF,EAAQC,IAAapF,EAAAA,EAAAA,UAAS,SAC9BqF,EAAWC,IAAgBtF,EAAAA,EAAAA,UAAS,QAG3CuD,EAAAA,EAAAA,YAAU,KACRgB,MACC,CAACA,IAGJ,MAAMgB,EAAkB,CACtB,CACE1H,GAAI,EACJ6C,KAAM,aACN3C,MAAO,yBACPyH,MAAO,iBACPC,WAAW,GAEb,CACE5H,GAAI,EACJ6C,KAAM,eACN3C,MAAO,2BACPyH,MAAO,iBACPC,WAAW,GAEb,CACE5H,GAAI,EACJ6C,KAAM,gBACN3C,MAAO,4BACPyH,MAAO,iBACPC,WAAW,IAITC,EAAqB1B,EAAY5G,OAAS,EAAI4G,EAAcuB,EAG5DI,GAAQ9J,EAAAA,EAAAA,UAAQ,KACpB,GAAImI,EAAY5G,OAAS,EAAG,CAE1B,MAAMwI,EAAoB5B,EAAY6B,QAAOC,GAAQA,EAAKL,YAAcK,EAAKC,uBACvEC,EAAqBpB,EAAYxH,OAEvC,MAAO,CACL6I,MAAOjC,EAAY5G,OACnB8I,OAAQN,EAAkBxI,OAC1B+I,QAASH,EAEb,CAAO,CAEL,MAAMJ,EAAoBL,EAAgBM,QAAOC,GAAQA,EAAKL,YAE9D,MAAO,CACLQ,MAAOV,EAAgBnI,OACvB8I,OAAQN,EAAkBxI,OAC1B+I,QAAS,EAEb,IACC,CAACnC,EAAaY,IAGXwB,GAA+BhK,EAAAA,EAAAA,cAAY,KAC/C,IAAIiK,EAAWX,EAAmBG,QAAOC,IAAS,IAADQ,EAAAC,EAAAC,EAAAC,EAO/C,OANuBxB,IACN,QADgBqB,EAC/BR,EAAKlE,kBAAU,IAAA0E,OAAA,EAAfA,EAAiBI,cAAcjE,SAASwC,EAAWyB,kBACrC,QADmDH,EACjET,EAAKjE,iBAAS,IAAA0E,OAAA,EAAdA,EAAgBG,cAAcjE,SAASwC,EAAWyB,kBACxC,QADsDF,EAChEV,EAAK/H,aAAK,IAAAyI,OAAA,EAAVA,EAAYE,cAAcjE,SAASwC,EAAWyB,kBACjC,QAD+CD,EAC5DX,EAAKhE,gBAAQ,IAAA2E,OAAA,EAAbA,EAAeC,cAAcjE,SAASwC,EAAWyB,mBA2CrD,OArCAL,EAASM,MAAK,CAACC,EAAGC,KAChB,IAAIC,EAAQC,EAEZ,OAAQ5B,GACN,IAAK,OACH2B,EAAS,GAAA5L,OAAG0L,EAAEhF,YAAc,GAAE,KAAA1G,OAAI0L,EAAE/E,WAAa,IAAKN,OACtDwF,EAAS,GAAA7L,OAAG2L,EAAEjF,YAAc,GAAE,KAAA1G,OAAI2L,EAAEhF,WAAa,IAAKN,OACtD,MACF,IAAK,QACHuF,EAASF,EAAE7I,OAAS,GACpBgJ,EAASF,EAAE9I,OAAS,GACpB,MACF,IAAK,SACH+I,EAASE,EAAkBJ,GAC3BG,EAASC,EAAkBH,GAC3B,MACF,IAAK,UACHC,EAASF,EAAE9E,UAAY,GACvBiF,EAASF,EAAE/E,UAAY,GACvB,MACF,IAAK,aACHgF,EAAS,IAAIxI,KAAKsI,EAAEK,YAAc,GAClCF,EAAS,IAAIzI,KAAKuI,EAAEI,YAAc,GAClC,MACF,QACEH,EAASF,EAAEzB,IAAW,GACtB4B,EAASF,EAAE1B,IAAW,GAG1B,GAAe,eAAXA,EACF,MAAqB,QAAdE,EAAsByB,EAASC,EAASA,EAASD,EAG1D,MAAMI,EAAaJ,EAAOK,WAAWC,cAAcL,EAAOI,YAC1D,MAAqB,QAAd9B,EAAsB6B,GAAcA,KAGtCb,IACN,CAACX,EAAoBT,EAAYE,EAAQE,IAGtC2B,EAAqBK,GACrBA,EAAW5B,UAAkB,EAC7B4B,EAAWtB,qBAA6B,EACrC,EAIHuB,EAAuBD,GACvBA,EAAW5B,UACN,CACL8B,IAAK,SACLC,MAAO7H,EAAE,+BACT8H,MAAO,kBAEAJ,EAAWtB,qBACb,CACLwB,IAAK,UACLC,MAAO7H,EAAE,gCACT8H,MAAO,mBAGF,CACLF,IAAK,cACLC,MAAO7H,EAAE,oCACT8H,MAAO,iBAgNPC,EAAsBtB,IAkD5B,OACErL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uCAAsCI,SAAA,EAEnDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,OAAMI,UACnBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qEAAoEI,SAAA,EACjFN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,qCAAoCI,SAC/CsE,EAAE,mCAELrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gBAAeI,SACzBsE,EAAE,yCAGP5E,EAAAA,EAAAA,MAAA,UACEC,QA1QqBgC,UAC7B,MAAM,UAAEM,SAAoBP,EAAe,qBACtCO,EAOLwH,GAAmB,GANjBE,EAAS,CACP/D,KAAM,QACNiC,QAASvD,EAAE,0BAsQP1E,UAAU,mIAAkII,SAAA,EAE5IC,EAAAA,EAAAA,KAACqM,EAAAA,EAAY,CAAC1M,UAAU,YACvB0E,EAAE,oDAMT5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,wCAAuCI,SAAEsE,EAAE,6CACzD5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCI,SAAA,EAEpDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACsM,EAAAA,EAAS,CAAC3M,UAAU,6BAEvBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SACzC4I,EAAqB,MAAQ0B,EAAMM,SAEtC3K,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SACjCsE,EAAE,gEAOXrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACuM,EAAAA,EAAe,CAAC5M,UAAU,8BAE7BF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SACzC4I,EAAqB,MAAQ0B,EAAMO,UAEtC5K,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SACjCsE,EAAE,iEAOXrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACwM,EAAAA,EAAS,CAAC7M,UAAU,+BAEvBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SACzC4I,EAAqB,MAAQ0B,EAAMQ,WAEtC7K,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SACjCsE,EAAE,wEASf5E,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,wCAAuCI,SAAEsE,EAAE,yCACzDrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,0EAAyEI,SACrF4I,GACClJ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBI,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+EACfK,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEsE,EAAE,uBAErCuE,GACF5I,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,eAAcI,SAAE6I,MAEE,IAA/BwD,EAAoBtK,QACtBrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBI,SAAA,EAC9BC,EAAAA,EAAAA,KAACsM,EAAAA,EAAS,CAAC3M,UAAU,0CACrBK,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEsE,EAAE,iDACrCrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SAAEsE,EAAE,4DAG1CrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BN,EAAAA,EAAAA,MAAA,SAAOE,UAAU,SAAQI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,cAAaI,UAC5BN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,gDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,iDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,sGAAqGI,SAChHsE,EAAE,uDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,kDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,wDAITrE,EAAAA,EAAAA,KAAA,SAAOL,UAAU,2BAA0BI,SACxCqM,EAAoB1E,KAAI,CAACqE,EAAYU,KACpChN,EAAAA,EAAAA,MAAA,MAAiCE,UAAU,mDAAkDI,SAAA,EAC3FC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,8BAA6BI,UACzCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iCAAgCI,SAC5CgM,EAAW3G,MAAQ,GAAAxF,OAAGmM,EAAWzF,YAAc,GAAE,KAAA1G,OAAImM,EAAWxF,WAAa,IAAKN,YAGvFjG,EAAAA,EAAAA,KAAA,MAAIL,UAAU,8BAA6BI,UACzCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0CAAyCI,SAAA,EACtDC,EAAAA,EAAAA,KAAC0M,EAAAA,EAAY,CAAC/M,UAAU,+BACvBoM,EAAWtJ,YAGhBzC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,mDAAkDI,UAC9DN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0CAAyCI,SAAA,EACtDC,EAAAA,EAAAA,KAAC2M,EAAAA,EAAS,CAAChN,UAAU,+BACpBoM,EAAW7B,OAAS,qBAGzBlK,EAAAA,EAAAA,KAAA,MAAIL,UAAU,8BAA6BI,UACzCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,CACS,WAAxCiM,EAAoBD,GAAYE,KAC/BjM,EAAAA,EAAAA,KAACuM,EAAAA,EAAe,CAAC5M,UAAU,gCACe,YAAxCqM,EAAoBD,GAAYE,KAClCjM,EAAAA,EAAAA,KAACwM,EAAAA,EAAS,CAAC7M,UAAU,kCAErBK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2CAEjBK,EAAAA,EAAAA,KAAA,QAAML,UAAS,uBAAAC,OAAyBoM,EAAoBD,GAAYI,OAAQpM,SAC7EiM,EAAoBD,GAAYG,cAIvClM,EAAAA,EAAAA,KAAA,MAAIL,UAAU,8BAA6BI,UACzCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oBAAmBI,SACS,WAAxCiM,EAAoBD,GAAYE,KAC/BjM,EAAAA,EAAAA,KAAA,UACEL,UAAU,yEACVD,QAASA,IAhNFgC,WACjC,IAEE2F,QAAQuF,IAAI,2BAA4BC,GAGbzC,EAAmB1C,KAAI8C,GAChDA,EAAKjI,KAAOsK,GAAYxJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQmH,GAAI,IAAEL,WAAW,IAAUK,IAIzD9B,EAAY5G,OAMhB4H,GAASoD,IAASzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUyJ,GAAS,IAAEnH,KAAM,UAAWiC,QAASvD,EAAE,oDACrE,CAAE,MAAO6C,GACPG,QAAQH,MAAM,iCAAkCA,GAChDwC,GAASoD,IAASzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUyJ,GAAS,IAAEnH,KAAM,QAASiC,QAAS,mCACjE,GA2LyCmF,CAA2BhB,EAAWxJ,IAAIxC,SAExDsE,EAAE,sDAGLrE,EAAAA,EAAAA,KAAA,UACEL,UAAU,yEACVD,QAASA,IA/LNgC,OAAOmL,EAAcG,KAClD,GAAIpK,OAAOqK,QAAQ5I,EAAE,8CAA+C,CAAEe,KAAM4H,KAC1E,IAEE3F,QAAQuF,IAAI,uBAAwBC,GAGTzC,EAAmBG,QAAOC,GAAQA,EAAKjI,KAAOsK,IAGrEnE,EAAY5G,OAMhB4H,GAASoD,IAASzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUyJ,GAAS,IAAEnH,KAAM,UAAWiC,QAASvD,EAAE,gDACrE,CAAE,MAAO6C,GACPG,QAAQH,MAAM,6BAA8BA,GAC5CwC,GAASoD,IAASzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUyJ,GAAS,IAAEnH,KAAM,QAASiC,QAAS,+BACjE,GA2KuCsF,CAAuBnB,EAAWxJ,GAAIwJ,EAAW3G,MAAMrF,SAErEsE,EAAE,uDA9CJ0H,EAAWxJ,IAAMkK,iBA6DvClD,IACCvJ,EAAAA,EAAAA,KAACmN,EAAqB,CACpBC,OAAQ7D,EACRzB,QAASA,IAAM0B,GAAmB,GAClCpF,UA3aqBiJ,IAI3B,GAHA7D,GAAmB,GAGf6D,GAAqBA,EAAkB9K,GAAI,CAC7CmH,EAAS,CACP/D,KAAM,UACNiC,QAASvD,EAAE,oDAAqD,CAAEe,KAAMiI,EAAkBjI,SAMtFiI,EAAkB9K,GAChB8K,EAAkBjI,KACjBiI,EAAkB5K,MAClB4K,EAAkBnD,OAGb,IAAIlH,MAAOC,cAIrByF,GAAeA,EAAY5G,OAAS,GAEtCmH,GAEJ,MAEES,EAAS,CACP/D,KAAM,UACNiC,QAASvD,EAAE,oDAIf4E,OA6YGQ,IACCzJ,EAAAA,EAAAA,KAACsN,EAAK,CACJ3H,KAAM8D,EAAM9D,KACZiC,QAAS6B,EAAM7B,QACfE,QAASA,IAAM4B,EAAS,YClelC,EA9IuB6D,KACrB,MAAM,EAAElJ,IAAM/E,EAAAA,EAAAA,OACR,KAAEa,IAASE,EAAAA,EAAAA,OACX,eACJqD,EAAc,eACd8J,EAAc,aACdC,EAAY,oBACZC,IACEnJ,EAAAA,EAAAA,OAEE,eAAE9C,GAAmBvB,KACpBuJ,EAAOC,IAAYhF,EAAAA,EAAAA,UAAS,OAGnCuD,EAAAA,EAAAA,YAAU,KACRZ,QAAQuF,IAAI,kEACZc,MACC,CAACA,KAGJzF,EAAAA,EAAAA,YAAU,KACHxG,KACHiI,EAAS,CACP/D,KAAM,QACNiC,QAASvD,EAAE,kCACXwD,SAAU,QAGb,CAACpG,EAAgB4C,IAMpB,OAAImJ,GAEAxN,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4BAA2BI,UACxCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA8Ba,KAAK,SAAQT,UACxDC,EAAAA,EAAAA,KAAA,QAAML,UAAU,kBAAiBI,SAAEsE,EAAE,0BAO3CoJ,GAEAzN,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4BAA2BI,UACxCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qBAAqBa,KAAK,QAAOT,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,gBAAeI,SAAEsE,EAAE,mBACjCrE,EAAAA,EAAAA,KAAA,KAAAD,SAAI0N,KACJzN,EAAAA,EAAAA,KAAA,UACEL,UAAU,yBACVD,QAASgO,EAAoB3N,SAE5BsE,EAAE,wBAQX5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,4BAA2BI,SAAA,CACvC0J,IACCzJ,EAAAA,EAAAA,KAACsN,EAAK,CACJ3H,KAAM8D,EAAM9D,KACZiC,QAAS6B,EAAM7B,QACfC,SAAU4B,EAAM5B,SAChBC,QAASA,IAAM4B,EAAS,SAK5BjK,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6BAA4BI,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAChDN,EAAAA,EAAAA,MAAA,MAAIE,UAAU,kBAAiBI,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,yBACZ0E,EAAE,sCAIP5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBN,EAAAA,EAAAA,MAAA,UAAAM,SAAA,CAASsE,EAAE,sCAAsC,QACjDrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,OAAMI,UAAgB,OAAd2D,QAAc,IAAdA,OAAc,EAAdA,EAAgB0B,OAAQf,EAAE,+BAGtDrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBN,EAAAA,EAAAA,MAAA,UAAAM,SAAA,CAASsE,EAAE,sCAAsC,QACjDrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,OAAMI,SAAM,OAAJI,QAAI,IAAJA,GAAAA,EAAMmG,YAAkB,OAAJnG,QAAI,IAAJA,GAAAA,EAAMoG,UAAS,GAAA3G,OAAMO,EAAKmG,WAAU,KAAA1G,OAAIO,EAAKoG,YAAkB,OAAJpG,QAAI,IAAJA,OAAI,EAAJA,EAAMsC,QAAS4B,EAAE,kCAK9H5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBN,EAAAA,EAAAA,MAAA,UAAAM,SAAA,CAASsE,EAAE,0CAA0C,QACrDrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,OAAMI,SAAC,YAG3BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBN,EAAAA,EAAAA,MAAA,UAAAM,SAAA,CAASsE,EAAE,oCAAoC,QAC/C5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sBAAqBI,SAAA,EAClCN,EAAAA,EAAAA,MAAA,UAAQE,UAAU,sCAAsCiG,UAAQ,EAAA7F,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,uBACZ0E,EAAE,8CAELrE,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAAEsE,EAAE,4DAS7C5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wBAAuBI,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sCAAqCI,UAClDN,EAAAA,EAAAA,MAAA,MAAIE,UAAU,kBAAiBI,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,oBACZ0E,EAAE,gCAIPrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,YAAWI,UACxBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBI,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wCACbK,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kBAAiBI,SAAEsE,EAAE,6C,4HCpH9C,MA0uBA,EA1uB2BJ,IAMpB,IANqB,OAC1BmJ,EAAM,QACNtF,EAAO,iBACP6F,EAAgB,mBAChBC,EAAqB,GAAE,KACvBC,EAAO,UACR5J,EACC,MAAM,EAAEI,IAAM/E,EAAAA,EAAAA,OACR,KAAEa,IAASE,EAAAA,EAAAA,OAGVyN,EAASC,IAAcrJ,EAAAA,EAAAA,WAAS,IAChCsJ,EAAaC,IAAkBvJ,EAAAA,EAAAA,UAAS,CAC7CwJ,eAAgB,GAChBC,cAAc,IAAInL,MAAOC,cAAcmL,MAAM,KAAK,GAClDC,aAAc,GACdC,cAAe,GACfC,WAAY,GACZC,MAAO,MAWTvG,EAAAA,EAAAA,YAAU,KACR,GAAImF,EAAQ,CAEV,MAAMqB,EAVoBC,MAC5B,MAAMC,GAAO,IAAI3L,MAAO4L,cAAc/C,WAAWgD,OAAO,GAClDC,EAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoBpD,WAAWqD,SAAS,EAAG,KAC5E,MAAM,GAANtP,OAAU+O,GAAI/O,OAAGkP,IAOUJ,GAEzBT,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdkC,GAAI,IACP2I,eAAgBO,EAChBN,cAAc,IAAInL,MAAOC,cAAcmL,MAAM,KAAK,GAClDC,aAAuB,eAATR,GAAyBD,EAAmB9L,OAAS,GAC9D8L,EAAmB,GAAGS,cACvB,GACJE,WAAqB,eAATV,EAAwBsB,IAAoC,GACxEb,cAAwB,eAATT,GAAyBD,EAAmB9L,OAAS,GAC/D8L,EAAmB,GAAGU,eACvB,MAER,IACC,CAAClB,KAGJnF,EAAAA,EAAAA,YAAU,KACR,GAAImF,GAAmB,eAATS,GAAyBD,EAAmB9L,OAAS,EACjE,IACEuF,QAAQuF,IAAI,sCAAuCgB,GACnD,MAAMwB,EAAYD,IAClB9H,QAAQuF,IAAI,wBAAyBwC,GAErC,MAAMC,EAAezB,EAAmB,GAAGU,eAAiB,GACtDgB,EAAc1B,EAAmB,GAAGS,cAAgB,GAE1DJ,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdkC,GAAI,IACPgJ,WAAYa,EACZd,cAAee,EACfhB,aAAciB,KAElB,CAAE,MAAOpI,GACPG,QAAQH,MAAM,4CAA6CA,GAC3DuC,EAAAA,GAAMvC,MAAM,mDAEZ+G,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdkC,GAAI,IACPgJ,WAAY,GACZD,cAAe,GACfD,aAAc,MAElB,IAED,CAACjB,EAAQS,EAAMD,IAGlB,MAAMuB,EAAkCA,KACtC,IAAKvB,GAAoD,IAA9BA,EAAmB9L,OAAc,MAAO,GAGnE,MAAMyN,EAAoB,IAAI,IAAIC,IAAI5B,EAAmBlG,KAAI+H,GAAUA,EAAOpB,eAAc9D,OAAOmF,WACnG,OAAIH,EAAkBzN,OAAS,GAC7BuF,QAAQH,MAAM,gDAAiDqI,GAC/D9F,EAAAA,GAAMvC,MAAM,6EAADtH,OAA8E2P,EAAkBI,KAAK,MAAK,qDAC9G,IAGwB,IAA7BJ,EAAkBzN,QACpBuF,QAAQH,MAAM,qDACduC,EAAAA,GAAMvC,MAAM,yFACL,IAIF0G,EAAmBlG,KAAI,CAAC+H,EAAQhD,KACrC,IAEE,MAAMmD,EAAOC,WAAWJ,EAAOG,OAAS,IAClCE,EAAYD,WAAWJ,EAAOM,mBAAqB,EAEnDC,EAAWF,EAA2B,IADxBD,WAAWJ,EAAOQ,qBAAuB,GAEvDC,EAAON,EAAOI,EAEpB,MAAO,CACLzN,GAAG,MAAD3C,OAAQ6P,EAAOlN,IACjB4N,cAAeV,EAAOlN,GACtB6N,YAAY,eAADxQ,OAAiB6P,EAAOlN,GAAE,OAAA3C,OAAM6P,EAAOW,aAAe,gBACjER,KAAMA,EACNI,SAAUA,EACVE,KAAMA,EACNvF,MAAOuF,EAEX,CAAE,MAAOhJ,GAGP,OAFAG,QAAQH,MAAM,+BAADtH,OAAgC6P,EAAOlN,GAAE,KAAK2E,EAAOuI,GAE3D,CACLlN,GAAG,MAAD3C,OAAQ6P,EAAOlN,GAAE,UACnB4N,cAAeV,EAAOlN,GACtB6N,YAAY,eAADxQ,OAAiB6P,EAAOlN,GAAE,4BACrCqN,KAAM,EACNI,SAAU,EACVE,KAAM,EACNvF,MAAO,EAEX,MAUE0F,GAAS9P,EAAAA,EAAAA,UAAQ,KACrB,MAAM+P,EAAWtC,EAAYO,WAAWgC,QAAO,CAACC,EAAKC,IAK5CD,GAHMX,WAAWY,EAAKb,OAAS,IACrBC,WAAWY,EAAKT,WAAa,IAG7C,GAIGU,EAA+B,IADd1C,EAAYO,WAAWhE,QAAOkG,GAAQA,EAAKN,gBAAerO,OACpC,IAGvC6I,EAAQ2F,EAAWI,EADb,EAGZ,MAAO,CACLJ,UAAWA,GAAY,GAAGK,QAAQ,GAClCD,YAAaA,GAAc,GAAGC,QAAQ,GACtCC,KAAa,GAAGD,QAAQ,GACxBhG,OAAQA,GAAS,GAAGgG,QAAQ,MAE7B,CAAC3C,EAAYO,aAqBVsC,EAAiBA,CAACpE,EAAOqE,EAAOzL,KACpC,MAAM0L,EAAyB,SAAVD,GAA8B,aAAVA,EAAuBjB,WAAWxK,IAAU,EAAIA,EACzF4I,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdkC,GAAI,IACPgJ,WAAYhJ,EAAKgJ,WAAW7G,KAAI,CAAC+I,EAAMO,KACrC,GAAIA,IAAMvE,EAAO,CACf,MAAMwE,GAAW5N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQoN,GAAI,IAAE,CAACK,GAAQC,IAExC,GAAc,SAAVD,GAA8B,aAAVA,EAAsB,CAC5C,MAEMI,GAFOrB,WAAWoB,EAAYrB,OAAS,IAC5BC,WAAWoB,EAAYjB,WAAa,GAErDiB,EAAYf,KAAOgB,EACnBD,EAAYtG,MAAQuG,CACtB,CACA,OAAOD,CACT,CACA,OAAOR,UA8FPU,EAAezP,iBAA6B,IAAtB0P,EAAMvP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAEnC,MAAMwP,EAzCoBC,MAAO,IAADC,EAAAC,EAChC,MAAM1M,EAAS,GAGgB,QAA3ByM,EAACvD,EAAYE,sBAAc,IAAAqD,GAA1BA,EAA4BtL,QAC/BnB,EAAO2M,KAAK,8BAGe,QAAzBD,EAACxD,EAAYK,oBAAY,IAAAmD,GAAxBA,EAA0BvL,QAC7BnB,EAAO2M,KAAK,qCAGTzD,EAAYO,YAAgD,IAAlCP,EAAYO,WAAWzM,QACpDgD,EAAO2M,KAAK,sCAIdzD,EAAYO,WAAWmD,SAAQ,CAACjB,EAAMhE,KAAW,IAADkF,EACzB,QAAjBA,EAAClB,EAAKL,mBAAW,IAAAuB,GAAhBA,EAAkB1L,QACrBnB,EAAO2M,KAAK,aAAD7R,OAAc6M,EAAQ,EAAC,gCAE/BgE,EAAKb,MAAQa,EAAKb,MAAQ,IAC7B9K,EAAO2M,KAAK,aAAD7R,OAAc6M,EAAQ,EAAC,oCAE/BgE,EAAKT,UAAYS,EAAKT,UAAY,IACrClL,EAAO2M,KAAK,aAAD7R,OAAc6M,EAAQ,EAAC,yCAKtC,MAAMmF,EAAc/B,WAAWQ,EAAO1F,OAKtC,OAJIkH,MAAMD,IAAgBA,GAAe,IACvC9M,EAAO2M,KAAK,wCAGP3M,GAMkBwM,GACzB,GAAID,EAAiBvP,OAAS,EAC5B2H,EAAAA,GAAMvC,MAAM,qCAADtH,OAAsCyR,EAAiB1B,KAAK,YADzE,CAKA5B,GAAW,GAEX,IACE,MAAM+D,EAAiB,CACrB5D,eAAgBF,EAAYE,eAC5BC,aAAc,IAAInL,KAAKgL,EAAYG,cAAclL,cACjDqL,cAAeN,EAAYM,cAC3BD,aAAcL,EAAYK,aAC1BiC,SAAUT,WAAWQ,EAAOC,UAC5ByB,YAAalC,WAAWQ,EAAOK,YAC/BE,IAAKf,WAAWQ,EAAOO,KACvBoB,aAAcnC,WAAWQ,EAAO1F,OAChC4D,WAAYP,EAAYO,WAAW7G,KAAI+I,IAAI,CACzCL,YAAaK,EAAKL,YAClBR,KAAMC,WAAWY,EAAKb,MACtBI,SAAUH,WAAWY,EAAKT,UAC1BiC,OAAQpC,WAAWY,EAAKP,MAAQO,EAAK9F,OAAS,OAEhDuH,eAAgBlE,EAAYO,WACzBhE,QAAOkG,GAAQA,EAAKN,gBACpBzI,KAAI+I,GAAQA,EAAKN,gBACpBiB,OAAQA,EACRe,YAAgB,OAAJhS,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,OAAQ,eAC1BoJ,MAAOR,EAAYQ,OAAS,IAG9BnH,QAAQuF,IAAI,8BAA+BkF,GAE3C,MAAMM,QAAiBC,MAAM,mBAAoB,CAC/CC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAD3S,OAAY4S,aAAaC,QAAQ,WAElDC,KAAMC,KAAKC,UAAUd,KAGvB,IAAKM,EAASS,GAAI,CAChB,MAAMC,QAAkBV,EAASW,OAAOC,OAAM,MAAS,KACvD,MAAM,IAAIC,MAAMH,EAAUI,QAAU,yBACtC,CAEA,MAAM7M,QAAe+L,EAASW,OAC9B1L,QAAQuF,IAAI,gCAAiCvG,GAE7CoD,EAAAA,GAAM5C,QAAQ,WAADjH,OAAYwR,EAAOhG,cAAa,mBAC7CtD,IAGgC,oBAArB6F,GACTA,EAAiBtH,EAGrB,CAAE,MAAOa,GACPG,QAAQH,MAAM,0BAA2BA,GACzCuC,EAAAA,GAAMvC,MAAM,6BAADtH,OAA8BsH,EAAMU,SACjD,CAAC,QACCmG,GAAW,EACb,CA5DA,CA6DF,GAcOoF,EAAmBC,IAAwB1O,EAAAA,EAAAA,WAAS,IACpD2O,EAAiBC,IAAsB5O,EAAAA,EAAAA,WAAS,GAkCjD6O,EAA2BA,KAC/BH,GAAqB,IAGvB,OACE3T,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAACwT,EAAAA,EAAK,CACJpG,OAAQA,EACRtF,QAASA,EACTjI,MAAM,iBACN4T,KAAK,MACLC,QACEjU,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iDAAgDI,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLjG,QAASoI,EACTlC,SAAUkI,EACVnO,UAAU,kQAAiQI,SAC5Q,YAIDC,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLjG,QAtEcgC,gBAClByP,EAAa,UAsETvL,SAAUkI,EACVnO,UAAU,yQAAwQI,SAEjR+N,GACCrO,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mEAAuE,gBAIxFF,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAAC2T,EAAAA,EAAY,CAAChU,UAAU,iBAAiB,sBAM/CK,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLjG,QApFgBgC,gBACpByP,EAAa,aACnBiC,GAAqB,IAmFXxN,SAAUkI,EACVnO,UAAU,mQAAkQI,SAE3Q+N,GACCrO,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mEAAuE,oBAIxFF,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAAC4T,EAAAA,EAAiB,CAACjU,UAAU,iBAAiB,yBAMvDI,UAEDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EAExBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mEAAkEI,SAAA,EAC/EN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,iBAAiB3H,UAAU,+CAA8CI,SAAC,sBAGzFC,EAAAA,EAAAA,KAAA,SACEuC,GAAG,iBACHoD,KAAK,OACLN,MAAO2I,EAAYE,eACnB3G,SAAWpC,GAAM8I,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkC,GAAI,IAAE2I,eAAgB/I,EAAEG,OAAOD,UAC7E1F,UAAU,8KACV6H,YAAY,iBAIhB/H,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,eAAe3H,UAAU,+CAA8CI,SAAC,oBAGvFN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACEuC,GAAG,eACHoD,KAAK,OACLN,MAAO2I,EAAYG,aACnB5G,SAAWpC,GAAM8I,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkC,GAAI,IAAE4I,aAAchJ,EAAEG,OAAOD,UAC3E1F,UAAU,4JAEZK,EAAAA,EAAAA,KAAC6T,EAAAA,EAAY,CAAClU,UAAU,iFAM9BF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCI,SAAA,EACpDN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,eAAe3H,UAAU,+CAA8CI,SAAC,6BAGvFC,EAAAA,EAAAA,KAAA,SACEuC,GAAG,eACHoD,KAAK,OACLN,MAAO2I,EAAYK,aACnB9G,SAAWpC,GAAM8I,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkC,GAAI,IAAE8I,aAAclJ,EAAEG,OAAOD,UAC3E1F,UAAU,8KACV6H,YAAY,wBACZ5B,SAAmB,eAATiI,GAAyBD,EAAmB9L,OAAS,QAInErC,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,gBAAgB3H,UAAU,+CAA8CI,SAAC,2BAGxFC,EAAAA,EAAAA,KAAA,SACEuC,GAAG,gBACHoD,KAAK,OACLN,MAAO2I,EAAYM,cACnB/G,SAAWpC,GAAM8I,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkC,GAAI,IAAE+I,cAAenJ,EAAEG,OAAOD,UAC5E1F,UAAU,8KACV6H,YAAY,wBACZ5B,SAAmB,eAATiI,GAAyBD,EAAmB9L,OAAS,WAMrErC,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yCAAwCI,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAAC,gBAC/CN,EAAAA,EAAAA,MAAA,UACEkG,KAAK,SACLjG,QAnVMoU,KAClB,MAIMC,EAAU,CACdxR,GAAG,UAAD3C,OAAYoD,KAAKgR,OACnB5D,YAAa,GACbR,KAPW,IAQXI,SAPe,EAQfE,KAPWN,IAQXjF,MARWiF,KAWb3B,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdkC,GAAI,IACPgJ,WAAY,IAAIhJ,EAAKgJ,WAAYwF,QAoUvBpU,UAAU,sGAAqGI,SAAA,EAE/GC,EAAAA,EAAAA,KAACiU,EAAAA,EAAQ,CAACtU,UAAU,iBAAiB,kBAKzCK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BN,EAAAA,EAAAA,MAAA,SAAOE,UAAU,SAAQI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAAD,UACEN,EAAAA,EAAAA,MAAA,MAAIE,UAAU,2BAA0BI,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,wDAAuDI,SAAC,iBACtEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,wDAAuDI,SAAC,UACtEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,wDAAuDI,SAAC,cACtEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,wDAAuDI,SAAC,UACtEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,eAGlBK,EAAAA,EAAAA,KAAA,SAAAD,SACGiO,EAAYO,WACVhE,QAAOkG,GAAQA,GAAwB,kBAATA,IAC9B/I,KAAI,CAAC+I,EAAMhE,KAAW,IAADyH,EAAAC,EAAAC,EAAAC,EAEpB,MAAMC,GAAQjR,EAAAA,EAAAA,GAAA,CACZ+M,YAAaK,EAAKL,aAAe,GACjCR,KAAMC,WAAWY,EAAKb,OAAS,EAC/BI,SAAUH,WAAWY,EAAKT,WAAa,EACvCE,KAA6B,QAAzBgE,EAAW,QAAXC,EAAE1D,EAAKP,YAAI,IAAAiE,EAAAA,EAAI1D,EAAK9F,aAAK,IAAAuJ,EAAAA,EAAI,GAC9BzD,GAGL,OACFhR,EAAAA,EAAAA,MAAA,MAA2BE,UAAU,2BAA0BI,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,YAAWI,UACvBC,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACLN,MAAOiP,EAASlE,YAChB7I,SAAWpC,GAAM0L,EAAepE,EAAO,cAAetH,EAAEG,OAAOD,OAC/D1F,UAAU,qIACV6H,YAAY,2BAGhBxH,EAAAA,EAAAA,KAAA,MAAIL,UAAU,YAAWI,UACvBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAACuU,EAAAA,EAAkB,CAAC5U,UAAU,8EAC9BK,EAAAA,EAAAA,KAAA,SACE2F,KAAK,SACLN,MAAOiP,EAAS1E,KAChBrI,SAAWpC,GAAM0L,EAAepE,EAAO,OAAQtH,EAAEG,OAAOD,OACxD1F,UAAU,0IACV6H,YAAY,OACZgN,KAAK,OACLC,IAAI,YAIVzU,EAAAA,EAAAA,KAAA,MAAIL,UAAU,YAAWI,UACvBC,EAAAA,EAAAA,KAAA,SACE2F,KAAK,SACLN,MAAOiP,EAAStE,SAChBzI,SAAWpC,GAAM0L,EAAepE,EAAO,WAAYtH,EAAEG,OAAOD,OAC5D1F,UAAU,qIACV6H,YAAY,IACZgN,KAAK,OACLC,IAAI,SAGRzU,EAAAA,EAAAA,KAAA,MAAIL,UAAU,YAAWI,UACvBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2CAA0CI,SAAA,CAAC,MACrB,QAAhCqU,EAAc,QAAdC,EAACC,EAASpE,YAAI,IAAAmE,EAAAA,EAAIC,EAAS3J,aAAK,IAAAyJ,EAAAA,EAAI,IAAM,GAAGzD,QAAQ,SAG5D3Q,EAAAA,EAAAA,KAAA,MAAIL,UAAU,YAAWI,UACvBC,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLjG,QAASA,IA1YT+M,KACtBwB,GAAe1I,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdkC,GAAI,IACPgJ,WAAYhJ,EAAKgJ,WAAWhE,QAAO,CAACmK,EAAG1D,IAAMA,IAAMvE,SAuYhBkI,CAAelI,GAC9B9M,UAAU,oDAAmDI,UAE7DC,EAAAA,EAAAA,KAAC4U,EAAAA,EAAS,CAACjV,UAAU,kBA9ClB8Q,EAAKlO,IAAMkK,iBA0D9BzM,EAAAA,EAAAA,KAAA,OAAKL,UAAU,6BAA4BI,UACzCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qCAAoCI,SAAA,EACjDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,eACNN,EAAAA,EAAAA,MAAA,QAAAM,SAAA,CAAM,IAAEsQ,EAAOC,gBAEjB7Q,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qCAAoCI,SAAA,EACjDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBACNN,EAAAA,EAAAA,MAAA,QAAAM,SAAA,CAAM,IAAEsQ,EAAOK,kBAEjBjR,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qCAAoCI,SAAA,EACjDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,UACNN,EAAAA,EAAAA,MAAA,QAAAM,SAAA,CAAM,IAAEsQ,EAAOO,WAEjB5Q,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gCAA+BI,UAC5CN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wDAAuDI,SAAA,EACpEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YACNN,EAAAA,EAAAA,MAAA,QAAAM,SAAA,CAAM,IAAEsQ,EAAO1F,yBAS3B3K,EAAAA,EAAAA,KAACwT,EAAAA,EAAK,CACJpG,OAAQ+F,EACRrL,QAASyL,EACTE,KAAK,KAAI1T,UAETN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6BAA4BI,SAAA,EACzCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yCAAwCI,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,mCAAkCI,SAAC,sBAGjDC,EAAAA,EAAAA,KAAA,UACEN,QAAS6T,EACT5T,UAAU,mDAAkDI,UAE5DC,EAAAA,EAAAA,KAACwI,EAAAA,EAAS,CAAC7I,UAAU,kBAIzBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAC,gDAKlCN,EAAAA,EAAAA,MAAA,UACEC,QApTYgC,UACtB4R,GAAmB,GACnB,UAEQ,IAAIuB,SAAQC,GAAW3M,WAAW2M,EAAS,QACjDrL,EAAAA,GAAMlB,KAAK,sCACb,CAAE,MAAOrB,GACPuC,EAAAA,GAAMvC,MAAM,uBACd,CAAC,QACCoM,GAAmB,EACrB,GA2SU1N,SAAUyN,EACV1T,UAAU,8HAA6HI,SAAA,EAEvIN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8BAA6BI,SAAA,EAC1CC,EAAAA,EAAAA,KAAC0M,EAAAA,EAAY,CAAC/M,UAAU,2BACxBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,yBAAwBI,SAAC,gBACxCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,wBAAuBI,SAAC,sDAG1CsT,IAAmBrT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qEAIrCF,EAAAA,EAAAA,MAAA,UACEC,QAvTmBgC,UAC7B4R,GAAmB,GACnB,UAEQ,IAAIuB,SAAQC,GAAW3M,WAAW2M,EAAS,QACjDrL,EAAAA,GAAMlB,KAAK,sCACb,CAAE,MAAOrB,GACPuC,EAAAA,GAAMvC,MAAM,+BACd,CAAC,QACCoM,GAAmB,EACrB,GA8SU1N,SAAUyN,EACV1T,UAAU,8HAA6HI,SAAA,EAEvIN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8BAA6BI,SAAA,EAC1CC,EAAAA,EAAAA,KAAC+U,EAAAA,EAAgB,CAACpV,UAAU,4BAC5BF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,yBAAwBI,SAAC,wBACxCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,wBAAuBI,SAAC,iEAG1CsT,IAAmBrT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sEAIrCK,EAAAA,EAAAA,KAAA,UACEN,QA1T0BsV,KACpCvL,EAAAA,GAAM5C,QAAQ,0BACduM,GAAqB,IAyTXxN,SAAUyN,EACV1T,UAAU,8HAA6HI,UAEvIN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8BAA6BI,SAAA,EAC1CC,EAAAA,EAAAA,KAAC2T,EAAAA,EAAY,CAAChU,UAAU,6BACxBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,yBAAwBI,SAAC,mBACxCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,wBAAuBI,SAAC,2DAM/CC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDC,EAAAA,EAAAA,KAAA,UACEN,QAAS6T,EACT5T,UAAU,oEAAmEI,SAC9E,qBCpab,EAxUiBkE,IAA8D,IAA7D,oBAAEgR,GAAsB,EAAK,uBAAEC,GAAwBjR,EACvE,MAAM,EAAEI,IAAM/E,EAAAA,EAAAA,OACR,eAAEmC,GAAmBvB,KAGpBiV,EAAUC,IAAe1Q,EAAAA,EAAAA,UAAS,KAClCoJ,EAASC,IAAcrJ,EAAAA,EAAAA,WAAS,IAChCwC,EAAOmO,IAAY3Q,EAAAA,EAAAA,UAAS,OAC5B4Q,EAAiBC,IAAsB7Q,EAAAA,EAAAA,WAAS,GAGjD8Q,GAAgB1U,EAAAA,EAAAA,cAAYY,UAChC,IACEqM,GAAW,GACXsH,EAAS,MAYTlN,YAAW,KACTiN,EAAY,CACV,CACE7S,GAAI,EACJ2L,eAAgB,eAChBuH,WAAY,aACZtD,WAAY,eACZ7D,cAAe,kBACf0D,aAAc,KACdZ,OAAQ,aAEV,CACE7O,GAAI,EACJ2L,eAAgB,eAChBuH,WAAY,aACZtD,WAAY,eACZ7D,cAAe,iBACf0D,aAAc,MACdZ,OAAQ,SAEV,CACE7O,GAAI,EACJ2L,eAAgB,eAChBuH,WAAY,aACZtD,WAAY,eACZ7D,cAAe,qBACf0D,aAAc,QACdZ,OAAQ,eAGZrD,GAAW,KACV,IAEL,CAAE,MAAO2H,GACPrO,QAAQH,MAAM,2BAA4BwO,GAC1CL,EAASK,EAAI9N,SACbmG,GAAW,GACXtE,EAAAA,GAAMvC,MAAM7C,EAAE,0CAChB,IACC,CAACA,IAgBJ,IAbA4D,EAAAA,EAAAA,YAAU,KACRuN,MACC,CAACA,KAGJvN,EAAAA,EAAAA,YAAU,KACJgN,IACFM,GAAmB,GACnBL,GAAuB,MAExB,CAACD,EAAqBC,KAGpBzT,IACH,OAAO,KAIT,MAoCM4I,EA/BG,CACLsL,cALoBR,EAASrT,OAM7B8T,cALoBT,EAAS5K,QAAOsL,GAA8B,UAAnBA,EAAQzE,SAAoBtP,OAM3EgU,kBALwBX,EAAS5K,QAAOsL,GAA8B,cAAnBA,EAAQzE,SAAwBtP,QAmCvF,OAAIgM,GAEA9N,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uCAAsCI,UACnDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yCAAwCI,SAAA,EACrDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oEACfK,EAAAA,EAAAA,KAAA,QAAML,UAAU,qBAAoBI,SAAEsE,EAAE,0BAO9C5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uCAAsCI,SAAA,EAEnDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yEAAwEI,SAAA,EACrFN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,SAAQI,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,qCAAoCI,SAC/CsE,EAAE,6BAELrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gBAAeI,SACzBsE,EAAE,mCAKPrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAkBI,UAC/BC,EAAAA,EAAAA,KAAA,UACEN,QAASA,IAAM6V,GAAmB,GAClC5V,UAAU,qOAAoOI,SAE7OsE,EAAE,kDAMT5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6CAA4CI,SAAA,EAEzDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAC+U,EAAAA,EAAgB,CAACpV,UAAU,6BAE9BF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SAAEsK,EAAMsL,iBACpD3V,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SAAEsE,EAAE,mDAM9CrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAC+V,EAAAA,EAAU,CAACpW,UAAU,6BAExBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SAAEsK,EAAMuL,iBACpD5V,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SAAEsE,EAAE,mDAM9CrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAC4T,EAAAA,EAAiB,CAACjU,UAAU,8BAE/BF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SAAEsK,EAAMyL,qBACpD9V,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SAAEsE,EAAE,0DAOhD5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0DAAyDI,SAAA,EACtEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,mCAAkCI,SAC7CsE,EAAE,oCAIN6C,GACCzH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kDAAiDI,SAAA,EAC9DC,EAAAA,EAAAA,KAACgW,EAAAA,EAAuB,CAACrW,UAAU,iCACnCK,EAAAA,EAAAA,KAAA,KAAGL,UAAU,oBAAmBI,SAAEsE,EAAE,6CACpCrE,EAAAA,EAAAA,KAAA,UACEN,QAAS8V,EACT7V,UAAU,+FAA8FI,SAEvGsE,EAAE,qBAGe,IAApB8Q,EAASrT,QACXrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kDAAiDI,SAAA,EAC9DC,EAAAA,EAAAA,KAAC+U,EAAAA,EAAgB,CAACpV,UAAU,kCAC5BK,EAAAA,EAAAA,KAAA,MAAIL,UAAU,yCAAwCI,SACnDsE,EAAE,mCAELrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qCAAoCI,SAC9CsE,EAAE,4CAIPrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BN,EAAAA,EAAAA,MAAA,SAAOE,UAAU,sCAAqCI,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,cAAaI,UAC5BN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,mDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,+CAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,+CAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,kDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,iDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,4CAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,kDAITrE,EAAAA,EAAAA,KAAA,SAAOL,UAAU,uCAAsCI,SACpDoV,EAASzN,KAAKmO,IACbpW,SAAAA,EAAAA,MAAA,MAAqBE,UAAU,mDAAkDI,SAAA,EAC/EC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6DAA4DI,SACvE8V,EAAQ3H,kBAEXlO,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oDAAmDI,UAtJ/DkW,EAuJYJ,EAAQJ,WAtJ/B,IAAIzS,KAAKiT,GAAYC,mBAAmB,QAAS,CACtDvH,KAAM,UACNwH,MAAO,QACPC,IAAK,gBAqJSpW,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oDAAmDI,SAC9D8V,EAAQ1D,cAEXnS,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oDAAmDI,SAC9D8V,EAAQvH,iBAEXtO,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oDAAmDI,UAvK3DkS,EAwKY4D,EAAQ7D,aAvKnC,IAAIqE,KAAKC,aAAa,QAAS,CACpC7Q,MAAO,WACP8Q,SAAU,QACTC,OAAOvE,OAsKMjS,EAAAA,EAAAA,KAAA,MAAIL,UAAU,8BAA6BI,UACzCC,EAAAA,EAAAA,KAAA,QAAML,UAAS,4DAAAC,OACM,cAAnBiW,EAAQzE,OACJ,8BACA,6BACHrR,SACAsE,EAAE,iCAADzE,OAAkCiW,EAAQzE,cAGhDpR,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oDAAmDI,UAC/DC,EAAAA,EAAAA,KAAA,UACEN,QAASA,KAAM+W,OA5LVC,EA4L4Bb,EAAQtT,GA1L7D8E,QAAQuF,IAAI,yDAA0D8J,QACtEjN,EAAAA,GAAMlB,KAAK,4DAHcmO,OA6LL/W,UAAU,mEACVE,MAAOwE,EAAE,iCAAiCtE,UAE1CC,EAAAA,EAAAA,KAAC+V,EAAAA,EAAU,CAACpW,UAAU,kBA/BnBkW,EAAQtT,IA1JT0P,MAQJgE,eA2LfX,IACCtV,EAAAA,EAAAA,KAAC2W,EAAkB,CACjBvJ,OAAQkI,EACRxN,QAASA,IAAMyN,GAAmB,GAClC5H,iBAAmBiJ,IAEjBxB,GAAYyB,GAAgB,CAC1B,CACEtU,GAAIqU,EAAWrU,GACf2L,eAAgB0I,EAAW1I,eAC3BuH,WAAYmB,EAAWnB,WACvBtD,WAAYyE,EAAWzE,WACvB7D,cAAesI,EAAWtI,cAC1B0D,aAAc4E,EAAWjM,MACzByG,OAAQwF,EAAWxF,WAElByF,KAELtB,GAAmB,IAErB1H,KAAK,eCzUFiJ,EAA+BC,IAC1C,IAAKA,GAAoC,IAAtBA,EAAWjV,OAC5B,MAAO,CACLkV,SAAS,EACT9P,MAAO,aACPU,QAAS,0BACT2H,kBAAmB,IAKvB,MAAMA,EAAoB,IAAI,IAAIC,IAChCuH,EACGrP,KAAI+H,GAAUA,EAAOpB,eACrB9D,QAAO0M,GAAWA,GAAWA,EAAQhR,WAI1C,OAAiC,IAA7BsJ,EAAkBzN,OACb,CACLkV,SAAS,EACT9P,MAAO,mBACPU,QAAS,gEACT2H,kBAAmB,IAKnBA,EAAkBzN,OAAS,EACtB,CACLkV,SAAS,EACT9P,MAAO,qBACPU,QAAQ,sDAADhI,OAAwD2P,EAAkBI,KAAK,OACtFJ,kBAAmBA,GAKhB,CACLyH,SAAS,EACT9P,MAAO,KACPU,QAAS,qDACT2H,kBAAmBA,EACnB2H,gBAAiB3H,EAAkB,KA8C1B4H,EAA4B,SAACC,GAAuC,IAA5B7H,EAAiB1N,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACvE,OAAQuV,GACN,IAAK,aACH,MAAO,8DAET,IAAK,mBACH,MAAO,sGAET,IAAK,qBACH,MAAM,+HAANxX,OAAsI2P,EAAkBI,KAAK,MAAK,mCAEpK,QACE,MAAO,yEAEb,E,4CCnGA,MAqdA,EArd6B1L,IAA8C,IAA7C,OAAEmJ,EAAM,QAAEtF,EAAO,mBAAEuP,GAAoBpT,EACnE,MAAM,KAAE9D,IAASE,EAAAA,EAAAA,OACX,eAAEqD,IAAmBa,EAAAA,EAAAA,OACrB,EAAEF,IAAM/E,EAAAA,EAAAA,OACP0F,EAAcC,IAAmBP,EAAAA,EAAAA,WAAS,IAE3C,SACJ4S,EAAQ,aACRnG,EAAY,MACZoG,EAAK,SACLC,EAAQ,MACRC,EACAC,WAAW,OAAE5S,KACX6S,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbpR,SAAU,UACV6H,aAAc,GACdC,cAAe,GACfzL,SAAU,GACVuN,YAAa,GACbyH,gBAAiB,QACjBC,cAAe,QACfC,iBAAkB,QAClBC,eAAgB,QAChBjI,iBAAkB,EAClBE,mBAAoB,EACpBgI,MAAO,MAKLC,EAAgBT,EAAM,mBACtBU,EAAcV,EAAM,iBACpBW,EAAiBX,EAAM,oBACvBY,EAAeZ,EAAM,mBAG3BxP,EAAAA,EAAAA,YAAU,KACR,GAAIiQ,GAAiBC,EAAa,CAChC,MAAMG,EAAQ,IAAItV,KAAK,cAADpD,OAAesY,IAC/BK,EAAM,IAAIvV,KAAK,cAADpD,OAAeuY,IACnC,GAAII,EAAMD,EAAO,CACf,MAAME,GAASD,EAAMD,GAAK,KAC1Bd,EAAS,mBAAoBzI,KAAK0J,MAAc,IAARD,GAAe,IACzD,CACF,IACC,CAACN,EAAeC,EAAaX,KAEhCvP,EAAAA,EAAAA,YAAU,KACR,GAAImQ,GAAkBC,EAAc,CAClC,MAAMC,EAAQ,IAAItV,KAAK,cAADpD,OAAewY,IAC/BG,EAAM,IAAIvV,KAAK,cAADpD,OAAeyY,IACnC,GAAIE,EAAMD,EAAO,CACf,MAAME,GAASD,EAAMD,GAAK,KAC1Bd,EAAS,qBAAsBzI,KAAK0J,MAAc,IAARD,GAAe,IAC3D,CACF,IACC,CAACJ,EAAgBC,EAAcb,IAGlC,MA4MMhS,EAAcA,KACbR,IACHuS,IACAzP,MAIJ,OACE9H,EAAAA,EAAAA,KAACwT,EAAAA,EAAK,CACJpG,OAAQA,EACRtF,QAAStC,EACT3F,MAAOwE,EAAE,wCACToP,KAAK,KACLiF,YAAa1T,EACb2T,qBAAsB3T,EAAajF,UAEnCN,EAAAA,EAAAA,MAAA,QAAMoG,SAAUsL,GA5NHzP,UACfuD,GAAgB,GAGhB,MAAMlC,GAAY,IAAIC,MAAOC,cAC7BoE,QAAQuF,IAAI,KAAO,IAAIgM,OAAO,KAC9BvR,QAAQuF,IAAI,0DAADhN,OAAiDmD,IAC5DsE,QAAQuF,IAAI,IAAIgM,OAAO,KAEvBvR,QAAQuF,IAAI,+BACZzG,OAAO0S,QAAQrU,GAAUkN,SAAQwC,IAAmB,IAAjBjI,EAAK5G,GAAM6O,EAC5C7M,QAAQuF,IAAI,QAADhN,OAASqM,EAAG,MAAArM,OAAK+S,KAAKC,UAAUvN,GAAM,YAAAzF,cAAkByF,EAAK,SAG1EgC,QAAQuF,IAAI,gCACZvF,QAAQuF,IAAI,eAADhN,OAAoB,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMsC,QACjC4E,QAAQuF,IAAI,cAADhN,OAAmB,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,OAChCiC,QAAQuF,IAAI,oBAADhN,OAAyB,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,aACtCe,QAAQuF,IAAI,mBAADhN,OAAwB,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMoG,YACrCc,QAAQuF,IAAI,yBAADhN,OAA0B+S,KAAKC,UAAUlP,KAEpD,IAAK,IAADoV,EAAAC,EAAAC,EAAAC,EAAAC,EAEF,MAAMC,GAAc,IAAInW,MAAO4L,cAAc/C,WAAWgD,OAAO,GACzDuK,EAAerK,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoBpD,WAAWqD,SAAS,EAAG,KAC1EmK,EAAe,GAAAzZ,OAAMuZ,GAAWvZ,OAAGwZ,GACzC/R,QAAQuF,IAAI,+CAADhN,OAAsCyZ,IAGjD,MAAMC,EAAU,CAEdC,WAAYF,EACZhL,aAAmC,QAAvByK,EAAEtU,EAAS6J,oBAAY,IAAAyK,OAAA,EAArBA,EAAuB7S,OACrCqI,eAAqC,QAAtByK,EAAAvU,EAAS8J,qBAAa,IAAAyK,OAAA,EAAtBA,EAAwB9S,SAAU,GACjDpD,UAA2B,QAAjBmW,EAAAxU,EAAS3B,gBAAQ,IAAAmW,OAAA,EAAjBA,EAAmB/S,SAAU,GACvCuT,kBAAsC,QAApBP,EAAAzU,EAAS4L,mBAAW,IAAA6I,OAAA,EAApBA,EAAsBhT,SAAU,GAClD4R,gBAAiBrT,EAASqT,gBAC1BC,cAAetT,EAASsT,cACxB2B,iBAAkB5J,WAAWrL,EAASuL,mBAAqB,EAC3DgI,iBAAkBvT,EAASuT,iBAC3BC,eAAgBxT,EAASwT,eACzB0B,kBAAmB7J,WAAWrL,EAASyL,qBAAuB,EAC9D0J,aAAcxZ,EAAKiF,MAAI,GAAAxF,OAAOO,EAAKmG,WAAU,KAAA1G,OAAIO,EAAKoG,YAAe,UACrE6K,OAAQ,YAERwI,UAAW,UACXC,UAAW,GACXC,YAAa,YACbC,WAAYpH,KAAKC,UAAU,IAC3BoH,kBAA2C,QAAzBd,EAAA1U,EAASwV,wBAAgB,IAAAd,OAAA,EAAzBA,EAA2BjT,SAAU,IAGzDoB,QAAQuF,IAAI,gDACZzG,OAAO0S,QAAQS,GAAS5H,SAAQ0C,IAAmB,IAAjBnI,EAAK5G,GAAM+O,EAC3C/M,QAAQuF,IAAI,QAADhN,OAASqM,EAAG,MAAArM,OAAK+S,KAAKC,UAAUvN,GAAM,YAAAzF,cAAkByF,EAAK,SAI1E,MAAM4U,EAAiB,CAAC,eAAgB,gBAClCC,EAAgBD,EAAe1P,QAAOuG,IAAUwI,EAAQxI,KAQ9D,GANAzJ,QAAQuF,IAAI,sCACZqN,EAAevI,SAAQZ,IACrB,MAAMqJ,EAAYb,EAAQxI,IAAUwI,EAAQxI,GAAOjF,WAAW5F,OAC9DoB,QAAQuF,IAAI,MAADhN,OAAOua,EAAY,SAAM,SAAG,KAAAva,OAAIkR,EAAK,MAAAlR,OAAK+S,KAAKC,UAAU0G,EAAQxI,SAG1EoJ,EAAcpY,OAAS,EAEzB,MADAuF,QAAQH,MAAM,mCAADtH,OAA+Bsa,IACtC,IAAIjH,MAAM,4BAADrT,OAA6Bsa,EAAcvK,KAAK,QAGjEtI,QAAQuF,IAAI,sCAGZvF,QAAQuF,IAAI,mCACZvF,QAAQuF,IAAI,2BACZvF,QAAQuF,IAAI,qBACZvF,QAAQuF,IAAI,gDACZvF,QAAQuF,IAAI,cAADhN,OAAe+S,KAAKC,UAAU0G,EAAS,KAAM,KAExD,MAAMlH,QAAiBgI,EAAAA,EAAAA,IAAmB,gBAAiB,CACzD9H,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBG,KAAMC,KAAKC,UAAU0G,KAQvB,GALAjS,QAAQuF,IAAI,gCACZvF,QAAQuF,IAAI,gBAADhN,OAAiBwS,EAAShB,SACrC/J,QAAQuF,IAAI,qBAADhN,OAAsBwS,EAASiI,aAC1ChT,QAAQuF,IAAI,YAADhN,OAAawS,EAASS,KAE7BT,EAASG,QAAS,CACpBlL,QAAQuF,IAAI,iBACZ,IACE,IAAK,MAAOX,EAAK5G,KAAU+M,EAASG,QAAQsG,UAC1CxR,QAAQuF,IAAI,QAADhN,OAASqM,EAAG,MAAArM,OAAKyF,GAEhC,CAAE,MAAOF,GACPkC,QAAQuF,IAAI,0CACd,CACF,CASA,GAPAvF,QAAQuF,IAAI,sCAA6B,CACvCiG,GAAIT,EAASS,GACbzB,OAAQgB,EAAShB,OACjBiJ,WAAYjI,EAASiI,WACrB9H,QAASH,EAASG,QAAUpM,OAAOmU,YAAYlI,EAASG,QAAQsG,WAAa,wCAG1EzG,EAASS,GAAI,CAKhB,IAAIC,EAJJzL,QAAQuF,IAAI,4CACZvF,QAAQuF,IAAI,gCAAuBwF,EAAShB,QAC5C/J,QAAQuF,IAAI,qCAA4BwF,EAASiI,YAGjD,IAAIE,EAAe,GAEnB,IAEE,MAAMC,EAAgBpI,EAASqI,QAC/BF,QAAqBC,EAAcE,OACnCrT,QAAQuF,IAAI,kCAAyB2N,GAGrCzH,EAAYH,KAAKgI,MAAMJ,GACvBlT,QAAQuF,IAAI,kCAAyBkG,GAGb,MAApBV,EAAShB,SACX/J,QAAQuF,IAAI,mEACZvF,QAAQuF,IAAI,sBAAuBkG,GAC/BA,EAAUI,QACZ7L,QAAQuF,IAAI,2BAA4BkG,EAAUI,QAIxD,CAAE,MAAO0H,GACPvT,QAAQuF,IAAI,iDAAwCgO,GACpD9H,EAAY,CACVlL,QAAS2S,GAAY,QAAA3a,OAAYwS,EAAShB,OAAM,MAAAxR,OAAKwS,EAASiI,YAC9DjJ,OAAQgB,EAAShB,OACjBiJ,WAAYjI,EAASiI,WAEzB,CAEAhT,QAAQuF,IAAI,4CAAmCkG,EAAUlL,SAGzD,IAAIiT,EAAe/H,EAAUlL,SAAW,8BACxC,GAAwB,MAApBwK,EAAShB,SACXyJ,EAAe,0EACX/H,EAAUI,QAAU4H,MAAMC,QAAQjI,EAAUI,SAAS,CACvD,MAAM8H,EAAclI,EAAUI,OAAOxL,KAAIgO,IAAG,IAAAuF,EAAA,SAAArb,OAAc,QAAdqb,EAAOvF,EAAIwF,WAAG,IAAAD,OAAA,EAAPA,EAAStL,KAAK,KAAI,MAAA/P,OAAK8V,EAAIyF,QAAOxL,KAAK,MAC1FkL,EAAY,sBAAAjb,OAAyBob,EACvC,CAGF,MAAM,IAAI/H,MAAM4H,EAClB,CAEA,MAAMO,QAAqBhJ,EAASW,OACpC1L,QAAQuF,IAAI,0CAAsCwO,GAGlD3R,EAAAA,GAAM5C,QAAQxC,EAAE,8CAChBgD,QAAQuF,IAAI,oCAGRyK,GACFhQ,QAAQuF,IAAI,oDACZyK,EAAmB+D,IAEnB/T,QAAQuF,IAAI,wDAIdvF,QAAQuF,IAAI,iDACZ2K,IACAzP,IACAT,QAAQuF,IAAI,oDAEd,CAAE,MAAO1F,GACPG,QAAQH,MAAM,2CACdG,QAAQH,MAAM,gBAAiBA,GAC/BG,QAAQH,MAAM,iBAAkBA,EAAMU,SACtCP,QAAQH,MAAM,eAAgBA,EAAMmU,OACpChU,QAAQH,MAAM,cAAeA,EAAM9B,MACnCiC,QAAQH,MAAM,eAAgBA,EAAMoU,OAGpC,MAAMT,EAAe3T,EAAMU,SAAWvD,EAAE,2CACxCgD,QAAQH,MAAM,oCAA2B2T,GACzCpR,EAAAA,GAAMvC,MAAM2T,EAEd,CAAC,QACCxT,QAAQuF,IAAI,8CACZ3H,GAAgB,EAClB,KAoB0CtF,UAAU,YAAWI,SAAA,EAE3DN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCI,SAAA,EACpDN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,eAAe3H,UAAU,+CAA8CI,SACnFsE,EAAE,wDAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,eACHoD,KAAK,QACD2R,EAAS,eAAgB,CAAEiE,SAAU,8BAA6B,IACtE5b,UAAU,8KACV6H,YAAY,iCAEb1C,EAAOuJ,eACNrO,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAE+E,EAAOuJ,aAAazG,cAIlEnI,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,gBAAgB3H,UAAU,+CAA8CI,SACpFsE,EAAE,yDAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,gBACHoD,KAAK,QACD2R,EAAS,gBAAiB,CAAEiE,SAAU,+BAA8B,IACxE5b,UAAU,8KACV6H,YAAY,yBAEb1C,EAAOwJ,gBACNtO,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAE+E,EAAOwJ,cAAc1G,iBAMrEnI,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,WAAW3H,UAAU,+CAA8CI,SAC/EsE,EAAE,qDAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,WACHoD,KAAK,QACD2R,EAAS,WAAY,CAAEiE,SAAU,0BAAyB,IAC9D5b,UAAU,8KACV6H,YAAY,wBAEb1C,EAAOjC,WACN7C,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAE+E,EAAOjC,SAAS+E,cAK9DnI,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,cAAc3H,UAAU,+CAA8CI,SAClFsE,EAAE,4DAELrE,EAAAA,EAAAA,KAAA,YAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,eACC+U,EAAS,cAAe,CAAEiE,SAAU,kCAAiC,IACzEC,KAAM,EACN7b,UAAU,8KACV6H,YAAY,iCAEb1C,EAAOsL,cACNpQ,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAE+E,EAAOsL,YAAYxI,cAKjEnI,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCI,SAAA,EAEpDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAAC,gBAC/CN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yBAAwBI,SAAA,EACrCN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,kBAAkB3H,UAAU,+CAA8CI,SAAC,gBAC1FC,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,kBACHoD,KAAK,QACD2R,EAAS,oBAAkB,IAC/B3X,UAAU,8JAGdF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,gBAAgB3H,UAAU,+CAA8CI,SAAC,cACxFC,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,gBACHoD,KAAK,QACD2R,EAAS,kBAAgB,IAC7B3X,UAAU,iKAIhBF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,mBAAmB3H,UAAU,+CAA8CI,SAAC,sBAC3FC,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,mBACHoD,KAAK,SACL6O,KAAK,QACD8C,EAAS,mBAAoB,CAAE7C,IAAK,KAAI,IAC5C9U,UAAU,yJACV6H,YAAY,gBAMlB/H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAAC,kBAC/CN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yBAAwBI,SAAA,EACrCN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,mBAAmB3H,UAAU,+CAA8CI,SAAC,gBAC3FC,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,mBACHoD,KAAK,QACD2R,EAAS,qBAAmB,IAChC3X,UAAU,8JAGdF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,iBAAiB3H,UAAU,+CAA8CI,SAAC,cACzFC,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,iBACHoD,KAAK,QACD2R,EAAS,mBAAiB,IAC9B3X,UAAU,iKAIhBF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,qBAAqB3H,UAAU,+CAA8CI,SAAC,wBAC7FC,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,qBACHoD,KAAK,SACL6O,KAAK,QACD8C,EAAS,qBAAsB,CAAE7C,IAAK,KAAI,IAC9C9U,UAAU,yJACV6H,YAAY,mBAOpB/H,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,mBAAmB3H,UAAU,+CAA8CI,SAAC,iCAG3FC,EAAAA,EAAAA,KAAA,YAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,oBACC+U,EAAS,qBAAmB,IAChCkE,KAAM,EACN7b,UAAU,8KACV6H,YAAY,0CAKhB/H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2DAA0DI,SAAA,EACvEC,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLjG,QAAS8F,EACTI,SAAUZ,EACVrF,UAAU,8FAA6FI,SAEtGsE,EAAE,oBAELrE,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLC,SAAUZ,EACVrF,UAAU,uQAAsQI,SAE/QiF,GACCvF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mEACd0E,EAAE,sBAGLA,EAAE,oDCtHhB,EA7V2BJ,IAAyD,IAAxD,OAAEmJ,EAAM,QAAEtF,EAAO,UAAE2T,EAAS,mBAAEC,GAAoBzX,EAC5E,MAAM,EAAEI,IAAM/E,EAAAA,EAAAA,OACP0F,EAAcC,IAAmBP,EAAAA,EAAAA,WAAS,IAE3C,SACJ4S,EAAQ,aACRnG,EAAY,MACZoG,EACAG,WAAW,OAAE5S,GAAQ,SACrB0S,IACEG,EAAAA,EAAAA,OAGJ1P,EAAAA,EAAAA,YAAU,KACJwT,GAAarO,IACf/F,QAAQuF,IAAI,yDAAgD6O,GAG5DjE,EAAS,cAAeiE,EAAUpN,cAAgB,IAClDmJ,EAAS,eAAgBiE,EAAUnN,eAAiB,IACpDkJ,EAAS,WAAYiE,EAAU5Y,UAAY,IAC3C2U,EAAS,kBAAmBiE,EAAUjC,kBAAoB,IAC1DhC,EAAS,gBAAiBiE,EAAU5D,iBAAmB,IACvDL,EAAS,cAAeiE,EAAU3D,eAAiB,IACnDN,EAAS,iBAAkBiE,EAAU1D,kBAAoB,IACzDP,EAAS,eAAgBiE,EAAUzD,gBAAkB,IACrDR,EAAS,iBAAkBiE,EAAUhC,kBAAoB,IACzDjC,EAAS,mBAAoBiE,EAAU/B,mBAAqB,IAC5DlC,EAAS,kBAAmBiE,EAAUzB,kBAAoB,IAC1DxC,EAAS,YAAaiE,EAAU5B,WAAa,IAC7CrC,EAAS,WAAYiE,EAAU7B,WAAa,OAE7C,CAAC6B,EAAWrO,EAAQoK,IAEvB,MA+DMhS,EAAcA,KAClB+R,IACAzP,KAGF,OAAKsF,GAAWqO,GAGdzb,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iFAAgFI,UAC7FN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kFAAiFI,SAAA,EAE9FN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kEAAiEI,SAAA,EAC9EN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,mCAAkCI,SAC7CsE,EAAE,yCAEL5E,EAAAA,EAAAA,MAAA,KAAGE,UAAU,6BAA4BI,SAAA,CACtCsE,EAAE,yCAAyC,IAAEoX,EAAUE,qBAG5D3b,EAAAA,EAAAA,KAAA,UACEN,QAAS8F,EACT7F,UAAU,mDAAkDI,UAE5DC,EAAAA,EAAAA,KAACwI,EAAAA,EAAS,CAAC7I,UAAU,kBAKzBF,EAAAA,EAAAA,MAAA,QAAMoG,SAAUsL,GA5FLzP,UACf,GAAK+Z,EAAL,CAEAxW,GAAgB,GAEhB,IACEoC,QAAQuF,IAAI,oCAA2B6O,EAAUlZ,IACjD8E,QAAQuF,IAAI,0BAAiBpI,GAG7B,MAAM8U,EAAU,CACdjL,aAAc7J,EAAS8K,YACvBhB,cAAe9J,EAAS6K,aACxBxM,SAAU2B,EAAS3B,SACnB2W,iBAAkBhV,EAASoX,gBAC3B/D,gBAAiBrT,EAAS0T,cAC1BJ,cAAetT,EAAS2T,YACxBJ,iBAAkBvT,EAAS4T,eAC3BJ,eAAgBxT,EAAS6T,aACzBoB,iBAAkB5J,WAAWrL,EAASqX,iBAAmB,EACzDnC,kBAAmB7J,WAAWrL,EAASsX,mBAAqB,EAC5DjC,UAAWrV,EAASqV,UACpBD,UAAWpV,EAASuX,SACpB/B,iBAAkBxV,EAASwX,iBAG7B3U,QAAQuF,IAAI,iCAAwB0M,GAEpC,MAAMlH,QAAiBgI,EAAAA,EAAAA,IAAmB,gBAADxa,OAAiB6b,EAAUlZ,IAAM,CACxE+P,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBG,KAAMC,KAAKC,UAAU0G,KAGvB,IAAIlH,EAASS,GAcN,CACL,MAAMC,QAAkBV,EAASW,OAEjC,MADA1L,QAAQH,MAAM,oCAAgC4L,GACxC,IAAIG,MAAMH,EAAUI,QAAU,8BACtC,CAlBiB,CACf,MAAM+I,QAAyB7J,EAASW,OACxC1L,QAAQuF,IAAI,0CAAsCqP,GAElDxS,EAAAA,GAAM5C,QAAQxC,EAAE,4CAGZqX,GACFA,EAAmBO,GAIrB1E,IACAzP,GACF,CAKF,CAAE,MAAOZ,GACPG,QAAQH,MAAM,oCAAgCA,GAC9CuC,EAAAA,GAAMvC,MAAM7C,EAAE,yCAChB,CAAC,QACCY,GAAgB,EAClB,CA3DsB,KA2FsBtF,UAAU,gBAAeI,SAAA,EAE/DN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCI,SAAA,EACpDN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,SAAO6H,QAAQ,cAAc3H,UAAU,+CAA8CI,SAAA,CAClFsE,EAAE,qDAAqD,SAE1DrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,cACHoD,KAAK,QACD2R,EAAS,cAAe,CAAEiE,SAAU,8BAA6B,IACrE5b,UAAU,gLACV6H,YAAY,wBAEb1C,EAAOwK,cACNtP,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAE+E,EAAOwK,YAAY1H,cAIjEnI,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,eAAe3H,UAAU,+CAA8CI,SACnFsE,EAAE,yDAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,eACHoD,KAAK,QACD2R,EAAS,iBAAe,IAC5B3X,UAAU,gLACV6H,YAAY,gCAMlB/H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCI,SAAA,EACpDN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,SAAO6H,QAAQ,WAAW3H,UAAU,+CAA8CI,SAAA,CAC/EsE,EAAE,kDAAkD,SAEvDrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,WACHoD,KAAK,QACD2R,EAAS,WAAY,CAAEiE,SAAU,0BAAyB,IAC9D5b,UAAU,gLACV6H,YAAY,oBAEb1C,EAAOjC,WACN7C,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAE+E,EAAOjC,SAAS+E,cAI9DnI,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,WAAW3H,UAAU,+CAA8CI,SAAC,eAGnFC,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,WACHoD,KAAK,QACD2R,EAAS,aAAW,IACxB3X,UAAU,gLACV6H,YAAY,4BAMlB/H,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,YAAY3H,UAAU,+CAA8CI,SAAC,eAGpFC,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,YACHoD,KAAK,QACD2R,EAAS,cAAY,IACzB3X,UAAU,gLACV6H,YAAY,iCAKhB/H,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,SAAO6H,QAAQ,kBAAkB3H,UAAU,+CAA8CI,SAAA,CACtFsE,EAAE,yDAAyD,SAE9DrE,EAAAA,EAAAA,KAAA,YAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,mBACC+U,EAAS,kBAAmB,CAAEiE,SAAU,kCAAiC,IAC7EC,KAAM,EACN7b,UAAU,gLACV6H,YAAY,iCAEb1C,EAAO8W,kBACN5b,EAAAA,EAAAA,KAAA,KAAGL,UAAU,4BAA2BI,SAAE+E,EAAO8W,gBAAgBhU,cAKrEnI,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCI,SAAA,EACpDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAAC,eAE/CN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,gBAAgB3H,UAAU,+CAA8CI,SACpFsE,EAAE,0DAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,gBACHoD,KAAK,QACD2R,EAAS,kBAAgB,IAC7B3X,UAAU,kKAIdF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,cAAc3H,UAAU,+CAA8CI,SAClFsE,EAAE,wDAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,cACHoD,KAAK,QACD2R,EAAS,gBAAc,IAC3B3X,UAAU,kKAIdF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,iBAAiB3H,UAAU,+CAA8CI,SACrFsE,EAAE,2DAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,iBACHoD,KAAK,SACL6O,KAAK,MACLC,IAAI,KACA6C,EAAS,mBAAiB,IAC9B3X,UAAU,gLACV6H,YAAY,gBAKlB/H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAAC,iBAE/CN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,iBAAiB3H,UAAU,+CAA8CI,SACrFsE,EAAE,2DAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,iBACHoD,KAAK,QACD2R,EAAS,mBAAiB,IAC9B3X,UAAU,kKAIdF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,eAAe3H,UAAU,+CAA8CI,SACnFsE,EAAE,yDAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,eACHoD,KAAK,QACD2R,EAAS,iBAAe,IAC5B3X,UAAU,kKAIdF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,mBAAmB3H,UAAU,+CAA8CI,SACvFsE,EAAE,6DAELrE,EAAAA,EAAAA,KAAA,SAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,mBACHoD,KAAK,SACL6O,KAAK,MACLC,IAAI,KACA6C,EAAS,qBAAmB,IAChC3X,UAAU,gLACV6H,YAAY,mBAOpB/H,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOsH,QAAQ,kBAAkB3H,UAAU,+CAA8CI,SACtFsE,EAAE,4DAELrE,EAAAA,EAAAA,KAAA,YAAAqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEd,GAAG,mBACC+U,EAAS,oBAAkB,IAC/BkE,KAAM,EACN7b,UAAU,gLACV6H,YAAY,oCAKhB/H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,4DAA2DI,SAAA,EACxEC,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLjG,QAAS8F,EACT7F,UAAU,6DACViG,SAAUZ,EAAajF,SAEtBsE,EAAE,oBAELrE,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLC,SAAUZ,EACVrF,UAAU,sOAAqOI,SAE/NsE,EAAfW,EAAiB,gBAAqB,4BA9OjB,MCiYpC,EAvdmBkX,KACjB,MAAM,EAAE7X,IAAM/E,EAAAA,EAAAA,OACR,eAAEmC,GAAmBvB,KAGpB6W,EAAYoF,IAAiBzX,EAAAA,EAAAA,UAAS,KACtCoJ,EAASC,IAAcrJ,EAAAA,EAAAA,WAAS,IAChCwC,EAAOmO,IAAY3Q,EAAAA,EAAAA,UAAS,OAC5B4Q,EAAiBC,IAAsB7Q,EAAAA,EAAAA,WAAS,IAChD0X,EAAeC,IAAoB3X,EAAAA,EAAAA,WAAS,IAC5C4X,EAAgBC,IAAqB7X,EAAAA,EAAAA,UAAS,OAC9C8X,EAAiBC,IAAsB/X,EAAAA,EAAAA,UAAS,KAChDgY,EAAwBC,IAA6BjY,EAAAA,EAAAA,WAAS,IAC9DkY,EAAkBC,IAAuBnY,EAAAA,EAAAA,WAAS,IAClDoY,EAAiBC,IAAsBrY,EAAAA,EAAAA,UAAS,MAGjDsY,GAAkBlc,EAAAA,EAAAA,cAAYY,UAClC,IACEqM,GAAW,GACXsH,EAAS,MAEThO,QAAQuF,IAAI,wCACZ,MAAMwF,QAAiBgI,EAAAA,EAAAA,IAAmB,2BAE1C,IAAIhI,EAASS,GAIN,CACL,MAAMoK,QAAkB7K,EAASsI,OAEjC,MADArT,QAAQH,MAAM,yBAAqBkL,EAAShB,OAAQ6L,GAC9C,IAAIhK,MAAM,gCAADrT,OAAiCwS,EAAShB,QAC3D,CARiB,CACf,MAAM8L,QAAa9K,EAASW,OAC5B1L,QAAQuF,IAAI,8BAA0BsQ,GACtCf,EAAce,EAAKC,aAAe,GACpC,CAKF,CAAE,MAAOjW,GACPG,QAAQH,MAAM,qCAAiCA,GAC/CmO,EAASnO,EAAMU,QACjB,CAAC,QACCmG,GAAW,EACb,IACC,IAGGqP,GAAyBtc,EAAAA,EAAAA,cAAasa,IAC1C/T,QAAQuF,IAAI,uDACZoQ,MACC,CAACA,IAGEK,GAAyBvc,EAAAA,EAAAA,cAAawc,IAC1CjW,QAAQuF,IAAI,uDACZoQ,IACAvT,EAAAA,GAAM5C,QAAQxC,EAAE,8CACf,CAAC2Y,EAAiB3Y,IAGfkZ,GAAwBzc,EAAAA,EAAAA,cAAYY,MAAO8b,EAAUC,KACzD,IACEpW,QAAQuF,IAAI,0CAADhN,OAA4B6d,EAAY,UAAA7d,OAAS4d,EAAQ,SAEpE,MAAMpL,QAAiBgI,EAAAA,EAAAA,IAAmB,gBAADxa,OAAiB4d,GAAY,CACpElL,OAAQ,WAGV,IAAIF,EAASS,GAIN,CACL,MAAMoK,QAAkB7K,EAASsI,OAEjC,MADArT,QAAQH,MAAM,gCAA4BkL,EAAShB,OAAQ6L,GACrD,IAAIhK,MAAM,gCAADrT,OAAiCwS,EAAShB,QAC3D,CAPE/J,QAAQuF,IAAI,0CACZnD,EAAAA,GAAM5C,QAAQxC,EAAE,8CAChB2Y,GAMJ,CAAE,MAAO9V,GACPG,QAAQH,MAAM,oCAAgCA,GAC9CuC,EAAAA,GAAMvC,MAAM7C,EAAE,2CAChB,IACC,CAAC2Y,EAAiB3Y,KAGrB4D,EAAAA,EAAAA,YAAU,KACR+U,MACC,CAACA,IAGJ,MAAMU,GAAiB5c,EAAAA,EAAAA,cAAY,KACjC,MAAM6c,EAAe5G,EAAWjV,OAC1B8b,EAAoB7G,EAAWxM,QAAOkF,GAAUA,EAAOoO,aAAY/b,OAGzE,MAAO,CACL6b,eACAC,oBACAE,YALkBH,EAAeC,KAOlC,CAAC7G,IASEgH,EAAevF,GACdA,EACE3I,WAAW2I,GAAO7H,QAAQ,GADd,KAKb7C,QAASkQ,EAAe9W,MAAO+W,GAAgB/d,IAEvD,GAAI8d,EACF,OACEhe,EAAAA,EAAAA,KAAA,OAAKL,UAAU,6DAA4DI,UACzEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iFACfK,EAAAA,EAAAA,KAAA,KAAGL,UAAU,aAAYI,SAAEsE,EAAE,yBAMrC,GAAI4Z,EACF,OACEje,EAAAA,EAAAA,KAAA,OAAKL,UAAU,6DAA4DI,UACzEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,uCAAsCI,SAAC,mBACrDC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEke,KACnCje,EAAAA,EAAAA,KAAA,UACEN,QAASA,IAAMkD,OAAOsb,QAAQC,OAC9Bxe,UAAU,+FAA8FI,SAEvGsE,EAAE,wBAOb,IAAK5C,IACH,OAAO,KAGT,MAAM4I,EAAQqT,IAEd,OAAI5P,GAEA9N,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uCAAsCI,UACnDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yCAAwCI,SAAA,EACrDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oEACfK,EAAAA,EAAAA,KAAA,QAAML,UAAU,qBAAoBI,SAAEsE,EAAE,0BAO9C5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uCAAsCI,SAAA,EAEnDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yEAAwEI,SAAA,EACrFN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,SAAQI,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,qCAAoCI,SAC/CsE,EAAE,+BAELrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gBAAeI,SACzBsE,EAAE,qCAKP5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mDAAkDI,SAAA,EAE/DC,EAAAA,EAAAA,KAAA,UACEN,QAASA,IAAM6V,GAAmB,GAClC5V,UAAU,yOAAwOI,SAEjPsE,EAAE,iDAILrE,EAAAA,EAAAA,KAAA,UACEN,QAASA,KACP,MAAMkO,EAAqBmJ,EAAWxM,QAAOkF,GAAU+M,EAAgBrV,SAASsI,EAAOlN,MACjF6b,EAAatH,EAA4BlJ,GAC1CwQ,EAAWpH,QAId2F,GAA0B,IAH1BI,EAAmBqB,GACnBvB,GAAoB,KAKxBld,UAAU,gIAA+HI,SAExIsE,EAAE,qDAMT5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,6CAA4CI,SAAA,EAEzDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACqe,EAAAA,EAAyB,CAAC1e,UAAU,6BAEvCF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SAAEgX,EAAWjV,UACzD9B,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SAAEsE,EAAE,oDAM9CrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACse,EAAAA,EAAS,CAAC3e,UAAU,8BAEvBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SAAEsK,EAAMuT,qBACpD5d,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SAAEsE,EAAE,yDAM9CrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8DAA6DI,UAC1EN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAC+U,EAAAA,EAAgB,CAACpV,UAAU,+BAE9BF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gCAA+BI,SAAEsK,EAAMyT,eACpD9d,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SAAEsE,EAAE,sDAOhD5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0DAAyDI,SAAA,EACtEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAoCI,UACjDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oCAAmCI,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,mCAAkCI,SAC7CsE,EAAE,oCAIJmY,EAAgB1a,OAAS,IACxBrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qFAAoFI,SAAA,EACjGN,EAAAA,EAAAA,MAAA,QAAME,UAAU,wBAAuBI,SAAA,CACpCyc,EAAgB1a,OAAO,UAAmC,IAA3B0a,EAAgB1a,OAAe,IAAM,GAAG,gBAE1E9B,EAAAA,EAAAA,KAAA,UACEN,QAASA,KACP,MAAMkO,EAAqBmJ,EAAWxM,QAAOkF,GAAU+M,EAAgBrV,SAASsI,EAAOlN,MACjF6b,EAAatH,EAA4BlJ,GAC1CwQ,EAAWpH,QAId2F,GAA0B,IAH1BI,EAAmBqB,GACnBvB,GAAoB,KAKxBld,UAAU,kHAAiHI,SAC5H,kCAGDC,EAAAA,EAAAA,KAAA,UACEN,QAASA,IAAM+c,EAAmB,IAClC9c,UAAU,gHAA+GI,SAC1H,4BAQRmH,GACCzH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kDAAiDI,SAAA,EAC9DC,EAAAA,EAAAA,KAACgW,EAAAA,EAAuB,CAACrW,UAAU,iCACnCK,EAAAA,EAAAA,KAAA,KAAGL,UAAU,oBAAmBI,SAAEsE,EAAE,4CACpCrE,EAAAA,EAAAA,KAAA,UACEN,QAASsd,EACTrd,UAAU,+FAA8FI,SAEvGsE,EAAE,qBAGiB,IAAtB0S,EAAWjV,QACbrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kDAAiDI,SAAA,EAC9DC,EAAAA,EAAAA,KAACqe,EAAAA,EAAyB,CAAC1e,UAAU,kCACrCK,EAAAA,EAAAA,KAAA,MAAIL,UAAU,wCAAuCI,SAClDsE,EAAE,qCAELrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qCAAoCI,SAC9CsE,EAAE,8CAIPrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BN,EAAAA,EAAAA,MAAA,SAAOE,UAAU,sCAAqCI,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,cAAaI,UAC5BN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,UAC5FC,EAAAA,EAAAA,KAAA,SACE2F,KAAK,WACL4Y,QAAS/B,EAAgB1a,SAAWiV,EAAWjV,QAAUiV,EAAWjV,OAAS,EAC7EyF,SAAWpC,IACLA,EAAEG,OAAOiZ,QACX9B,EAAmB1F,EAAWrP,KAAI+H,GAAUA,EAAOlN,MAEnDka,EAAmB,KAGvB9c,UAAU,qGAGdK,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,oDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,mDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,mDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,sGAAqGI,SAChHsE,EAAE,iDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,sGAAqGI,SAChHsE,EAAE,mDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,mDAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iFAAgFI,SAC3FsE,EAAE,oDAITrE,EAAAA,EAAAA,KAAA,SAAOL,UAAU,uCAAsCI,SACpDgX,EAAWrP,KAAK+H,IACfhQ,EAAAA,EAAAA,MAAA,MAAoBE,UAAU,mDAAkDI,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6DAA4DI,UACxEC,EAAAA,EAAAA,KAAA,SACE2F,KAAK,WACL4Y,QAAS/B,EAAgBrV,SAASsI,EAAOlN,IACzCgF,SAAWpC,IACLA,EAAEG,OAAOiZ,QACX9B,EAAmB,IAAID,EAAiB/M,EAAOlN,KAE/Cka,EAAmBD,EAAgBjS,QAAOhI,GAAMA,IAAOkN,EAAOlN,OAGlE5C,UAAU,qGAGdK,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6DAA4DI,SACvE0P,EAAOkM,iBAEV3b,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oDAAmDI,SAC9D0P,EAAO+O,mBAAqBna,EAAE,0BAEjCrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oDAAmDI,SAC9D0P,EAAOpB,cAAgBhK,EAAE,0BAE5BrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,yEAAwEI,SACnFge,EAAYtO,EAAOgK,qBAEtBzZ,EAAAA,EAAAA,KAAA,MAAIL,UAAU,yEAAwEI,SACnFge,EAAYtO,EAAOiK,sBAEtB1Z,EAAAA,EAAAA,KAAA,MAAIL,UAAU,8BAA6BI,UACzCC,EAAAA,EAAAA,KAAA,QAAML,UAAS,2EAAAC,OACb6P,EAAOoO,WACH,oEACA,yEACH9d,SACA0P,EAAOoO,WAAaxZ,EAAE,0CAA4CA,EAAE,kDAGzErE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,oDAAmDI,UAC/DN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8BAA6BI,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,UACEN,QAASA,KACP6c,EAAkB9M,GAClB4M,GAAiB,IAEnB1c,UAAU,mFACVE,MAAOwE,EAAE,eAAetE,UAExBC,EAAAA,EAAAA,KAACye,EAAAA,EAAO,CAAC9e,UAAU,eAErBK,EAAAA,EAAAA,KAAA,UACEN,QAASA,KACHkD,OAAOqK,QAAQ5I,EAAE,sCACnBkZ,EAAsB9N,EAAOlN,GAAIkN,EAAOkM,gBAG5Chc,UAAU,6EACVE,MAAOwE,EAAE,iBAAiBtE,UAE1BC,EAAAA,EAAAA,KAAC4U,EAAAA,EAAS,CAACjV,UAAU,qBA5DpB8P,EAAOlN,gBAwE3B+S,IACCtV,EAAAA,EAAAA,KAAC0e,EAAoB,CACnBtR,OAAQkI,EACRxN,QAASA,IAAMyN,GAAmB,GAClC8B,mBAAoB+F,IAGvBhB,GAAiBE,IAChBtc,EAAAA,EAAAA,KAAC2e,EAAkB,CACjBvR,OAAQgP,EACRtU,QAASA,KACPuU,GAAiB,GACjBE,EAAkB,OAEpBd,UAAWa,EACXZ,mBAAoB2B,IAGvBX,IACC1c,EAAAA,EAAAA,KAAC2W,EAAkB,CACjBvJ,OAAQsP,EACR5U,QAASA,KACP6U,GAA0B,GAC1BF,EAAmB,KAErB9O,iBAAmBiJ,IACjBvP,QAAQuF,IAAI,2CAAuCgK,GACnD+F,GAA0B,GAC1BF,EAAmB,IACnBO,KAEFpP,mBAAoBmJ,EAAWxM,QAAOkF,GAAU+M,EAAgBrV,SAASsI,EAAOlN,MAChFsL,KAAM2O,EAAgB1a,OAAS,EAAI,aAAe,WAGrD8a,IACC5c,EAAAA,EAAAA,KAACwT,EAAAA,EAAK,CACJpG,OAAQwP,EACR9U,QAASA,IAAM+U,GAAoB,GACnChd,MAAOwE,EAAE,oCACTua,QAAS9B,EAAkB3F,EAA0B2F,EAAgB5V,MAAO4V,EAAgBvN,mBAAqBlL,EAAE,sCACnHwa,QAAS,CACP,CACE3S,MAAO7H,EAAE,aACT3E,QAASA,IAAMmd,GAAoB,WCkIjD,EA3lBkBiC,KAChB,MAAM,EAAEza,IAAM/E,EAAAA,EAAAA,OACR,UAAEqE,EAAS,iBAAEob,EAAgB,WAAEC,IAAeza,EAAAA,EAAAA,OAC9C,eAAE9C,GAAmBvB,KAGpB+e,EAAMC,IAAWxa,EAAAA,EAAAA,UAAS,KAC1BoJ,EAASC,IAAcrJ,EAAAA,EAAAA,WAAS,IAChCwC,EAAOmO,IAAY3Q,EAAAA,EAAAA,UAAS,OAC5B+E,EAAOC,IAAYhF,EAAAA,EAAAA,UAAS,OAG5Bya,EAASC,IAAc1a,EAAAA,EAAAA,UAAS,CACrC2a,SAAU,GACVC,OAAQ,GACRnf,KAAM,GACNof,SAAU,GACVC,OAAQ,GACRC,OAAQ,MAIHC,EAAYC,IAAiBjb,EAAAA,EAAAA,UAAS,CAC3Ckb,KAAM,EACNC,MAAO,GACPlV,MAAO,EACPmV,WAAY,KAIPjW,EAAQC,IAAapF,EAAAA,EAAAA,UAAS,cAC9BqF,EAAWC,IAAgBtF,EAAAA,EAAAA,UAAS,SAGpCqb,EAAWC,IAAgBtb,EAAAA,EAAAA,WAAS,GAGrCub,GAAgBnf,EAAAA,EAAAA,cAAYY,UAChC,MAAM,UAAEM,SAAoBP,EAAe,cAC3C,GAAKO,EAAL,CAKA+L,GAAW,GACXsH,EAAS,MAET,IACE,MAAM6K,GAAM7c,EAAAA,EAAAA,GAAA,CACVuc,KAAMF,EAAWE,KACjBC,MAAOH,EAAWG,MAClBM,QAAStW,EACTuW,WAAYrW,GACToV,GAILhZ,OAAOC,KAAK8Z,GAAQxO,SAAQzF,IACrBiU,EAAOjU,WAAaiU,EAAOjU,MAGlC,MAAM5F,QAAega,EAAAA,EAAAA,IAAeH,GAGhC7Z,EAAOQ,cAA2B9E,IAAhBsE,EAAO4Y,MAC3BC,EAAQ7Y,EAAO4Y,MAAQ,IACvBU,GAAcpa,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbkC,GAAI,IACPoF,MAAOtE,EAAOsE,OAAS,EACvBmV,WAAY/Q,KAAKuR,MAAMja,EAAOsE,OAAS,GAAKpF,EAAKsa,WAI/CxZ,EAAOQ,SACTwO,EAAS,MAIPhP,EAAOuB,SAAkC,IAAvBvB,EAAO4Y,KAAKnd,QAChCuF,QAAQuF,IAAI,mBAAoBvG,EAAOuB,WAIrCvB,EAAOa,OAAUb,EAAOa,MAAMC,SAAS,mBAAsBd,EAAOa,MAAMC,SAAS,UAIrF+X,EAAQ,IACRS,GAAcpa,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkC,GAAI,IAAEoF,MAAO,EAAGmV,WAAY,MACxDzK,EAAS,OALTA,EAAShP,EAAOa,MAQtB,CAAE,MAAOA,GACPG,QAAQH,MAAM,4BAA6BA,GAE3CmO,EAAShR,EAAE,yBACX6a,EAAQ,IACRS,GAAcpa,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkC,GAAI,IAAEoF,MAAO,EAAGmV,WAAY,KAC1D,CAAC,QACC/R,GAAW,EACb,CA1DA,MAFEsH,EAAShR,EAAE,0BA6DZ,CAACqb,EAAWE,KAAMF,EAAWG,MAAOhW,EAAQE,EAAWoV,EAAS1d,EAAgB4C,KAGnF4D,EAAAA,EAAAA,YAAU,KACRgY,MACC,CAACA,IAGJ,MAAMM,EAAqBA,CAACtU,EAAK5G,KAC/B+Z,GAAW7Z,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVkC,GAAI,IACP,CAAC0G,GAAM5G,MAETsa,GAAcpa,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbkC,GAAI,IACPqa,KAAM,OAKJY,EAAoBC,IACpB5W,IAAW4W,EACbzW,GAAazE,GAAiB,QAATA,EAAiB,OAAS,SAE/CuE,EAAU2W,GACVzW,EAAa,SAEf2V,GAAcpa,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbkC,GAAI,IACPqa,KAAM,OAKJc,EAAoBC,IACxBhB,GAAcpa,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbkC,GAAI,IACPqa,KAAMe,OAgGJC,EAAyBvB,IAC7B,OAAgB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUjU,eAChB,IAAK,WAAY,MAAO,YACxB,IAAK,OAAQ,MAAO,aACpB,IAAK,UAAW,MAAO,UACvB,IAAK,aAAc,MAAO,aAC1B,IAAK,SAAU,MAAO,eACtB,QAAS,MAAO,wBAad,WAAEyV,EAAU,QAAEhC,EAAO,MAAEiC,GAHpB,CAAED,WAJU,IAAI,IAAIrR,IAAIyP,EAAKvX,KAAIkF,GAAOA,EAAIyS,WAAU9U,OAAOmF,WAI/CmP,QAHL,IAAI,IAAIrP,IAAIyP,EAAKvX,KAAIkF,GAAOA,EAAI0S,SAAQ/U,OAAOmF,WAGjCoR,MAFhB,IAAI,IAAItR,IAAIyP,EAAKvX,KAAIkF,GAAOA,EAAImU,WAAanU,EAAIpK,aAAY+H,OAAOmF,YAOpF,OACEjQ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYI,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAkBI,UAC/BN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yBAAwBI,SAAA,EACrCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,MAAKI,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,UAASI,SAAEsE,EAAE,8BAC3BrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kBAAiBI,SAAEsE,EAAE,oCAEpCrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBC,EAAAA,EAAAA,KAAA,UACEL,UAAU,0BACVD,QA7HSgC,UACnB,MAAM,UAAEM,SAAoBP,EAAe,eAC3C,GAAKO,EAAL,CAQAge,GAAa,GAEb,IACE,MAAME,GAAM7c,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACP8b,GAAO,IACVgB,QAAStW,EACTuW,WAAYrW,IAId5D,OAAOC,KAAK8Z,GAAQxO,SAAQzF,IACrBiU,EAAOjU,WAAaiU,EAAOjU,MAGlC,MAAM5F,QAAe2a,EAAAA,EAAAA,IAAgBd,GAErC,IAAI7Z,EAAOQ,QAiBT,MAAM,IAAIoM,MAAM5M,EAAOa,OAAS,iBAjBd,CAElB,MAAM+Z,EAAO,IAAIC,KAAK,CAAC7a,EAAO8a,KAAM,CAAExb,KAAM,aACtChD,EAAMC,OAAOwe,IAAIC,gBAAgBJ,GACjCK,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAO9e,EACZ2e,EAAKI,SAAQ,cAAA9hB,QAAiB,IAAIoD,MAAOC,cAAcmL,MAAM,KAAK,GAAE,QACpEmT,SAAS7O,KAAKiP,YAAYL,GAC1BA,EAAKM,QACLL,SAAS7O,KAAKmP,YAAYP,GAC1B1e,OAAOwe,IAAIU,gBAAgBnf,GAE3B+G,EAAS,CACP/D,KAAM,UACNiC,QAASvD,EAAE,6CAEf,CAGF,CAAE,MAAO6C,GACPG,QAAQH,MAAM,8BAA+BA,GAC7CwC,EAAS,CACP/D,KAAM,QACNiC,QAASV,EAAMU,SAAWvD,EAAE,yBAEhC,CAAC,QACC2b,GAAa,EACf,CA7CA,MALEtW,EAAS,CACP/D,KAAM,QACNiC,QAASvD,EAAE,0BAyHLuB,SAAUma,GAA6B,IAAhBd,EAAKnd,OAAa/B,SAExCggB,GACCtgB,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAML,UAAU,wCAAwCa,KAAK,SAAS,cAAY,SACjF6D,EAAE,mCAGL5E,EAAAA,EAAAA,MAAAkI,EAAAA,SAAA,CAAA5H,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBACZ0E,EAAE,6CASfrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4BAA2BI,UACxCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EACxBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBI,SAAA,EACtCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAAEsE,EAAE,yCACjC5E,EAAAA,EAAAA,MAAA,UACEE,UAAU,cACV0F,MAAO8Z,EAAQE,SACf9X,SAAWpC,GAAMob,EAAmB,WAAYpb,EAAEG,OAAOD,OAAOtF,SAAA,EAEhEC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAEsE,EAAE,gBACnB8B,OAAO4b,OAAOC,EAAAA,IAAkBta,KAAI2X,IACnCrf,EAAAA,EAAAA,KAAA,UAAuBqF,MAAOga,EAAStf,SACpCsE,EAAE,gCAADzE,OAAiCyf,EAASjU,iBADjCiU,YAMnB5f,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAAEsE,EAAE,uCACjC5E,EAAAA,EAAAA,MAAA,UACEE,UAAU,cACV0F,MAAO8Z,EAAQG,OACf/X,SAAWpC,GAAMob,EAAmB,SAAUpb,EAAEG,OAAOD,OAAOtF,SAAA,EAE9DC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAEsE,EAAE,gBACnBwa,EAAQnX,KAAI4X,IACXtf,EAAAA,EAAAA,KAAA,UAAqBqF,MAAOia,EAAOvf,SAChCuf,GADUA,YAMnB7f,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAAEsE,EAAE,qCACjC5E,EAAAA,EAAAA,MAAA,UACEE,UAAU,cACV0F,MAAO8Z,EAAQhf,KACfoH,SAAWpC,GAAMob,EAAmB,OAAQpb,EAAEG,OAAOD,OAAOtF,SAAA,EAE5DC,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAEtF,SAAEsE,EAAE,gBACnByc,EAAMpZ,KAAIvH,IACTH,EAAAA,EAAAA,KAAA,UAAmBqF,MAAOlF,EAAKJ,SAC5BI,GADUA,YAMnBV,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAAEsE,EAAE,yCACjCrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACLhG,UAAU,eACV0F,MAAO8Z,EAAQI,SACfhY,SAAWpC,GAAMob,EAAmB,WAAYpb,EAAEG,OAAOD,aAG7D5F,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUI,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAAEsE,EAAE,uCACjCrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACLhG,UAAU,eACV0F,MAAO8Z,EAAQK,OACfjY,SAAWpC,GAAMob,EAAmB,SAAUpb,EAAEG,OAAOD,aAG3DrF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcI,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,UACEL,UAAU,4BACVD,QA9JKuiB,KACnB7C,EAAW,CACTC,SAAU,GACVC,OAAQ,GACRnf,KAAM,GACNof,SAAU,GACVC,OAAQ,GACRC,OAAQ,KAEVE,GAAcpa,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbkC,GAAI,IACPqa,KAAM,OAoJM/f,MAAOwE,EAAE,kCAAkCtE,UAE3CC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,sBAEfK,EAAAA,EAAAA,KAAA,UACEL,UAAU,kBACVD,QAASugB,EACTra,SAAUkI,EACVjO,MAAOwE,EAAE,kBAAkBtE,UAE3BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qCAMrBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcI,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBC,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACLhG,UAAU,eACV6H,YAAanD,EAAE,+CACfgB,MAAO8Z,EAAQM,OACflY,SAAWpC,GAAMob,EAAmB,SAAUpb,EAAEG,OAAOD,YAG3DrF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUI,UACvBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kCAAiCI,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAC1BsE,EAAE,8BAA+B,CAAE6d,MAAOxC,EAAW/U,WAExDlL,EAAAA,EAAAA,MAAA,UACEE,UAAU,6BACV8F,MAAO,CAAE0c,MAAO,QAChB9c,MAAOqa,EAAWG,MAClBtY,SAAWpC,GAAMwa,GAAcpa,IAAIlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkC,GAAI,IAAEsa,MAAOuC,SAASjd,EAAEG,OAAOD,OAAQua,KAAM,MAAM7f,SAAA,EAEhGC,EAAAA,EAAAA,KAAA,UAAQqF,MAAO,GAAGtF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQqF,MAAO,GAAGtF,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQqF,MAAO,IAAItF,SAAC,YAEtBC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAAEsE,EAAE,6CAQ3CrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,SAC3B+N,GACCrO,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBI,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iBAAiBa,KAAK,SAAQT,UAC3CC,EAAAA,EAAAA,KAAA,QAAML,UAAU,kBAAiBI,SAAEsE,EAAE,+CAEvCrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kBAAiBI,SAAEsE,EAAE,+CAElC6C,GACFzH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yBAAyBa,KAAK,QAAOT,SAAA,EAClDC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,oCACZuH,KAEe,IAAhB+X,EAAKnd,QACPrC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBI,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,6CACbK,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kBAAiBI,SAAEsE,EAAE,gDAGpCrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mBAAkBI,UAC/BN,EAAAA,EAAAA,MAAA,SAAOE,UAAU,yBAAwBI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,cAAaI,UAC5BN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,MACEE,UAAU,WACVD,QAASA,IAAM8gB,EAAiB,aAAazgB,SAAA,CAE5CsE,EAAE,+BACS,cAAXwF,IACC7J,EAAAA,EAAAA,KAAA,KAAGL,UAAS,eAAAC,OAA+B,QAAdmK,EAAsB,KAAO,OAAM,eAGpEtK,EAAAA,EAAAA,MAAA,MACEE,UAAU,WACVD,QAASA,IAAM8gB,EAAiB,YAAYzgB,SAAA,CAE3CsE,EAAE,8BACS,aAAXwF,IACC7J,EAAAA,EAAAA,KAAA,KAAGL,UAAS,eAAAC,OAA+B,QAAdmK,EAAsB,KAAO,OAAM,eAGpEtK,EAAAA,EAAAA,MAAA,MACEE,UAAU,WACVD,QAASA,IAAM8gB,EAAiB,UAAUzgB,SAAA,CAEzCsE,EAAE,4BACS,WAAXwF,IACC7J,EAAAA,EAAAA,KAAA,KAAGL,UAAS,eAAAC,OAA+B,QAAdmK,EAAsB,KAAO,OAAM,eAGpEtK,EAAAA,EAAAA,MAAA,MACEE,UAAU,WACVD,QAASA,IAAM8gB,EAAiB,aAAazgB,SAAA,CAE5CsE,EAAE,0BACS,cAAXwF,IACC7J,EAAAA,EAAAA,KAAA,KAAGL,UAAS,eAAAC,OAA+B,QAAdmK,EAAsB,KAAO,OAAM,eAGpE/J,EAAAA,EAAAA,KAAA,MAAAD,SAAKsE,EAAE,oCACPrE,EAAAA,EAAAA,KAAA,MAAAD,SAAKsE,EAAE,uCAGXrE,EAAAA,EAAAA,KAAA,SAAAD,SACGkf,EAAKvX,KAAKkF,IACT,MAAMyV,EAlQAzV,KACtB,MAAM7J,EAAY,IAAIC,KAAK4J,EAAI7J,WAAWuf,iBACpCjD,EAAWzS,EAAIyS,UAAY,SAC3BC,EAAS1S,EAAI0S,QAAU,UACvBnf,EAAOyM,EAAImU,WAAanU,EAAIpK,YAAc,SAC1C+f,EAAU3V,EAAI2V,QAAU5P,KAAKC,UAAUhG,EAAI2V,QAAS,KAAM,GAAK,GAErE,OAAAlf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKuJ,GAAG,IACN4V,mBAAoBzf,EACpB0f,kBAAmBpD,EACnBqD,gBAAiBpD,EACjBqD,cAAexiB,EACfyiB,iBAAkBL,KAqPiBM,CAAejW,GACpC,OACEnN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAC1BsiB,EAAaG,wBAGlBxiB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAML,UAAS,SAAAC,OAAWghB,EAAsBhU,EAAIyS,WAAYtf,SAC7DsE,EAAE,gCAADzE,QAAkCgN,EAAIyS,UAAY,UAAUjU,qBAGlEpL,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAML,UAAU,QAAOI,SAAE6M,EAAI0S,YAE/Btf,EAAAA,EAAAA,KAAA,MAAAD,UACEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,4BAA2BI,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iBAAgBI,UAC7BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qBAAoBI,UAC/BsiB,EAAaM,cAAc,IAAM,KAAKG,mBAG5C9iB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,SAAEsiB,EAAaM,wBAIrDljB,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBI,SAAA,CAC7B6M,EAAIwD,aAAexD,EAAI0S,OACvB1S,EAAI2V,UACHviB,EAAAA,EAAAA,KAAA,UACEL,UAAU,+BACVgG,KAAK,SACL,iBAAe,WACf,6BAAA/F,OAA4BgN,EAAIrK,IAChC,gBAAc,QAAOxC,UAErBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,2BAIlBiN,EAAI2V,UACHviB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAgB4C,GAAE,WAAA3C,OAAagN,EAAIrK,IAAKxC,UACrDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uBAAsBI,UACnCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,OAAMI,SAAEsiB,EAAaO,2BAK5C5iB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,4BAA2BI,SACzC6M,EAAImW,YAAc,YAnDhBnW,EAAIrK,kBAiE5Bmd,EAAWI,WAAa,IACvBrgB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yDAAwDI,SAAA,EACrEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,aAAYI,SAC1BsE,EAAE,mCAAoC,CACrCiU,OAAQoH,EAAWE,KAAO,GAAKF,EAAWG,MAAQ,EAClDtH,IAAKxJ,KAAK0F,IAAIiL,EAAWE,KAAOF,EAAWG,MAAOH,EAAW/U,OAC7DA,MAAO+U,EAAW/U,aAIxB3K,EAAAA,EAAAA,KAAA,OAAAD,UACEN,EAAAA,EAAAA,MAAA,MAAIE,UAAU,gCAA+BI,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIL,UAAS,aAAAC,OAAmC,IAApB8f,EAAWE,KAAa,WAAa,IAAK7f,UACpEC,EAAAA,EAAAA,KAAA,UACEL,UAAU,YACVD,QAASA,IAAMghB,EAAiBhB,EAAWE,KAAO,GAClDha,SAA8B,IAApB8Z,EAAWE,KAAW7f,UAEhCC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,2BAGhBmb,MAAMkI,KAAK,CAAElhB,OAAQiN,KAAK0F,IAAI,EAAGiL,EAAWI,cAAe,CAACpL,EAAG1D,KAC9D,MAAM4O,EAAO7Q,KAAKkU,IAAI,EAAGlU,KAAK0F,IAAIiL,EAAWI,WAAa,EAAGJ,EAAWE,KAAO,IAAM5O,EACrF,OACEhR,EAAAA,EAAAA,KAAA,MAAeL,UAAS,aAAAC,OAAe8f,EAAWE,OAASA,EAAO,SAAW,IAAK7f,UAChFC,EAAAA,EAAAA,KAAA,UACEL,UAAU,YACVD,QAASA,IAAMghB,EAAiBd,GAAM7f,SAErC6f,KALIA,OAUb5f,EAAAA,EAAAA,KAAA,MAAIL,UAAS,aAAAC,OAAe8f,EAAWE,OAASF,EAAWI,WAAa,WAAa,IAAK/f,UACxFC,EAAAA,EAAAA,KAAA,UACEL,UAAU,YACVD,QAASA,IAAMghB,EAAiBhB,EAAWE,KAAO,GAClDha,SAAU8Z,EAAWE,OAASF,EAAWI,WAAW/f,UAEpDC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,oCASxB8J,IACCzJ,EAAAA,EAAAA,KAACsN,EAAK,CACJ3H,KAAM8D,EAAM9D,KACZiC,QAAS6B,EAAM7B,QACf1D,MAAM,EACN4D,QAASA,IAAM4B,EAAS,YCplB5BwZ,EAAqB7d,IAEzB,MAGM8d,EAHU9d,EAAM+d,QAAQ,MAAO,IAGbC,UAAU,EAAG,IAGrC,OAAIF,EAAQrhB,QAAU,EACbqhB,EACEA,EAAQrhB,QAAU,EACrB,IAANlC,OAAWujB,EAAQE,UAAU,EAAG,GAAE,MAAAzjB,OAAKujB,EAAQE,UAAU,IAEnD,IAANzjB,OAAWujB,EAAQE,UAAU,EAAG,GAAE,MAAAzjB,OAAKujB,EAAQE,UAAU,EAAG,GAAE,KAAAzjB,OAAIujB,EAAQE,UAAU,KAmjBxF,EA3iByBpf,IAAqC,IAApC,OAAEmJ,EAAM,QAAEtF,EAAO,UAAE1D,GAAWH,EACtD,MAAM,EAAEI,IAAM/E,EAAAA,EAAAA,OACR,KAAEa,IAASE,EAAAA,EAAAA,OAEVijB,EAAWC,IAAgB7e,EAAAA,EAAAA,UAAS,UACpC8e,EAAWC,IAAgB/e,EAAAA,EAAAA,WAAS,IACpCwC,EAAOmO,IAAY3Q,EAAAA,EAAAA,UAAS,OAC5BmC,EAAS6c,IAAchf,EAAAA,EAAAA,UAAS,OAGhCif,EAAYC,IAAiBlf,EAAAA,EAAAA,UAAS,CAC3Cmf,SAAU,GACVphB,MAAO,GACPyH,MAAO,GACP4Z,SAAU,GACVC,gBAAiB,MAGZC,EAAWC,IAAgBvf,EAAAA,EAAAA,UAAS,CACzCwf,SAAU,GACVzhB,MAAO,MAGF0hB,EAASC,IAAc1f,EAAAA,EAAAA,UAAS,CACrCwf,SAAU,GACVha,MAAO,MAITjC,EAAAA,EAAAA,YAAU,KACRoN,EAAS,MACTqO,EAAW,QACV,CAACJ,KAGJrb,EAAAA,EAAAA,YAAU,KACHmF,IACHmW,EAAa,SACbE,GAAa,GACbpO,EAAS,MACTqO,EAAW,MACXE,EAAc,CAAEC,SAAU,GAAIphB,MAAO,GAAIyH,MAAO,GAAI4Z,SAAU,GAAIC,gBAAiB,KACnFE,EAAa,CAAEC,SAAU,GAAIzhB,MAAO,KACpC2hB,EAAW,CAAEF,SAAU,GAAIha,MAAO,QAEnC,CAACkD,IASJ,IAAKA,EAAQ,OAAO,KAkPpB,OACEpN,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iFAAgFI,UAC7FN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8EAA6EI,SAAA,EAE1FN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iEAAgEI,SAAA,EAC7EC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,2CAA0CI,SACrDsE,EAAE,8CAELrE,EAAAA,EAAAA,KAAA,UACEN,QAASoI,EACTnI,UAAU,sDAAqDI,UAE/DC,EAAAA,EAAAA,KAACwI,EAAAA,EAAS,CAAC7I,UAAU,kBAKzBK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2BAA0BI,UACvCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sBAAqBI,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UACEN,QAASA,IAAM6jB,EAAa,UAC5B5jB,UAAS,8DAAAC,OACO,WAAd0jB,EACI,gCACA,8EACHvjB,SAEFsE,EAAE,kDAELrE,EAAAA,EAAAA,KAAA,UACEN,QAASA,IAAM6jB,EAAa,SAC5B5jB,UAAS,8DAAAC,OACO,UAAd0jB,EACI,gCACA,8EACHvjB,SAEFsE,EAAE,iDAELrE,EAAAA,EAAAA,KAAA,UACEN,QAASA,IAAM6jB,EAAa,OAC5B5jB,UAAS,8DAAAC,OACO,QAAd0jB,EACI,gCACA,8EACHvjB,SAEFsE,EAAE,oDAMT5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,MAAKI,SAAA,CAEjB8G,IACC7G,EAAAA,EAAAA,KAAA,OAAKL,UAAU,0DAAyDI,UACtEC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,iBAAgBI,SAAE8G,MAKlCK,IACClH,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sDAAqDI,UAClEC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,eAAcI,SAAEmH,MAKlB,WAAdoc,IACC7jB,EAAAA,EAAAA,MAAA,QAAMoG,SAzSWnE,UAMzB,GALAyD,EAAEW,iBACF2d,GAAa,GACbpO,EAAS,MAGLsO,EAAWG,WAAaH,EAAWI,gBAGrC,OAFA1O,EAAShR,EAAE,4DACXof,GAAa,GAIf,GAAIE,EAAWG,SAAShiB,OAAS,EAG/B,OAFAuT,EAAShR,EAAE,kEACXof,GAAa,GAIf,IAEE,MAAMrR,QAAiBgI,EAAAA,EAAAA,IAAmB,wCAAyC,CACjF9H,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBG,KAAMC,KAAKC,UAAU,CACnBnQ,MAAOkhB,EAAWlhB,MAClB2C,KAAMue,EAAWE,SACjBrd,SAAU,QACV6d,mBAAoBV,EAAWG,aAInC,IAAK1R,EAASS,GAAI,CAEhB,IAAIC,EACJ,IACEA,QAAkBV,EAASW,MAC7B,CAAE,MAAOuR,GAEP,IACExR,EAAY,CAAEI,aAAcd,EAASsI,OACvC,CAAE,MAAO6J,GACPzR,EAAY,CAAEI,OAAO,QAADtT,OAAUwS,EAAShB,OAAM,MAAAxR,OAAKwS,EAASiI,YAC7D,CACF,CAGA,MAAMnT,EAAQ,IAAI+L,MAAMH,EAAUI,QAAU7O,EAAE,kDAG9C,MAFA6C,EAAMkL,SAAWA,EACjBlL,EAAMsd,aAAe1R,EACf5L,CACR,CAEA,MAAMb,QAAe+L,EAASW,OAC9B2Q,EAAWrf,EAAE,kDAAmD,CAAEe,KAAMue,EAAWE,YAG/Ezf,GACFA,EAAUiC,GAIZ8B,YAAW,KACTL,MACC,IAEL,CAAE,MAAO4N,GACPrO,QAAQH,MAAM,+BAAgCwO,GAG9C,IAAImF,EAAexW,EAAE,iDACjBogB,EAAe,GAEnB,IACM/O,EAAItD,UAENqS,EAAahT,KAAK,WAAD7R,OAAY8V,EAAItD,SAAShB,SAC1CqT,EAAahT,KAAK,gBAAD7R,OAAiB8V,EAAItD,SAASiI,aAC/CoK,EAAahT,KAAK,QAAD7R,OAAS8V,EAAItD,SAASzP,KAAO,0CAE1C+S,EAAI8O,eAC0B,kBAArB9O,EAAI8O,aACbC,EAAahT,KAAK,aAAD7R,OAAc8V,EAAI8O,eAC1B9O,EAAI8O,aAAatR,QAC1B2H,EAAenF,EAAI8O,aAAatR,OAChCuR,EAAahT,KAAK,WAAD7R,OAAY8V,EAAI8O,aAAatR,UAE9CuR,EAAahT,KAAK,aAAD7R,OAAc+S,KAAKC,UAAU8C,EAAI8O,kBAG7C9O,EAAI9N,UAEbiT,EAAenF,EAAI9N,QACnB6c,EAAahT,KAAK,UAAD7R,OAAW8V,EAAI9N,UAGpC,CAAE,MAAO8c,GACPD,EAAahT,KAAK,2BAAD7R,OAA4B8kB,EAAc9c,SAC7D,CAGAP,QAAQH,MAAM,+BAAgC,CAC5Cyd,cAAejP,EACfmF,eACA4J,eACA1hB,WAAW,IAAIC,MAAOC,cACtBN,IAAK,wCACL2P,OAAQ,OACRsS,YAAa,CACXniB,MAAOkhB,EAAWlhB,MAClB2C,KAAMue,EAAWE,SACjBrd,SAAU,QACV6d,mBAAoBV,EAAWG,aAKbe,GACDJ,EAAa3iB,OAAS,EACzCuT,EAAS,GAADzV,OAAIib,EAAY,qBAAAjb,OAAoB6kB,EAAa9U,KAAK,QAE9D0F,EAASwF,EAEb,CAAC,QACC4I,GAAa,EACf,GA2K4C9jB,UAAU,YAAWI,SAAA,EACvDN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,+CAA8CI,SAC5DsE,EAAE,yDAELrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACL4V,UAAQ,EACRlW,MAAOse,EAAWE,SAClBtc,SAAWpC,GAAMye,GAAavgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGsgB,GAAU,IAAEE,SAAU1e,EAAEG,OAAOD,SAClE1F,UAAU,yGACV6H,YAAanD,EAAE,yDAInB5E,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,+CAA8CI,SAC5DsE,EAAE,6DAELrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,QACL4V,UAAQ,EACRlW,MAAOse,EAAWlhB,MAClB8E,SAAWpC,GAAMye,GAAavgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGsgB,GAAU,IAAElhB,MAAO0C,EAAEG,OAAOD,SAC/D1F,UAAU,yGACV6H,YAAanD,EAAE,sDAInB5E,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,+CAA8CI,SAC5DsE,EAAE,oDAELrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,MACLN,MAAO6d,EAAkBS,EAAWzZ,OACpC3C,SAzViBpC,IAC/B,MAAM2f,EAAW3f,EAAEG,OAAOD,MAAM+d,QAAQ,MAAO,IAC/CQ,GAAavgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGsgB,GAAU,IAAEzZ,MAAO4a,MAwVvBnlB,UAAU,yGACV6H,YAAanD,EAAE,sDAInB5E,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEN,EAAAA,EAAAA,MAAA,SAAOE,UAAU,+CAA8CI,SAAA,CAC5DsE,EAAE,sDAAsD,KAACrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,4BAA2BI,SAAEsE,EAAE,6DAE3GrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,WACL4V,UAAQ,EACRlW,MAAOse,EAAWG,SAClBvc,SAAWpC,GAAMye,GAAavgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGsgB,GAAU,IAAEG,SAAU3e,EAAEG,OAAOD,SAClE1F,UAAU,yGACV6H,YAAanD,EAAE,yDAInB5E,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,+CAA8CI,SAC5DsE,EAAE,gEAELrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,WACL4V,UAAQ,EACRlW,MAAOse,EAAWI,gBAClBxc,SAAWpC,GAAMye,GAAavgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGsgB,GAAU,IAAEI,gBAAiB5e,EAAEG,OAAOD,SACzE1F,UAAU,yGACV6H,YAAanD,EAAE,sEAInBrE,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLC,SAAU4d,EACV7jB,UAAU,6LAA4LI,SAEzLsE,EAAZmf,EAAc,6CAAkD,2DAMxD,UAAdF,IACC7jB,EAAAA,EAAAA,MAAA,QAAMoG,SA1PUnE,UACxByD,EAAEW,iBACF2d,GAAa,GACbpO,EAAS,MAET,IACE,MAAMjD,QAAiBgI,EAAAA,EAAAA,IAAmB,2BAA4B,CACpE9H,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBG,KAAMC,KAAKC,UAAU,CACnBmS,UAAWf,EAAUE,SACrBzhB,MAAOuhB,EAAUvhB,UAIrB,IAAI2P,EAASS,GAoBN,CACL,MAAMC,QAAkBV,EAASW,OACjC,MAAM,IAAIE,MAAMH,EAAUI,QAAU,kCACtC,OAtBqBd,EAASW,aAGtBjM,EAAAA,EAAAA,IACJ3E,EAAAA,GAAc4E,mBACdid,EAAUvhB,MACV,CACEsiB,UAAWf,EAAUE,SACrBc,kBAAmB,UAIvBtB,EAAWrf,EAAE,gDACb4f,EAAa,CAAEC,SAAU,GAAIzhB,MAAO,KAGpC0F,YAAW,KACTL,MACC,IAKP,CAAE,MAAO4N,GACPrO,QAAQH,MAAM,0BAA2BwO,GACzCL,EAASK,EAAI9N,QACf,CAAC,QACC6b,GAAa,EACf,GA4M2C9jB,UAAU,YAAWI,SAAA,EACtDN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,+CAA8CI,SAC5DsE,EAAE,+DAELrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACL4V,UAAQ,EACRlW,MAAO2e,EAAUE,SACjB3c,SAAWpC,GAAM8e,GAAY5gB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG2gB,GAAS,IAAEE,SAAU/e,EAAEG,OAAOD,SAChE1F,UAAU,yGACV6H,YAAanD,EAAE,+DAInB5E,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,+CAA8CI,SAC5DsE,EAAE,6DAELrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,QACL4V,UAAQ,EACRlW,MAAO2e,EAAUvhB,MACjB8E,SAAWpC,GAAM8e,GAAY5gB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG2gB,GAAS,IAAEvhB,MAAO0C,EAAEG,OAAOD,SAC7D1F,UAAU,yGACV6H,YAAanD,EAAE,sDAInBrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mDAAkDI,UAC/DC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SACjCsE,EAAE,0DAIPrE,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLC,SAAU4d,EACV7jB,UAAU,6LAA4LI,SAEzLsE,EAAZmf,EAAc,4CAAiD,8DAMvD,QAAdF,IACC7jB,EAAAA,EAAAA,MAAA,QAAMoG,SAxPQnE,UACtByD,EAAEW,iBACF2d,GAAa,GACbpO,EAAS,MAET,IACE,MAAMjD,QAAiBgI,EAAAA,EAAAA,IAAmB,yBAA0B,CAClE9H,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBG,KAAMC,KAAKC,UAAU,CACnBmS,UAAWZ,EAAQD,SACnBha,MAAOia,EAAQja,UAInB,IAAIkI,EAASS,GAoBN,CACL,MAAMC,QAAkBV,EAASW,OACjC,MAAM,IAAIE,MAAMH,EAAUI,QAAU,gCACtC,OAtBqBd,EAASW,aAGtBjM,EAAAA,EAAAA,IACJ3E,EAAAA,GAAc4E,mBACdod,EAAQja,MACR,CACE6a,UAAWZ,EAAQD,SACnBc,kBAAmB,QAIvBtB,EAAWrf,EAAE,8CACb+f,EAAW,CAAEF,SAAU,GAAIha,MAAO,KAGlC/B,YAAW,KACTL,MACC,IAKP,CAAE,MAAO4N,GACPrO,QAAQH,MAAM,wBAAyBwO,GACvCL,EAASK,EAAI9N,QACf,CAAC,QACC6b,GAAa,EACf,GA0MyC9jB,UAAU,YAAWI,SAAA,EACpDN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,+CAA8CI,SAC5DsE,EAAE,+DAELrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACL4V,UAAQ,EACRlW,MAAO8e,EAAQD,SACf3c,SAAWpC,GAAMif,GAAU/gB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG8gB,GAAO,IAAED,SAAU/e,EAAEG,OAAOD,SAC5D1F,UAAU,yGACV6H,YAAanD,EAAE,+DAInB5E,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOL,UAAU,+CAA8CI,SAC5DsE,EAAE,4DAELrE,EAAAA,EAAAA,KAAA,SACE2F,KAAK,MACL4V,UAAQ,EACRlW,MAAO6d,EAAkBiB,EAAQja,OACjC3C,SAvccpC,IAC5B,MAAM2f,EAAW3f,EAAEG,OAAOD,MAAM+d,QAAQ,MAAO,IAC/CgB,GAAU/gB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG8gB,GAAO,IAAEja,MAAO4a,MAscjBnlB,UAAU,yGACV6H,YAAanD,EAAE,sDAInBrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uDAAsDI,UACnEC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,0BAAyBI,SACnCsE,EAAE,wDAIPrE,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACLC,UAAU,EACVjG,UAAU,wEAAuEI,SAEhFsE,EAAE,kEAOXrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,0DAAyDI,UACtEC,EAAAA,EAAAA,KAAA,UACEN,QAASoI,EACTnI,UAAU,uHAAsHI,SAE/HsE,EAAE,sD,8DCviBf,MAqQM4gB,GAAchhB,IAA0E,IAAzE,MAAEoG,EAAK,aAAEkZ,EAAY,mBAAE/Z,EAAkB,uBAAE0L,GAAwBjR,EACtF,MAAM,EAAEI,IAAM/E,EAAAA,EAAAA,OACR,KAAEa,IAASE,EAAAA,EAAAA,MAINgE,EAAE,4BACG,OAALgG,QAAK,IAALA,GAAAA,EAAO6a,iBACR5Y,EAAAA,EAEOjI,EAAE,6BAGRA,EAAE,0BACG,OAALgG,QAAK,IAALA,GAAAA,EAAOwR,eACRsJ,EAAAA,EAEO9gB,EAAE,qBAGRA,EAAE,yBACG,OAALgG,QAAK,IAALA,GAAAA,EAAO+a,cACR/G,EAAAA,EAEOha,EAAE,qBAInB,OACE5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWI,SAAA,EAExBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uDAAsDI,SAAA,EACnEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oDAAmDI,UAChEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACsM,EAAAA,EAAS,CAAC3M,UAAU,6BAEvBK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6CAA4CI,SACvDsE,EAAE,+BAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAC3CsK,EAAM6a,8BAOjBllB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oDAAmDI,UAChEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACqe,EAAAA,EAAyB,CAAC1e,UAAU,8BAEvCK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6CAA4CI,SACvDsE,EAAE,4BAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAC3CsK,EAAMgb,2BAOjBrlB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oDAAmDI,UAChEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAAC+U,EAAAA,EAAgB,CAACpV,UAAU,+BAE9BK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6CAA4CI,SACvDsE,EAAE,8BAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAC3CsK,EAAMib,6BAOjBtlB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oDAAmDI,UAChEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACulB,EAAAA,EAAkB,CAAC5lB,UAAU,+BAEhCK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kBAAiBI,UAC9BN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,6CAA4CI,SACvDsE,EAAE,4BAELrE,EAAAA,EAAAA,KAAA,MAAIL,UAAU,iCAAgCI,SAAC,yBAUzDC,EAAAA,EAAAA,KAACwlB,GAAmB,CAACjC,aAAcA,EAAc/Z,mBAAoBA,EAAoB0L,uBAAwBA,QAMjHsQ,GAAsBtR,IAAmE,IAAlE,aAAEqP,EAAY,mBAAE/Z,EAAkB,uBAAE0L,GAAwBhB,EACvF,MAAM,EAAE7P,IAAM/E,EAAAA,EAAAA,MAEd,OACEG,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oDAAmDI,SAAA,EAChEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,wCAAuCI,SAAEsE,EAAE,2BACzD5E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uDAAsDI,SAAA,EACnEN,EAAAA,EAAAA,MAAA,UACEE,UAAU,gGACVD,QAASA,IAAM8J,GAAmB,GAAMzJ,SAAA,EAExCC,EAAAA,EAAAA,KAACsM,EAAAA,EAAS,CAAC3M,UAAU,6BACrBK,EAAAA,EAAAA,KAAA,QAAML,UAAU,yBAAwBI,SAAEsE,EAAE,kCAE9C5E,EAAAA,EAAAA,MAAA,UACEE,UAAU,kGACVD,QAASA,KACP6jB,EAAa,aACbrO,GAAuB,IACvBnV,SAAA,EAEFC,EAAAA,EAAAA,KAAC+U,EAAAA,EAAgB,CAACpV,UAAU,6BAC5BK,EAAAA,EAAAA,KAAA,QAAML,UAAU,yBAAwBI,SAAEsE,EAAE,+BAE9C5E,EAAAA,EAAAA,MAAA,UAAQE,UAAU,gGAA+FI,SAAA,EAC/GC,EAAAA,EAAAA,KAACulB,EAAAA,EAAkB,CAAC5lB,UAAU,6BAC9BK,EAAAA,EAAAA,KAAA,QAAML,UAAU,yBAAwBI,SAAEsE,EAAE,+BAE9C5E,EAAAA,EAAAA,MAAA,UAAQE,UAAU,oGAAmGI,SAAA,EACnHC,EAAAA,EAAAA,KAACqe,EAAAA,EAAyB,CAAC1e,UAAU,6BACrCK,EAAAA,EAAAA,KAAA,QAAML,UAAU,yBAAwBI,SAAEsE,EAAE,2BAE9C5E,EAAAA,EAAAA,MAAA,UACEE,UAAU,oGACVD,QAASA,IAAM6jB,EAAa,cAAcxjB,SAAA,EAE1CC,EAAAA,EAAAA,KAACqe,EAAAA,EAAyB,CAAC1e,UAAU,6BACrCK,EAAAA,EAAAA,KAAA,QAAML,UAAU,yBAAwBI,SAAEsE,EAAE,iCAE9C5E,EAAAA,EAAAA,MAAA,UACEE,UAAU,kJACV8F,MAAO,CACLggB,WAAY,oDACZC,UAAW,8EACX3lB,SAAA,EAGFC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kNAEfK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,wCAAwCgmB,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAW9lB,UAC1GC,EAAAA,EAAAA,KAAA,QAAM8lB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,0IAEvEjmB,EAAAA,EAAAA,KAAA,QAAML,UAAU,uCAAsCI,SAAC,sBAOjE,GAhbyBmmB,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAC7B,MAAM,EAAEjiB,IAAM/E,EAAAA,EAAAA,OACR,iBAAEinB,EAAgB,mBAAEld,IAAuB9E,EAAAA,EAAAA,OAC3C,eAAE9C,GAAmBvB,KACrB,KAAEC,EAAI,OAAEqmB,IAAWnmB,EAAAA,EAAAA,OAClBijB,EAAWC,IAAgB7e,EAAAA,EAAAA,UAAS,aACpC+hB,EAAiBC,IAAsBhiB,EAAAA,EAAAA,WAAS,IAChDuZ,EAAa0I,IAAkBjiB,EAAAA,EAAAA,UAAS,OACxCkiB,EAAaC,IAAkBniB,EAAAA,EAAAA,WAAS,IACxC6E,EAAiBC,IAAsB9E,EAAAA,EAAAA,WAAS,IAChDuQ,EAAqBC,IAA0BxQ,EAAAA,EAAAA,WAAS,GACzDoiB,GAAkBC,EAAAA,EAAAA,UAClBC,GAAaD,EAAAA,EAAAA,WAGnB9e,EAAAA,EAAAA,YAAU,KACYvG,WAClB,MAAM,UAAEM,EAAS,OAAEC,SAAiBR,EAAe,oBAC/CO,EACF0kB,GAAmB,GAEnBC,EAAe1kB,IAInBglB,KACC,CAACxlB,KAGJwG,EAAAA,EAAAA,YAAU,KACR,MAAMif,EAAsBC,IACtBvkB,OAAOwkB,YAAc,KAGvBR,GACAI,EAAWK,UACVL,EAAWK,QAAQC,SAASH,EAAM7hB,SACnCwhB,EAAgBO,UACfP,EAAgBO,QAAQC,SAASH,EAAM7hB,SAExCuhB,GAAe,IAOnB,OAHAtF,SAASgG,iBAAiB,YAAaL,GACvC3F,SAASgG,iBAAiB,aAAcL,GAEjC,KACL3F,SAASiG,oBAAoB,YAAaN,GAC1C3F,SAASiG,oBAAoB,aAAcN,MAE5C,CAACN,IAGJ,MAAMa,EAAkB,CACtB,CACEllB,GAAI,WACJ2J,MAAO7H,EAAE,oBACTqjB,KAAMC,EAAAA,EACNC,WAAW5nB,EAAAA,EAAAA,KAACilB,GAAW,CAAC5a,MAAOhB,IAAsBka,aAAcA,EAAc/Z,mBAAoBA,EAAoB0L,uBAAwBA,KAEnJ,CACE3S,GAAI,YACJ2J,MAAO7H,EAAE,2BACTqjB,KAAM3S,EAAAA,EACN6S,WAAW5nB,EAAAA,EAAAA,KAAC6nB,EAAQ,CAAC5S,oBAAqBA,EAAqBC,uBAAwBA,KAEzF,CACE3S,GAAI,aACJ2J,MAAO7H,EAAE,4BACTqjB,KAAMrJ,EAAAA,EACNuJ,WAAW5nB,EAAAA,EAAAA,KAACkc,EAAU,KAExB,CACE3Z,GAAI,UACJ2J,MAAO7H,EAAE,mBACTqjB,KAAMnC,EAAAA,EACNqC,WAAW5nB,EAAAA,EAAAA,KAACuN,EAAc,KAE5B,CACEhL,GAAI,cACJ2J,MAAO7H,EAAE,uBACTqjB,KAAMpb,EAAAA,EACNsb,WAAW5nB,EAAAA,EAAAA,KAACyI,EAAoB,KAElC,CACElG,GAAI,QACJ2J,MAAO7H,EAAE,eACTqjB,KAAMvC,EAAAA,EACNyC,WAAW5nB,EAAAA,EAAAA,KAAC8e,EAAS,MAKzB,OAAIb,GAEAje,EAAAA,EAAAA,KAAA,OAAKL,UAAU,6DAA4DI,UACzEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,6BAA4BI,SAAC,kBAC5CC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,qCAAoCI,SAAEsE,EAAE,0BACtDrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,SAAEke,KACnCje,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gBAAeI,SAAEsE,EAAE,8BAOnCoiB,GAYHhnB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,4BAA2BI,SAAA,EAExCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,gBAAeI,UAC5BC,EAAAA,EAAAA,KAACb,EAAAA,EAAc,OAGjBM,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EAEnBC,EAAAA,EAAAA,KAAA,UACE8nB,IAAKhB,EACLnnB,UAAU,oGACVD,QAASA,IAAMmnB,GAAgBD,GAAa7mB,UAE5CC,EAAAA,EAAAA,KAAC+nB,EAAAA,EAAS,CAACpoB,UAAU,UAAU,cAAY,YAI7CK,EAAAA,EAAAA,KAAA,OACE8nB,IAAKd,EACLrnB,UAAS,GAAAC,OACPgnB,EAAc,gBAAkB,oBAAmB,4JACsG7mB,UAE3JN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kFAAiFI,SAAA,EAE9FC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kCAAiCI,UAC9CN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,KAACulB,EAAAA,EAAkB,CAAC5lB,UAAU,gCAC9BF,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,mCAAkCI,UACzC,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAMkO,eAAgBhK,EAAE,wBAE3BrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,SAAEsE,EAAE,6BAM9CrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uBAAsBI,UACnCN,EAAAA,EAAAA,MAAA,MAAIE,UAAU,0CAAyCI,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,kBAAiBI,SAC5B0nB,EAAgB/f,KAAK+I,IACpB,MAAMuX,EAAOvX,EAAKiX,KAClB,OACE1nB,EAAAA,EAAAA,KAAA,MAAAD,UACEN,EAAAA,EAAAA,MAAA,UACEC,QAASA,KACP6jB,EAAa9S,EAAKlO,IAClBskB,GAAe,IAEjBlnB,UAAS,GAAAC,OACP0jB,IAAc7S,EAAKlO,GACf,yBACA,mDAAkD,4GACmDxC,SAAA,EAE3GC,EAAAA,EAAAA,KAACgoB,EAAI,CAACroB,UAAU,mBAAmB,cAAY,SAC9C8Q,EAAKvE,UAbDuE,EAAKlO,YAsBtBvC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,UAASI,UACrBN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wCAAuCI,SAAA,EACpDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yCAAwCI,SAAA,EACrDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oEAAmEI,UAChFC,EAAAA,EAAAA,KAAA,QAAML,UAAU,iCAAgCI,UACzC,OAAJI,QAAI,IAAJA,GAAU,QAANgmB,EAAJhmB,EAAMiF,YAAI,IAAA+gB,GAAW,QAAXC,EAAVD,EAAY8B,OAAO,UAAE,IAAA7B,OAAjB,EAAJA,EAAuBtD,gBAAiB,SAG7CrjB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBI,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,0CAAyCI,UAC/C,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,OAAQf,EAAE,qBAEnBrE,EAAAA,EAAAA,KAAA,KAAGL,UAAU,iCAAgCI,SACtC,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAMsC,eAKbhD,EAAAA,EAAAA,MAAA,UACEC,QAAS8mB,EACT7mB,UAAU,2JAA0JI,SAAA,EAEpKC,EAAAA,EAAAA,KAACkoB,EAAAA,EAAyB,CAACvoB,UAAU,mBAAmB,cAAY,SACnE0E,EAAE,kCAUjBrE,EAAAA,EAAAA,KAAA,QAAML,UAAU,qDAAoDI,UAClEC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sCAAqCI,UAClDN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAEhCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMI,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,gCAA+BI,SACS,QADTsmB,EAC1CoB,EAAgBU,MAAK1X,GAAQA,EAAKlO,KAAO+gB,WAAU,IAAA+C,OAAA,EAAnDA,EAAqDna,SAExDzM,EAAAA,EAAAA,MAAA,KAAGE,UAAU,qBAAoBI,SAAA,CAChB,aAAdujB,GAA4Bjf,EAAE,6BAChB,gBAAdif,GAA+Bjf,EAAE,6BACnB,cAAdif,GAA6Bjf,EAAE,8BACjB,eAAdif,GAA8Bjf,EAAE,+BAClB,YAAdif,GAA2Bjf,EAAE,yBACf,UAAdif,GAAyBjf,EAAE,yBAKhCrE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,mCAAkCI,SACK,QADLumB,EAC9CmB,EAAgBU,MAAK1X,GAAQA,EAAKlO,KAAO+gB,WAAU,IAAAgD,OAAA,EAAnDA,EAAqDsB,uBAQhE5nB,EAAAA,EAAAA,KAACooB,EAAgB,CACfhb,OAAQ7D,EACRzB,QAASA,IAAM0B,GAAmB,GAClCpF,UAAYiC,IACVgB,QAAQuF,IAAI,oCAAqCvG,UA9IrDrG,EAAAA,EAAAA,KAAA,OAAKL,UAAU,6DAA4DI,UACzEN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaI,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iFACfK,EAAAA,EAAAA,KAAA,KAAGL,UAAU,gBAAeI,SAAEsE,EAAE,yB","sources":["components/LanguageToggle.js","hooks/useManagerAccess.js","components/manager/InviteTechnicianModal.js","components/ui/Toast.js","components/manager/TechnicianManagement.js","components/manager/CompanyProfile.js","components/manager/CreateInvoiceModal.js","components/manager/Invoices.js","utils/invoiceValidation.js","components/manager/CreateJobTicketModal.js","components/manager/EditJobTicketModal.js","components/manager/JobTickets.js","components/manager/AuditLogs.js","components/manager/InviteTechnician.js","components/manager/ManagerDashboard.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\n\r\n/**\r\n * Language Toggle component\r\n * Provides a button to switch between English and Spanish\r\n */\r\nconst LanguageToggle = () => {\r\n  const { language, toggleLanguage } = useLanguage();\r\n  \r\n  // Determine which language to show in the toggle button (opposite of current)\r\n  const targetLanguage = language === 'en' ? 'Español' : 'English';\r\n  const instructionText = language === 'es' ? 'click for' : 'haga clic para';\r\n  \r\n  return (\r\n    <button\r\n      onClick={toggleLanguage}\r\n      className=\"absolute top-0 right-0 m-4 px-3 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md transition-colors flex items-center focus:outline-none focus:ring-2 focus:ring-orange-700\"\r\n      aria-label={`${instructionText} ${targetLanguage}`}\r\n      title={`${instructionText} ${targetLanguage}`}\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"text-xs italic text-white mr-1\">{instructionText}</span>\r\n      <span>{targetLanguage}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(LanguageToggle);\r\n","import { useCallback, useMemo } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { auditSecurityEvent, AUDIT_ACTIONS } from '../utils/audit';\n\n/**\n * Custom hook for role-based access control in manager features\n * Provides utilities for checking permissions and logging unauthorized access attempts\n */\nexport const useManagerAccess = () => {\n  const { user, isAuthenticated } = useAuth();\n\n  // Check if user has manager role\n  const isManager = useMemo(() => {\n    return isAuthenticated && user && (user.role === 'manager' || user.role === 'admin');\n  }, [isAuthenticated, user]);\n\n  // Check if user has admin role\n  const isAdmin = useMemo(() => {\n    return isAuthenticated && user && user.role === 'admin';\n  }, [isAuthenticated, user]);\n\n  // Check if user has technician role\n  const isTechnician = useMemo(() => {\n    return isAuthenticated && user && user.role === 'tech';\n  }, [isAuthenticated, user]);\n\n  // Get user's company ID for multi-tenancy\n  const companyId = useMemo(() => {\n    return user?.company_id || null;\n  }, [user]);\n\n  // Check if user can access manager features\n  const canAccessManagerFeatures = useCallback(() => {\n    if (!isAuthenticated || !user) {\n      return false;\n    }\n    return user.role === 'manager' || user.role === 'admin';\n  }, [isAuthenticated, user]);\n\n  // Check if user can manage technicians\n  const canManageTechnicians = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can edit company profile\n  const canEditCompanyProfile = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can view audit logs\n  const canViewAuditLogs = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can export data\n  const canExportData = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can invite technicians\n  const canInviteTechnicians = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can deactivate/remove technicians\n  const canDeactivateTechnicians = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can perform batch operations\n  const canPerformBatchOperations = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user can upload company logo\n  const canUploadCompanyLogo = useCallback(() => {\n    return canAccessManagerFeatures();\n  }, [canAccessManagerFeatures]);\n\n  // Check if user belongs to the same company (for multi-tenancy)\n  const belongsToSameCompany = useCallback((targetCompanyId) => {\n    if (!companyId || !targetCompanyId) {\n      return false;\n    }\n    return companyId === targetCompanyId;\n  }, [companyId]);\n\n  // Validate access and log unauthorized attempts\n  const validateAccess = useCallback(async (requiredPermission, context = {}) => {\n    let hasAccess = false;\n    let reason = '';\n\n    // Check authentication\n    if (!isAuthenticated) {\n      reason = 'User not authenticated';\n    } else if (!user) {\n      reason = 'User data not available';\n    } else {\n      // Check specific permissions\n      switch (requiredPermission) {\n        case 'manager_features':\n          hasAccess = canAccessManagerFeatures();\n          reason = hasAccess ? '' : 'Insufficient role permissions';\n          break;\n        case 'technician_management':\n          hasAccess = canManageTechnicians();\n          reason = hasAccess ? '' : 'Cannot manage technicians';\n          break;\n        case 'company_profile':\n          hasAccess = canEditCompanyProfile();\n          reason = hasAccess ? '' : 'Cannot edit company profile';\n          break;\n        case 'audit_logs':\n          hasAccess = canViewAuditLogs();\n          reason = hasAccess ? '' : 'Cannot view audit logs';\n          break;\n        case 'data_export':\n          hasAccess = canExportData();\n          reason = hasAccess ? '' : 'Cannot export data';\n          break;\n        case 'invite_technicians':\n          hasAccess = canInviteTechnicians();\n          reason = hasAccess ? '' : 'Cannot invite technicians';\n          break;\n        case 'deactivate_technicians':\n          hasAccess = canDeactivateTechnicians();\n          reason = hasAccess ? '' : 'Cannot deactivate technicians';\n          break;\n        case 'batch_operations':\n          hasAccess = canPerformBatchOperations();\n          reason = hasAccess ? '' : 'Cannot perform batch operations';\n          break;\n        case 'upload_logo':\n          hasAccess = canUploadCompanyLogo();\n          reason = hasAccess ? '' : 'Cannot upload company logo';\n          break;\n        default:\n          hasAccess = false;\n          reason = 'Unknown permission type';\n      }\n\n      // Additional company-level check if target company is specified\n      if (hasAccess && context.targetCompanyId) {\n        if (!belongsToSameCompany(context.targetCompanyId)) {\n          hasAccess = false;\n          reason = 'Cross-company access denied';\n        }\n      }\n    }\n\n    // Log unauthorized access attempts\n    if (!hasAccess) {\n      await auditSecurityEvent(AUDIT_ACTIONS.UNAUTHORIZED_ACCESS_ATTEMPT, {\n        permission: requiredPermission,\n        reason,\n        context,\n        user_id: user?.id || null,\n        user_email: user?.email || null,\n        user_role: user?.role || null,\n        company_id: companyId,\n        url: window.location.pathname,\n        timestamp: new Date().toISOString(),\n      });\n    }\n\n    return {\n      hasAccess,\n      reason: hasAccess ? null : reason,\n    };\n  }, [\n    isAuthenticated,\n    user,\n    companyId,\n    canAccessManagerFeatures,\n    canManageTechnicians,\n    canEditCompanyProfile,\n    canViewAuditLogs,\n    canExportData,\n    canInviteTechnicians,\n    canDeactivateTechnicians,\n    canPerformBatchOperations,\n    canUploadCompanyLogo,\n    belongsToSameCompany,\n  ]);\n\n  // Higher-order component for protecting routes\n  const withManagerAccess = useCallback((WrappedComponent, requiredPermission = 'manager_features') => {\n    return function ProtectedComponent(props) {\n      const { hasAccess } = validateAccess(requiredPermission);\n      \n      if (!hasAccess) {\n        return (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            <h4 className=\"alert-heading\">Access Denied</h4>\n            <p>You don&apos;t have permission to access this feature.</p>\n            <hr />\n            <p className=\"mb-0\">Please contact your administrator if you believe this is an error.</p>\n          </div>\n        );\n      }\n      \n      return <WrappedComponent {...props} />;\n    };\n  }, [validateAccess]);\n\n  // Get user permissions summary\n  const getPermissionsSummary = useCallback(() => {\n    return {\n      isAuthenticated,\n      isManager,\n      isAdmin,\n      isTechnician,\n      companyId,\n      permissions: {\n        managerFeatures: canAccessManagerFeatures(),\n        technicianManagement: canManageTechnicians(),\n        companyProfile: canEditCompanyProfile(),\n        auditLogs: canViewAuditLogs(),\n        dataExport: canExportData(),\n        inviteTechnicians: canInviteTechnicians(),\n        deactivateTechnicians: canDeactivateTechnicians(),\n        batchOperations: canPerformBatchOperations(),\n        uploadLogo: canUploadCompanyLogo(),\n      },\n    };\n  }, [\n    isAuthenticated,\n    isManager,\n    isAdmin,\n    isTechnician,\n    companyId,\n    canAccessManagerFeatures,\n    canManageTechnicians,\n    canEditCompanyProfile,\n    canViewAuditLogs,\n    canExportData,\n    canInviteTechnicians,\n    canDeactivateTechnicians,\n    canPerformBatchOperations,\n    canUploadCompanyLogo,\n  ]);\n\n  return {\n    // User role checks\n    isManager,\n    isAdmin,\n    isTechnician,\n    isAuthenticated,\n    user,\n    companyId,\n\n    // Permission checks\n    canAccessManagerFeatures,\n    canManageTechnicians,\n    canEditCompanyProfile,\n    canViewAuditLogs,\n    canExportData,\n    canInviteTechnicians,\n    canDeactivateTechnicians,\n    canPerformBatchOperations,\n    canUploadCompanyLogo,\n    belongsToSameCompany,\n\n    // Utilities\n    validateAccess,\n    withManagerAccess,\n    getPermissionsSummary,\n  };\n};\n\nexport default useManagerAccess;\n","import React, { useState } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { auditTechnicianAction, AUDIT_ACTIONS } from '../../utils/audit';\n\n/**\n * Invite Technician Modal Component\n * Handles technician invitation form\n */\nconst InviteTechnicianModal = ({ show, onHide, onSuccess }) => {\n  const { t } = useLanguage();\n  const { inviteTechnician } = useManager();\n  const { validateAccess } = useManagerAccess();\n  \n  // Form state\n  const [formData, setFormData] = useState({\n    email: '',\n    firstName: '',\n    lastName: '',\n    jobType: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Job types\n  const jobTypes = [\n    'Electrician',\n    'Plumber',\n    'HVAC Technician',\n    'Carpenter',\n    'General Maintenance',\n    'Appliance Repair',\n    'Landscaper',\n    'Painter',\n    'Cleaner',\n    'Other'\n  ];\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error for this field\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n\n  // Validate form\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Email validation\n    if (!formData.email.trim()) {\n      newErrors.email = t('manager.techManagement.inviteForm.errors.emailRequired');\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = t('manager.techManagement.inviteForm.errors.emailInvalid');\n    }\n\n    // First name validation\n    if (!formData.firstName.trim()) {\n      newErrors.firstName = t('manager.techManagement.inviteForm.errors.firstNameRequired');\n    } else if (formData.firstName.trim().length < 2) {\n      newErrors.firstName = t('manager.techManagement.inviteForm.errors.firstNameTooShort');\n    }\n\n    // Last name validation\n    if (!formData.lastName.trim()) {\n      newErrors.lastName = t('manager.techManagement.inviteForm.errors.lastNameRequired');\n    } else if (formData.lastName.trim().length < 2) {\n      newErrors.lastName = t('manager.techManagement.inviteForm.errors.lastNameTooShort');\n    }\n\n    // Job type validation\n    if (!formData.jobType) {\n      newErrors.jobType = t('manager.techManagement.inviteForm.errors.jobTypeRequired');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    // Check access\n    const { hasAccess } = await validateAccess('invitation_management');\n    if (!hasAccess) {\n      setErrors({ submit: t('common.accessDenied') });\n      return;\n    }\n\n    setIsSubmitting(true);\n    setErrors({});\n\n    try {\n      const result = await inviteTechnician({\n        email: formData.email.trim(),\n        first_name: formData.firstName.trim(),\n        last_name: formData.lastName.trim(),\n        job_type: formData.jobType\n      });\n\n      if (result.success) {\n        // Log the invitation\n        await auditTechnicianAction(\n          AUDIT_ACTIONS.TECHNICIAN_INVITED,\n          null,\n          `${formData.firstName} ${formData.lastName}`,\n          {\n            email: formData.email,\n            job_type: formData.jobType,\n            invitation_id: result.invitation?.id\n          }\n        );\n\n        // Reset form\n        setFormData({\n          email: '',\n          firstName: '',\n          lastName: '',\n          jobType: ''\n        });\n\n        // Call success callback\n        onSuccess();\n      } else {\n        // Handle specific error cases\n        if (result.error?.includes('already exists') || result.error?.includes('duplicate')) {\n          setErrors({ email: t('manager.techManagement.inviteForm.errors.emailExists') });\n        } else if (result.error?.includes('invalid email')) {\n          setErrors({ email: t('manager.techManagement.inviteForm.errors.emailInvalid') });\n        } else {\n          setErrors({ submit: result.error || t('common.errorOccurred') });\n        }\n      }\n    } catch (error) {\n      console.error('Error inviting technician:', error);\n      setErrors({ submit: t('common.errorOccurred') });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle modal close\n  const handleClose = () => {\n    if (!isSubmitting) {\n      setFormData({\n        email: '',\n        firstName: '',\n        lastName: '',\n        jobType: ''\n      });\n      setErrors({});\n      onHide();\n    }\n  };\n\n  if (!show) return null;\n\n  return (\n    <div className=\"modal fade show d-block\" tabIndex=\"-1\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">\n              <i className=\"bi bi-person-plus me-2\"></i>\n              {t('manager.techManagement.inviteForm.title')}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={handleClose}\n              disabled={isSubmitting}\n              aria-label={t('common.close')}\n            ></button>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"modal-body\">\n              <p className=\"text-muted mb-4\">\n                {t('manager.techManagement.inviteForm.description')}\n              </p>\n\n              {errors.submit && (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  <i className=\"bi bi-exclamation-triangle me-2\"></i>\n                  {errors.submit}\n                </div>\n              )}\n\n              <div className=\"row g-3\">\n                {/* Email */}\n                <div className=\"col-12\">\n                  <label htmlFor=\"email\" className=\"form-label\">\n                    {t('manager.techManagement.inviteForm.email')} <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"email\"\n                    className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    placeholder={t('manager.techManagement.inviteForm.emailPlaceholder')}\n                    disabled={isSubmitting}\n                    autoComplete=\"email\"\n                  />\n                  {errors.email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.email}\n                    </div>\n                  )}\n                  <div className=\"form-text\">\n                    {t('manager.techManagement.inviteForm.emailHelp')}\n                  </div>\n                </div>\n\n                {/* First Name */}\n                <div className=\"col-md-6\">\n                  <label htmlFor=\"firstName\" className=\"form-label\">\n                    {t('manager.techManagement.inviteForm.firstName')} <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className={`form-control ${errors.firstName ? 'is-invalid' : ''}`}\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleInputChange}\n                    placeholder={t('manager.techManagement.inviteForm.firstNamePlaceholder')}\n                    disabled={isSubmitting}\n                    autoComplete=\"given-name\"\n                  />\n                  {errors.firstName && (\n                    <div className=\"invalid-feedback\">\n                      {errors.firstName}\n                    </div>\n                  )}\n                </div>\n\n                {/* Last Name */}\n                <div className=\"col-md-6\">\n                  <label htmlFor=\"lastName\" className=\"form-label\">\n                    {t('manager.techManagement.inviteForm.lastName')} <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className={`form-control ${errors.lastName ? 'is-invalid' : ''}`}\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleInputChange}\n                    placeholder={t('manager.techManagement.inviteForm.lastNamePlaceholder')}\n                    disabled={isSubmitting}\n                    autoComplete=\"family-name\"\n                  />\n                  {errors.lastName && (\n                    <div className=\"invalid-feedback\">\n                      {errors.lastName}\n                    </div>\n                  )}\n                </div>\n\n                {/* Job Type */}\n                <div className=\"col-12\">\n                  <label htmlFor=\"jobType\" className=\"form-label\">\n                    {t('manager.techManagement.inviteForm.jobType')} <span className=\"text-danger\">*</span>\n                  </label>\n                  <select\n                    className={`form-select ${errors.jobType ? 'is-invalid' : ''}`}\n                    id=\"jobType\"\n                    name=\"jobType\"\n                    value={formData.jobType}\n                    onChange={handleInputChange}\n                    disabled={isSubmitting}\n                  >\n                    <option value=\"\">\n                      {t('manager.techManagement.inviteForm.jobTypePlaceholder')}\n                    </option>\n                    {jobTypes.map(type => (\n                      <option key={type} value={type}>\n                        {type}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.jobType && (\n                    <div className=\"invalid-feedback\">\n                      {errors.jobType}\n                    </div>\n                  )}\n                  <div className=\"form-text\">\n                    {t('manager.techManagement.inviteForm.jobTypeHelp')}\n                  </div>\n                </div>\n              </div>\n\n              {/* Information Box */}\n              <div className=\"alert alert-info mt-4\" role=\"alert\">\n                <i className=\"bi bi-info-circle me-2\"></i>\n                <strong>{t('manager.techManagement.inviteForm.infoTitle')}</strong>\n                <ul className=\"mb-0 mt-2\">\n                  <li>{t('manager.techManagement.inviteForm.info1')}</li>\n                  <li>{t('manager.techManagement.inviteForm.info2')}</li>\n                  <li>{t('manager.techManagement.inviteForm.info3')}</li>\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={handleClose}\n                disabled={isSubmitting}\n              >\n                {t('common.cancel')}\n              </button>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    {t('manager.techManagement.inviteForm.sending')}\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-envelope me-2\"></i>\n                    {t('manager.techManagement.inviteForm.sendInvitation')}\n                  </>\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InviteTechnicianModal;\n","import React, { useState, useEffect } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n/**\n * Toast notification component\n * \n * @param {Object} props\n * @param {string} props.type - Type of toast: 'success', 'error', 'info', 'warning'\n * @param {string} props.message - Message to display\n * @param {number} props.duration - Duration in milliseconds before auto-dismissing\n * @param {boolean} props.show - Whether to show the toast\n * @param {function} props.onClose - Function to call when toast is closed\n */\nexport const Toast = ({ \n  type = 'info', \n  message, \n  duration = 5000, \n  show = true, \n  onClose \n}) => {\n  const [isVisible, setIsVisible] = useState(show);\n  \n  // Auto-dismiss after duration\n  useEffect(() => {\n    setIsVisible(show);\n    \n    if (show && duration) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n        if (onClose) onClose();\n      }, duration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [show, duration, onClose]);\n  \n  // Handle manual close\n  const handleClose = () => {\n    setIsVisible(false);\n    if (onClose) onClose();\n  };\n  \n  if (!isVisible) return null;\n  \n  // Determine styles based on type\n  const styles = {\n    success: 'bg-green-500 bg-opacity-20 border border-green-500 text-green-500',\n    error: 'bg-red-500 bg-opacity-20 border border-red-500 text-red-500',\n    warning: 'bg-yellow-500 bg-opacity-20 border border-yellow-500 text-yellow-500',\n    info: 'bg-blue-500 bg-opacity-20 border border-blue-500 text-blue-500',\n  };\n  \n  return (\n    <div className={`fixed bottom-4 right-4 z-50 px-4 py-3 rounded-md shadow-lg flex items-center justify-between ${styles[type] || styles.info}`}>\n      <div className=\"mr-3\">{message}</div>\n      <button \n        onClick={handleClose}\n        className=\"text-current hover:text-opacity-70\"\n        aria-label=\"Close\"\n      >\n        <XMarkIcon className=\"h-5 w-5\" />\n      </button>\n    </div>\n  );\n};\n\nexport default Toast;\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { auditTechnicianAction, AUDIT_ACTIONS } from '../../utils/audit';\nimport InviteTechnicianModal from './InviteTechnicianModal';\nimport Toast from '../ui/Toast';\nimport { \n  UsersIcon, \n  CheckCircleIcon, \n  ClockIcon,\n  PhoneIcon,\n  EnvelopeIcon,\n  UserPlusIcon\n} from '@heroicons/react/24/outline';\n\n/**\n * Technician Management Component\n * Clean, mobile-friendly layout with stat boxes and technician table\n */\nconst TechnicianManagement = () => {\n  const { t } = useLanguage();\n  const {\n    technicians,\n    loadingTechnicians,\n    technicianError,\n    technicianFilter,\n    setTechnicianFilter,\n    selectedTechnicians,\n    setSelectedTechnicians,\n    fetchTechnicians,\n    updateTechnicianStatus,\n    batchUpdateTechnicians,\n    resendInvitation,\n    getTechnicianStats,\n    invitations\n  } = useManager();\n  \n  const { validateAccess } = useManagerAccess();\n  \n  // Local state\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [toast, setToast] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  // Load technicians on mount\n  useEffect(() => {\n    fetchTechnicians();\n  }, [fetchTechnicians]);\n\n  // Mock data for demonstration if no real data\n  const mockTechnicians = [\n    {\n      id: 1,\n      name: 'John Smith',\n      email: 'john.smith@example.com',\n      phone: '(555) 123-4567',\n      is_active: true\n    },\n    {\n      id: 2,\n      name: 'Maria Garcia',\n      email: 'maria.garcia@example.com',\n      phone: '(555) 234-5678',\n      is_active: true\n    },\n    {\n      id: 3,\n      name: 'David Johnson',\n      email: 'david.johnson@example.com',\n      phone: '(555) 345-6789',\n      is_active: false\n    }\n  ];\n\n  const displayTechnicians = technicians.length > 0 ? technicians : mockTechnicians;\n\n  // Calculate stats with display data\n  const stats = useMemo(() => {\n    if (technicians.length > 0) {\n      // Use real data stats\n      const activeTechnicians = technicians.filter(tech => tech.is_active && !tech.force_password_reset);\n      const pendingInvitations = invitations.length;\n      \n      return {\n        total: technicians.length,\n        active: activeTechnicians.length,\n        pending: pendingInvitations\n      };\n    } else {\n      // Use mock data stats\n      const activeTechnicians = mockTechnicians.filter(tech => tech.is_active);\n      \n      return {\n        total: mockTechnicians.length,\n        active: activeTechnicians.length,\n        pending: 2 // Mock pending invitations\n      };\n    }\n  }, [technicians, invitations]);\n\n  // Filter and sort technicians\n  const filteredAndSortedTechnicians = useCallback(() => {\n    let filtered = displayTechnicians.filter(tech => {\n      const matchesSearch = !searchTerm || \n        tech.first_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        tech.last_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        tech.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        tech.job_type?.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      return matchesSearch;\n    });\n\n    // Sort technicians\n    filtered.sort((a, b) => {\n      let aValue, bValue;\n      \n      switch (sortBy) {\n        case 'name':\n          aValue = `${a.first_name || ''} ${a.last_name || ''}`.trim();\n          bValue = `${b.first_name || ''} ${b.last_name || ''}`.trim();\n          break;\n        case 'email':\n          aValue = a.email || '';\n          bValue = b.email || '';\n          break;\n        case 'status':\n          aValue = getStatusPriority(a);\n          bValue = getStatusPriority(b);\n          break;\n        case 'jobType':\n          aValue = a.job_type || '';\n          bValue = b.job_type || '';\n          break;\n        case 'lastActive':\n          aValue = new Date(a.last_login || 0);\n          bValue = new Date(b.last_login || 0);\n          break;\n        default:\n          aValue = a[sortBy] || '';\n          bValue = b[sortBy] || '';\n      }\n\n      if (sortBy === 'lastActive') {\n        return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;\n      }\n\n      const comparison = aValue.toString().localeCompare(bValue.toString());\n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n    return filtered;\n  }, [displayTechnicians, searchTerm, sortBy, sortOrder]);\n\n  // Get status priority for sorting\n  const getStatusPriority = (technician) => {\n    if (technician.is_active) return 1;\n    if (technician.force_password_reset) return 2;\n    return 3;\n  };\n\n  // Get technician status with proper translation\n  const getTechnicianStatus = (technician) => {\n    if (technician.is_active) {\n      return {\n        key: 'active',\n        label: t('techManagement.statusActive'),\n        color: 'text-green-400'\n      };\n    } else if (technician.force_password_reset) {\n      return {\n        key: 'pending',\n        label: t('techManagement.statusPending'),\n        color: 'text-yellow-400'\n      };\n    } else {\n      return {\n        key: 'deactivated',\n        label: t('techManagement.statusDeactivated'),\n        color: 'text-gray-400'\n      };\n    }\n  };\n\n  // Handle invite technician\n  const handleInviteTechnician = async () => {\n    const { hasAccess } = await validateAccess('invite_technician');\n    if (!hasAccess) {\n      setToast({\n        type: 'error',\n        message: t('common.accessDenied')\n      });\n      return;\n    }\n    setShowInviteModal(true);\n  };\n\n  // Handle invite success\n  const handleInviteSuccess = (newTechnicianData) => {\n    setShowInviteModal(false);\n    \n    // If we received new technician data (from \"Create Your Own\" form)\n    if (newTechnicianData && newTechnicianData.id) {\n      setToast({\n        type: 'success',\n        message: t('manager.techManagement.messages.technicianCreated', { name: newTechnicianData.name })\n      });\n      \n      // Add the new technician to the local state immediately for instant UI update\n      // This provides immediate feedback while the backend data syncs\n      const newTechnician = {\n        id: newTechnicianData.id,\n        name: newTechnicianData.name,\n        email: newTechnicianData.email,\n        phone: newTechnicianData.phone || '',\n        is_active: true,\n        force_password_reset: false,\n        created_at: new Date().toISOString()\n      };\n      \n      // Update technicians list if using real data\n      if (technicians && technicians.length > 0) {\n        // The useManager context will handle adding to the real technicians list\n        fetchTechnicians(); // Refresh from backend to ensure consistency\n      }\n    } else {\n      // For email/SMS invitations\n      setToast({\n        type: 'success',\n        message: t('manager.techManagement.messages.invitationSent')\n      });\n    }\n    \n    fetchTechnicians(); // Always refresh data to ensure consistency\n  };\n\n  // Handle technician action\n  const handleTechnicianAction = async (technician, action) => {\n    const { hasAccess } = await validateAccess('technician_management');\n    if (!hasAccess) {\n      setToast({\n        type: 'error',\n        message: t('common.accessDenied')\n      });\n      return;\n    }\n\n    const technicianName = `${technician.first_name} ${technician.last_name}`;\n    \n    // Show confirmation modal for destructive actions\n    if (['deactivate', 'remove'].includes(action)) {\n      // Show confirmation modal\n      const confirmationModal = {\n        title: t(`manager.techManagement.confirmations.${action}.title`),\n        message: t(`manager.techManagement.confirmations.${action}.message`, { name: technicianName }),\n        confirmText: t(`manager.techManagement.confirmations.${action}.confirm`),\n        cancelText: t(`manager.techManagement.confirmations.${action}.cancel`),\n        variant: action === 'remove' ? 'danger' : 'warning',\n        showWarning: action === 'remove',\n        warningText: action === 'remove' ? t(`manager.techManagement.confirmations.${action}.warning`) : null,\n        onConfirm: () => executeTechnicianAction(technician, action, technicianName),\n        onCancel: () => {}\n      };\n    } else {\n      await executeTechnicianAction(technician, action, technicianName);\n    }\n  };\n\n  // Execute technician action\n  const executeTechnicianAction = async (technician, action, technicianName) => {\n    try {\n      let result;\n      \n      if (action === 'reinvite') {\n        // Find the invitation for this technician\n        const invitation = invitations.find(inv => inv.email === technician.email);\n        if (invitation) {\n          result = await resendInvitation(invitation.id);\n        } else {\n          throw new Error('Invitation not found');\n        }\n      } else {\n        result = await updateTechnicianStatus(technician.id, action);\n      }\n\n      if (result.success) {\n        // Log the action\n        await auditTechnicianAction(\n          AUDIT_ACTIONS[`TECHNICIAN_${action.toUpperCase()}`] || `technician_${action}`,\n          technician.id,\n          technicianName,\n          { action, previous_status: getTechnicianStatus(technician).key }\n        );\n\n        // Show success message\n        const messageKey = action === 'reinvite' ? 'invitationResent' : `technician${action.charAt(0).toUpperCase() + action.slice(1)}d`;\n        setToast(prevState => ({ ...prevState, type: 'success', message: t(`manager.techManagement.messages.${messageKey}`) }));\n      } else {\n        throw new Error(result.error);\n      }\n    } catch (error) {\n      console.error(`Error ${action} technician:`, error);\n      setToast(prevState => ({ ...prevState, type: 'error', message: error.message || t('common.errorOccurred') }));\n    }\n  };\n\n  // Handle batch actions\n  const handleBatchAction = async (action) => {\n    if (selectedTechnicians.length === 0) return;\n\n    const { hasAccess } = await validateAccess('batch_operations');\n    if (!hasAccess) {\n      setToast({\n        type: 'error',\n        message: t('common.accessDenied')\n      });\n      return;\n    }\n\n    // Show confirmation modal\n    const confirmationModal = {\n      title: t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.title`),\n      message: t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.message`, { count: selectedTechnicians.length }),\n      confirmText: t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.confirm`),\n      cancelText: t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.cancel`),\n      variant: action === 'remove' ? 'danger' : 'warning',\n      showWarning: action === 'remove',\n      warningText: action === 'remove' ? t(`manager.techManagement.confirmations.batch${action.charAt(0).toUpperCase() + action.slice(1)}.warning`) : null,\n      onConfirm: () => executeBatchAction(action),\n      onCancel: () => {}\n    };\n  };\n\n  // Execute batch action\n  const executeBatchAction = async (action) => {\n    try {\n      const result = await batchUpdateTechnicians(selectedTechnicians, action);\n      \n      if (result.success || result.successCount > 0) {\n        // Log batch action\n        await auditTechnicianAction(\n          AUDIT_ACTIONS.BATCH_TECHNICIAN_UPDATE,\n          null,\n          'Multiple technicians',\n          {\n            action,\n            technician_ids: selectedTechnicians,\n            success_count: result.successCount,\n            failure_count: result.failureCount\n          }\n        );\n\n        // Show success message\n        const messageKey = `technicians${action.charAt(0).toUpperCase() + action.slice(1)}d`;\n        setToast(prevState => ({ ...prevState, type: result.failureCount > 0 ? 'warning' : 'success', message: t(`manager.techManagement.messages.${messageKey}`, { count: result.successCount }) }));\n\n        // Clear selection\n        setSelectedTechnicians([]);\n      } else {\n        throw new Error('Batch operation failed');\n      }\n    } catch (error) {\n      console.error(`Error batch ${action}:`, error);\n      setToast(prevState => ({ ...prevState, type: 'error', message: t('common.errorOccurred') }));\n    }\n  };\n\n  // Handle select all\n  const handleSelectAll = () => {\n    if (selectedTechnicians.length === filteredAndSortedTechnicians().length) {\n      setSelectedTechnicians([]);\n    } else {\n      setSelectedTechnicians(filteredAndSortedTechnicians().map(tech => tech.id));\n    }\n  };\n\n  // Handle individual selection\n  const handleSelectTechnician = (technicianId) => {\n    setSelectedTechnicians(prev => {\n      if (prev.includes(technicianId)) {\n        return prev.filter(id => id !== technicianId);\n      } else {\n        return [...prev, technicianId];\n      }\n    });\n  };\n\n  const filteredTechnicians = filteredAndSortedTechnicians();\n\n  const handleDeactivateTechnician = async (technicianId) => {\n    try {\n      // TODO: Implement actual deactivate API call\n      console.log('Deactivating technician:', technicianId);\n      \n      // For now, update local state to show deactivated\n      const updatedTechnicians = displayTechnicians.map(tech => \n        tech.id === technicianId ? { ...tech, is_active: false } : tech\n      );\n      \n      // If using real data, this would trigger a refetch\n      if (technicians.length > 0) {\n        // Would call actual API and refetch\n        // await deactivateTechnician(technicianId);\n        // fetchTechnicians();\n      }\n      \n      setToast(prevState => ({ ...prevState, type: 'success', message: t('techManagement.messages.technicianDeactivated') }));\n    } catch (error) {\n      console.error('Error deactivating technician:', error);\n      setToast(prevState => ({ ...prevState, type: 'error', message: 'Error deactivating technician' }));\n    }\n  };\n\n  const handleDeleteTechnician = async (technicianId, technicianName) => {\n    if (window.confirm(t('techManagement.confirmations.delete.message', { name: technicianName }))) {\n      try {\n        // TODO: Implement actual delete API call\n        console.log('Deleting technician:', technicianId);\n        \n        // For now, remove from local state\n        const updatedTechnicians = displayTechnicians.filter(tech => tech.id !== technicianId);\n        \n        // If using real data, this would trigger a refetch\n        if (technicians.length > 0) {\n          // Would call actual API and refetch\n          // await deleteTechnician(technicianId);\n          // fetchTechnicians();\n        }\n        \n        setToast(prevState => ({ ...prevState, type: 'success', message: t('techManagement.messages.technicianDeleted') }));\n      } catch (error) {\n        console.error('Error deleting technician:', error);\n        setToast(prevState => ({ ...prevState, type: 'error', message: 'Error deleting technician' }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 p-4 md:p-6\">\n      {/* Header */}\n      <div className=\"mb-6\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-white mb-2\">\n              {t('manager.techManagement.title')}\n            </h1>\n            <p className=\"text-gray-400\">\n              {t('manager.techManagement.subtitle')}\n            </p>\n          </div>\n          <button\n            onClick={handleInviteTechnician}\n            className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors duration-200 font-medium\"\n          >\n            <UserPlusIcon className=\"h-5 w-5\" />\n            {t('manager.techManagement.inviteTechnician')}\n          </button>\n        </div>\n      </div>\n\n      {/* Technician Management - Top Box Summary */}\n      <div className=\"mb-8\">\n        <h2 className=\"text-lg font-semibold text-white mb-4\">{t('manager.techManagement.statBoxes.title')}</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          {/* Total Technicians */}\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <UsersIcon className=\"h-8 w-8 text-blue-500\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-2xl font-bold text-white\">\n                  {loadingTechnicians ? '...' : stats.total}\n                </p>\n                <p className=\"text-gray-400 text-sm\">\n                  {t('manager.techManagement.statBoxes.totalTechnicians')}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Active Technicians */}\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <CheckCircleIcon className=\"h-8 w-8 text-green-500\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-2xl font-bold text-white\">\n                  {loadingTechnicians ? '...' : stats.active}\n                </p>\n                <p className=\"text-gray-400 text-sm\">\n                  {t('manager.techManagement.statBoxes.activeTechnicians')}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Pending Invitations */}\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <ClockIcon className=\"h-8 w-8 text-yellow-500\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-2xl font-bold text-white\">\n                  {loadingTechnicians ? '...' : stats.pending}\n                </p>\n                <p className=\"text-gray-400 text-sm\">\n                  {t('manager.techManagement.statBoxes.pendingInvitations')}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Technician Team - Table Section */}\n      <div>\n        <h2 className=\"text-lg font-semibold text-white mb-4\">{t('manager.techManagement.table.title')}</h2>\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg shadow-lg overflow-hidden\">\n          {loadingTechnicians ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n              <p className=\"mt-4 text-gray-400\">{t('common.loading')}</p>\n            </div>\n          ) : technicianError ? (\n            <div className=\"p-8 text-center\">\n              <p className=\"text-red-400\">{technicianError}</p>\n            </div>\n          ) : filteredTechnicians.length === 0 ? (\n            <div className=\"p-8 text-center\">\n              <UsersIcon className=\"h-12 w-12 text-gray-600 mx-auto mb-4\" />\n              <p className=\"text-gray-400 mb-2\">{t('manager.techManagement.table.noTechnicians')}</p>\n              <p className=\"text-gray-500 text-sm\">{t('manager.techManagement.table.inviteFirstTechnician')}</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-700\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                      {t('manager.techManagement.table.headers.name')}\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                      {t('manager.techManagement.table.headers.email')}\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider hidden sm:table-cell\">\n                      {t('manager.techManagement.table.headers.phoneNumber')}\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                      {t('manager.techManagement.table.headers.status')}\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                      {t('manager.techManagement.table.headers.actions')}\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-700\">\n                  {filteredTechnicians.map((technician, index) => (\n                    <tr key={technician.id || index} className=\"hover:bg-gray-750 transition-colors duration-150\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-white\">\n                          {technician.name || `${technician.first_name || ''} ${technician.last_name || ''}`.trim()}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center text-sm text-gray-300\">\n                          <EnvelopeIcon className=\"h-4 w-4 mr-2 text-gray-500\" />\n                          {technician.email}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap hidden sm:table-cell\">\n                        <div className=\"flex items-center text-sm text-gray-300\">\n                          <PhoneIcon className=\"h-4 w-4 mr-2 text-gray-500\" />\n                          {technician.phone || 'Not provided'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          {getTechnicianStatus(technician).key === 'active' ? (\n                            <CheckCircleIcon className=\"h-4 w-4 text-green-500 mr-2\" />\n                          ) : getTechnicianStatus(technician).key === 'pending' ? (\n                            <ClockIcon className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                          ) : (\n                            <div className=\"h-4 w-4 mr-2 bg-gray-500 rounded-full\"></div>\n                          )}\n                          <span className={`text-sm font-medium ${getTechnicianStatus(technician).color}`}>\n                            {getTechnicianStatus(technician).label}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          {getTechnicianStatus(technician).key === 'active' ? (\n                            <button\n                              className=\"text-sm text-red-500 hover:text-red-700 transition-colors duration-200\"\n                              onClick={() => handleDeactivateTechnician(technician.id)}\n                            >\n                              {t('manager.techManagement.table.actions.deactivate')}\n                            </button>\n                          ) : (\n                            <button\n                              className=\"text-sm text-red-500 hover:text-red-700 transition-colors duration-200\"\n                              onClick={() => handleDeleteTechnician(technician.id, technician.name)}\n                            >\n                              {t('manager.techManagement.table.actions.delete')}\n                            </button>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Invite Technician Modal */}\n      {showInviteModal && (\n        <InviteTechnicianModal\n          isOpen={showInviteModal}\n          onClose={() => setShowInviteModal(false)}\n          onSuccess={handleInviteSuccess}\n        />\n      )}\n\n      {/* Toast Notifications */}\n      {toast && (\n        <Toast\n          type={toast.type}\n          message={toast.message}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TechnicianManagement;\n","import React, { useState, useEffect } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useAuth } from '../../context/AuthContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport Toast from '../ui/Toast';\nimport './CompanyProfile.css';\n\n/**\n * Company Profile Component\n * Simplified version showing basic company info and settings placeholder\n */\nconst CompanyProfile = () => {\n  const { t } = useLanguage();\n  const { user } = useAuth();\n  const {\n    companyProfile,\n    loadingCompany,\n    companyError,\n    fetchCompanyProfile\n  } = useManager();\n  \n  const { validateAccess } = useManagerAccess();\n  const [toast, setToast] = useState(null);\n  \n  // Load company data on mount\n  useEffect(() => {\n    console.log('CompanyProfile: Component mounted, fetching company profile...');\n    fetchCompanyProfile();\n  }, [fetchCompanyProfile]);\n\n  // Validate access\n  useEffect(() => {\n    if (!validateAccess()) {\n      setToast({\n        type: 'error',\n        message: t('common.insufficientPermissions'),\n        duration: 5000\n      });\n    }\n  }, [validateAccess, t]);\n\n  const showToast = (type, message, duration = 3000) => {\n    setToast({ type, message, duration });\n  };\n\n  if (loadingCompany) {\n    return (\n      <div className=\"company-profile-container\">\n        <div className=\"loading-spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">{t('common.loading')}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (companyError) {\n    return (\n      <div className=\"company-profile-container\">\n        <div className=\"alert alert-danger\" role=\"alert\">\n          <h4 className=\"alert-heading\">{t('common.error')}</h4>\n          <p>{companyError}</p>\n          <button \n            className=\"btn btn-outline-danger\"\n            onClick={fetchCompanyProfile}\n          >\n            {t('common.retry')}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"company-profile-container\">\n      {toast && (\n        <Toast\n          type={toast.type}\n          message={toast.message}\n          duration={toast.duration}\n          onClose={() => setToast(null)}\n        />\n      )}\n\n      {/* Company Profile Section */}\n      <div className=\"card shadow-sm border mb-4\">\n        <div className=\"card-header bg-primary text-white\">\n          <h3 className=\"card-title mb-0\">\n            <i className=\"fas fa-building me-2\"></i>\n            {t('manager.companyProfile.title')}\n          </h3>\n        </div>\n        \n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <strong>{t('manager.companyProfile.companyName')}:</strong>\n                <span className=\"ms-2\">{companyProfile?.name || t('common.notAvailable')}</span>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <strong>{t('manager.companyProfile.managerName')}:</strong>\n                <span className=\"ms-2\">{user?.first_name && user?.last_name ? `${user.first_name} ${user.last_name}` : user?.email || t('common.notAvailable')}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <strong>{t('manager.companyProfile.technicianCount')}:</strong>\n                <span className=\"ms-2\">0</span>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <strong>{t('manager.companyProfile.rateSheet')}:</strong>\n                <div className=\"ms-2 d-inline-block\">\n                  <button className=\"btn btn-outline-primary btn-sm me-2\" disabled>\n                    <i className=\"fas fa-upload me-1\"></i>\n                    {t('manager.companyProfile.uploadRateSheet')}\n                  </button>\n                  <small className=\"text-muted\">{t('manager.companyProfile.rateSheetNote')}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Settings Section */}\n      <div className=\"card shadow-sm border\">\n        <div className=\"card-header bg-secondary text-white\">\n          <h3 className=\"card-title mb-0\">\n            <i className=\"fas fa-cog me-2\"></i>\n            {t('manager.settings.title')}\n          </h3>\n        </div>\n        \n        <div className=\"card-body\">\n          <div className=\"text-center py-4\">\n            <i className=\"fas fa-tools fa-3x text-muted mb-3\"></i>\n            <p className=\"text-muted mb-0\">{t('manager.settings.comingSoon')}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyProfile;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useAuth } from '../../context/AuthContext';\nimport { toast } from 'react-toastify';\nimport Modal from '../ui/Modal';\nimport { \n  DocumentTextIcon,\n  TrashIcon,\n  PlusIcon,\n  CalendarIcon,\n  CurrencyDollarIcon,\n  XMarkIcon,\n  EnvelopeIcon,\n  DocumentIcon,\n  PaperAirplaneIcon\n} from '@heroicons/react/24/outline';\n\n/**\n * Create Invoice Modal Component\n * \n * Supports two modes:\n * 1. Job Ticket Based - Generate invoice from selected job tickets\n * 2. Manual Entry - Create invoice from scratch\n * \n * Features:\n * - Professional invoice layout\n * - Auto-calculated totals and service fees\n * - Editable line items\n * - Multiple trigger points support\n */\nconst CreateInvoiceModal = ({\n  isOpen,\n  onClose,\n  onInvoiceCreated,\n  selectedJobTickets = [],\n  mode = 'manual' // 'jobTickets' or 'manual'\n}) => {\n  const { t } = useLanguage();\n  const { user } = useAuth();\n  \n  // State management\n  const [loading, setLoading] = useState(false);\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_number: '',\n    invoice_date: new Date().toISOString().split('T')[0],\n    company_name: '', // Customer's company name (who receives the invoice)\n    customer_name: '', // Individual contact name at customer company\n    line_items: [],\n    notes: ''\n  });\n  \n  // Generate unique invoice number (YY + 6-digit sequence)\n  const generateInvoiceNumber = () => {\n    const year = new Date().getFullYear().toString().slice(-2);\n    const sequence = Math.floor(Math.random() * 1000000).toString().padStart(6, '0');\n    return `${year}${sequence}`;\n  };\n  \n  // Initialize invoice data only when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      // Generate invoice number only once when modal opens\n      const newInvoiceNumber = generateInvoiceNumber();\n      \n      setInvoiceData(prev => ({\n        ...prev,\n        invoice_number: newInvoiceNumber,\n        invoice_date: new Date().toISOString().split('T')[0],\n        company_name: mode === 'jobTickets' && selectedJobTickets.length > 0 \n          ? (selectedJobTickets[0].company_name || '') // Customer's company from job ticket\n          : '', // Empty for manual entry\n        line_items: mode === 'jobTickets' ? generateLineItemsFromJobTickets() : [],\n        customer_name: mode === 'jobTickets' && selectedJobTickets.length > 0 \n          ? (selectedJobTickets[0].customer_name || '')\n          : ''\n      }));\n    }\n  }, [isOpen]); // Only depend on isOpen, not on mode or selectedJobTickets\n  \n  // Handle job tickets changes separately to avoid regenerating invoice number\n  useEffect(() => {\n    if (isOpen && mode === 'jobTickets' && selectedJobTickets.length > 0) {\n      try {\n        console.log('Processing job tickets for invoice:', selectedJobTickets);\n        const lineItems = generateLineItemsFromJobTickets();\n        console.log('Generated line items:', lineItems);\n        \n        const customerName = selectedJobTickets[0].customer_name || '';\n        const companyName = selectedJobTickets[0].company_name || '';\n        \n        setInvoiceData(prev => ({\n          ...prev,\n          line_items: lineItems,\n          customer_name: customerName,\n          company_name: companyName\n        }));\n      } catch (error) {\n        console.error('Error processing job tickets for invoice:', error);\n        toast.error('Error processing job tickets. Please try again.');\n        // Set empty line items on error to prevent crash\n        setInvoiceData(prev => ({\n          ...prev,\n          line_items: [],\n          customer_name: '',\n          company_name: ''\n        }));\n      }\n    }\n  }, [isOpen, mode, selectedJobTickets]);\n  \n  // Generate line items from job tickets\n  const generateLineItemsFromJobTickets = () => {\n    if (!selectedJobTickets || selectedJobTickets.length === 0) return [];\n    \n    // Validate all job tickets are from same customer company\n    const customerCompanies = [...new Set(selectedJobTickets.map(ticket => ticket.company_name).filter(Boolean))];\n    if (customerCompanies.length > 1) {\n      console.error('Job tickets from multiple customer companies:', customerCompanies);\n      toast.error(`Cannot create invoice: Job tickets are from different customer companies (${customerCompanies.join(', ')}). Please select tickets from the same customer.`);\n      return [];\n    }\n    \n    if (customerCompanies.length === 0) {\n      console.error('No customer company found in selected job tickets');\n      toast.error('Cannot create invoice: Selected job tickets do not have customer company information.');\n      return [];\n    }\n    \n    // Generate line items with proper error handling and fallbacks\n    return selectedJobTickets.map((ticket, index) => {\n      try {\n        // Safely extract values with fallbacks\n        const rate = parseFloat(ticket.rate) || 100; // $100/hour default\n        const workHours = parseFloat(ticket.total_work_hours) || 0;\n        const travelHours = parseFloat(ticket.total_travel_hours) || 0;\n        const quantity = workHours + (travelHours * 0.5); // Travel at 50% rate\n        const cost = rate * quantity;\n        \n        return {\n          id: `jt_${ticket.id}`,\n          job_ticket_id: ticket.id,\n          description: `Job Ticket #${ticket.id} - ${ticket.description || 'Service Work'}`,\n          rate: rate,\n          quantity: quantity,\n          cost: cost,\n          total: cost // Keep both for compatibility\n        };\n      } catch (error) {\n        console.error(`Error processing job ticket ${ticket.id}:`, error, ticket);\n        // Return a safe fallback item\n        return {\n          id: `jt_${ticket.id}_error`,\n          job_ticket_id: ticket.id,\n          description: `Job Ticket #${ticket.id} - Error processing data`,\n          rate: 0,\n          quantity: 0,\n          cost: 0,\n          total: 0\n        };\n      }\n    });\n  };\n  \n  // Calculate line item totals\n  const calculateLineItemTotal = (rate, quantity) => {\n    return (parseFloat(rate) || 0) * (parseFloat(quantity) || 0);\n  };\n  \n  // Calculate invoice totals\n  const totals = useMemo(() => {\n    const subtotal = invoiceData.line_items.reduce((sum, item) => {\n      // Safely calculate line item total with fallbacks\n      const rate = parseFloat(item.rate) || 0;\n      const quantity = parseFloat(item.quantity) || 0;\n      const itemTotal = rate * quantity;\n      return sum + itemTotal;\n    }, 0);\n    \n    // Service fee calculation: $0.49 per job ticket + $0.99 invoice fee\n    const jobTicketCount = invoiceData.line_items.filter(item => item.job_ticket_id).length;\n    const serviceFee = (jobTicketCount * 0.49) + 0.99;\n    \n    const tax = 0; // Placeholder for tax calculation\n    const total = subtotal + serviceFee + tax;\n    \n    return {\n      subtotal: (subtotal || 0).toFixed(2),\n      serviceFee: (serviceFee || 0).toFixed(2),\n      tax: (tax || 0).toFixed(2),\n      total: (total || 0).toFixed(2)\n    };\n  }, [invoiceData.line_items]);\n  \n  // Handle input changes\n  const handleInputChange = (field, value) => {\n    setInvoiceData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  \n  // Handle line item changes\n  const handleLineItemChange = (index, field, value) => {\n    setInvoiceData(prev => ({\n      ...prev,\n      line_items: prev.line_items.map((item, i) => \n        i === index ? { ...item, [field]: value } : item\n      )\n    }));\n  };\n\n  // Update line item (alias for handleLineItemChange for consistency)\n  const updateLineItem = (index, field, value) => {\n    const numericValue = field === 'rate' || field === 'quantity' ? parseFloat(value) || 0 : value;\n    setInvoiceData(prev => ({\n      ...prev,\n      line_items: prev.line_items.map((item, i) => {\n        if (i === index) {\n          const updatedItem = { ...item, [field]: numericValue };\n          // Calculate cost and total when rate or quantity changes\n          if (field === 'rate' || field === 'quantity') {\n            const rate = parseFloat(updatedItem.rate) || 0;\n            const quantity = parseFloat(updatedItem.quantity) || 0;\n            const calculatedCost = rate * quantity;\n            updatedItem.cost = calculatedCost;\n            updatedItem.total = calculatedCost; // Keep both for compatibility\n          }\n          return updatedItem;\n        }\n        return item;\n      })\n    }));\n  };\n  \n  // Add new line item\n  const addLineItem = () => {\n    const rate = 100;\n    const quantity = 1;\n    const cost = rate * quantity;\n    \n    const newItem = {\n      id: `manual_${Date.now()}`,\n      description: '',\n      rate: rate,\n      quantity: quantity,\n      cost: cost,\n      total: cost // Keep both for compatibility\n    };\n    \n    setInvoiceData(prev => ({\n      ...prev,\n      line_items: [...prev.line_items, newItem]\n    }));\n  };\n  \n  // Remove line item\n  const removeLineItem = (index) => {\n    setInvoiceData(prev => ({\n      ...prev,\n      line_items: prev.line_items.filter((_, i) => i !== index)\n    }));\n  };\n  \n  // Check for duplicate invoice number\n  const checkDuplicateInvoiceNumber = async (invoiceNumber) => {\n    try {\n      const response = await fetch(`/api/v1/invoices/check-duplicate/${encodeURIComponent(invoiceNumber)}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const { isDuplicate } = await response.json();\n        return isDuplicate;\n      }\n      return false;\n    } catch (error) {\n      console.error('❌ Error checking invoice number:', error);\n      throw error;\n    }\n  };\n\n  // Validate invoice data\n  const validateInvoiceData = () => {\n    const errors = [];\n    \n    // Validate required fields\n    if (!invoiceData.invoice_number?.trim()) {\n      errors.push('Invoice number is required');\n    }\n    \n    if (!invoiceData.company_name?.trim()) {\n      errors.push('Customer company name is required');\n    }\n    \n    if (!invoiceData.line_items || invoiceData.line_items.length === 0) {\n      errors.push('At least one line item is required');\n    }\n    \n    // Validate line items\n    invoiceData.line_items.forEach((item, index) => {\n      if (!item.description?.trim()) {\n        errors.push(`Line item ${index + 1}: Description is required`);\n      }\n      if (!item.rate || item.rate <= 0) {\n        errors.push(`Line item ${index + 1}: Rate must be greater than 0`);\n      }\n      if (!item.quantity || item.quantity <= 0) {\n        errors.push(`Line item ${index + 1}: Quantity must be greater than 0`);\n      }\n    });\n    \n    // Validate totals\n    const totalAmount = parseFloat(totals.total);\n    if (isNaN(totalAmount) || totalAmount <= 0) {\n      errors.push('Invoice total must be greater than 0');\n    }\n    \n    return errors;\n  };\n\n  // Handle form submission\n  const handleSubmit = async (status = 'Draft') => {\n    // Validate invoice data\n    const validationErrors = validateInvoiceData();\n    if (validationErrors.length > 0) {\n      toast.error(`Please fix the following errors:\\n${validationErrors.join('\\n')}`);\n      return;\n    }\n\n    setLoading(true);\n    \n    try {\n      const invoicePayload = {\n        invoice_number: invoiceData.invoice_number,\n        invoice_date: new Date(invoiceData.invoice_date).toISOString(),\n        customer_name: invoiceData.customer_name,\n        company_name: invoiceData.company_name, // Customer's company name\n        subtotal: parseFloat(totals.subtotal),\n        service_fee: parseFloat(totals.serviceFee),\n        tax: parseFloat(totals.tax),\n        total_amount: parseFloat(totals.total),\n        line_items: invoiceData.line_items.map(item => ({\n          description: item.description,\n          rate: parseFloat(item.rate),\n          quantity: parseFloat(item.quantity),\n          amount: parseFloat(item.cost || item.total || 0)\n        })),\n        job_ticket_ids: invoiceData.line_items\n          .filter(item => item.job_ticket_id)\n          .map(item => item.job_ticket_id),\n        status: status,\n        created_by: user?.name || 'Unknown User',\n        notes: invoiceData.notes || ''\n      };\n\n      console.log('Submitting invoice payload:', invoicePayload);\n\n      const response = await fetch('/api/v1/invoices', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(invoicePayload)\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.detail || 'Failed to save invoice');\n      }\n\n      const result = await response.json();\n      console.log('Invoice created successfully:', result);\n      \n      toast.success(`Invoice ${status.toLowerCase()} successfully!`);\n      onClose();\n      \n      // Refresh invoices list if available\n      if (typeof onInvoiceCreated === 'function') {\n        onInvoiceCreated(result);\n      }\n      \n    } catch (error) {\n      console.error('Error creating invoice:', error);\n      toast.error(`Failed to create invoice: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Save as draft\n  const handleSaveAsDraft = async () => {\n    await handleSubmit('Draft');\n  };\n\n  // Submit invoice and show delivery options\n  const handleSubmitInvoice = async () => {\n    await handleSubmit('Submitted');\n    setShowDeliveryModal(true);\n  };\n\n  // State for delivery options modal\n  const [showDeliveryModal, setShowDeliveryModal] = useState(false);\n  const [deliveryLoading, setDeliveryLoading] = useState(false);\n\n  // Delivery options handlers\n  const handleSendEmail = async () => {\n    setDeliveryLoading(true);\n    try {\n      // TODO: Implement email delivery\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      toast.info('Email delivery feature coming soon!');\n    } catch (error) {\n      toast.error('Failed to send email');\n    } finally {\n      setDeliveryLoading(false);\n    }\n  };\n\n  const handleSendToQuickBooks = async () => {\n    setDeliveryLoading(true);\n    try {\n      // TODO: Implement QuickBooks integration\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      toast.info('QuickBooks integration coming soon!');\n    } catch (error) {\n      toast.error('Failed to send to QuickBooks');\n    } finally {\n      setDeliveryLoading(false);\n    }\n  };\n\n  const handleSaveAsDraftFromDelivery = () => {\n    toast.success('Invoice saved as draft');\n    setShowDeliveryModal(false);\n  };\n\n  const handleCloseDeliveryModal = () => {\n    setShowDeliveryModal(false);\n  };\n  \n  return (\n    <>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        title=\"Create Invoice\"\n        size=\"2xl\"\n        footer={\n          <div className=\"flex flex-col sm:flex-row gap-3 sm:justify-end\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              disabled={loading}\n              className=\"px-4 py-2 text-sm font-medium text-gray-300 bg-gray-700 border border-gray-600 rounded-lg hover:bg-gray-600 hover:text-white focus:outline-none focus:ring-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\"\n            >\n              Cancel\n            </button>\n            \n            <button\n              type=\"button\"\n              onClick={handleSaveAsDraft}\n              disabled={loading}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-yellow-600 border border-transparent rounded-lg hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-yellow-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 flex items-center\"\n            >\n              {loading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Saving...\n                </>\n              ) : (\n                <>\n                  <DocumentIcon className=\"h-4 w-4 mr-2\" />\n                  Save as Draft\n                </>\n              )}\n            </button>\n            \n            <button\n              type=\"button\"\n              onClick={handleSubmitInvoice}\n              disabled={loading}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 flex items-center\"\n            >\n              {loading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Submitting...\n                </>\n              ) : (\n                <>\n                  <PaperAirplaneIcon className=\"h-4 w-4 mr-2\" />\n                  Submit Invoice\n                </>\n              )}\n            </button>\n          </div>\n        }\n      >\n        <div className=\"space-y-6\">\n          {/* Invoice Header */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 p-6 bg-gray-700 rounded-lg\">\n            <div>\n              <label htmlFor=\"invoice_number\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Invoice Number *\n              </label>\n              <input\n                id=\"invoice_number\"\n                type=\"text\"\n                value={invoiceData.invoice_number}\n                onChange={(e) => setInvoiceData(prev => ({ ...prev, invoice_number: e.target.value }))}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"24000001\"\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"invoice_date\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Invoice Date *\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"invoice_date\"\n                  type=\"date\"\n                  value={invoiceData.invoice_date}\n                  onChange={(e) => setInvoiceData(prev => ({ ...prev, invoice_date: e.target.value }))}\n                  className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n                <CalendarIcon className=\"absolute right-3 top-2.5 h-5 w-5 text-gray-400 pointer-events-none\" />\n              </div>\n            </div>\n          </div>\n\n          {/* Company and Customer Info */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label htmlFor=\"company_name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Customer Company Name *\n              </label>\n              <input\n                id=\"company_name\"\n                type=\"text\"\n                value={invoiceData.company_name}\n                onChange={(e) => setInvoiceData(prev => ({ ...prev, company_name: e.target.value }))}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Customer company name\"\n                disabled={mode === 'jobTickets' && selectedJobTickets.length > 0}\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"customer_name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Customer Contact Name\n              </label>\n              <input\n                id=\"customer_name\"\n                type=\"text\"\n                value={invoiceData.customer_name}\n                onChange={(e) => setInvoiceData(prev => ({ ...prev, customer_name: e.target.value }))}\n                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Customer contact name\"\n                disabled={mode === 'jobTickets' && selectedJobTickets.length > 0}\n              />\n            </div>\n          </div>\n\n          {/* Line Items */}\n          <div>\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-white\">Line Items</h3>\n              <button\n                type=\"button\"\n                onClick={addLineItem}\n                className=\"flex items-center px-3 py-2 text-sm font-medium text-blue-400 hover:text-blue-300 transition-colors\"\n              >\n                <PlusIcon className=\"h-4 w-4 mr-1\" />\n                Add Item\n              </button>\n            </div>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b border-gray-600\">\n                    <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">Description</th>\n                    <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">Rate</th>\n                    <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">Quantity</th>\n                    <th className=\"text-left py-3 px-4 text-sm font-medium text-gray-300\">Cost</th>\n                    <th className=\"w-10\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {invoiceData.line_items\n                    .filter(item => item && typeof item === 'object') // Safety filter\n                    .map((item, index) => {\n                      // Ensure all required fields exist with safe defaults\n                      const safeItem = {\n                        description: item.description || '',\n                        rate: parseFloat(item.rate) || 0,\n                        quantity: parseFloat(item.quantity) || 0,\n                        cost: item.cost ?? item.total ?? 0,\n                        ...item\n                      };\n                      \n                      return (\n                    <tr key={item.id || index} className=\"border-b border-gray-700\">\n                      <td className=\"py-3 px-4\">\n                        <input\n                          type=\"text\"\n                          value={safeItem.description}\n                          onChange={(e) => updateLineItem(index, 'description', e.target.value)}\n                          className=\"w-full px-2 py-1 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                          placeholder=\"Service description\"\n                        />\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"relative\">\n                          <CurrencyDollarIcon className=\"absolute left-2 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                          <input\n                            type=\"number\"\n                            value={safeItem.rate}\n                            onChange={(e) => updateLineItem(index, 'rate', e.target.value)}\n                            className=\"w-full pl-8 pr-2 py-1 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                            placeholder=\"0.00\"\n                            step=\"0.01\"\n                            min=\"0\"\n                          />\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <input\n                          type=\"number\"\n                          value={safeItem.quantity}\n                          onChange={(e) => updateLineItem(index, 'quantity', e.target.value)}\n                          className=\"w-full px-2 py-1 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                          placeholder=\"1\"\n                          step=\"0.01\"\n                          min=\"0\"\n                        />\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center text-white font-medium\">\n                          ${((safeItem.cost ?? safeItem.total ?? 0) || 0).toFixed(2)}\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <button\n                          type=\"button\"\n                          onClick={() => removeLineItem(index)}\n                          className=\"text-red-400 hover:text-red-300 transition-colors\"\n                        >\n                          <TrashIcon className=\"h-4 w-4\" />\n                        </button>\n                      </td>\n                    </tr>\n                      );\n                    })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Totals */}\n          <div className=\"bg-gray-700 rounded-lg p-6\">\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between text-gray-300\">\n                <span>Subtotal:</span>\n                <span>${totals.subtotal}</span>\n              </div>\n              <div className=\"flex justify-between text-gray-300\">\n                <span>Service Fee:</span>\n                <span>${totals.serviceFee}</span>\n              </div>\n              <div className=\"flex justify-between text-gray-300\">\n                <span>Tax:</span>\n                <span>${totals.tax}</span>\n              </div>\n              <div className=\"border-t border-gray-600 pt-3\">\n                <div className=\"flex justify-between text-white font-semibold text-lg\">\n                  <span>Total:</span>\n                  <span>${totals.total}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n      \n      {/* Delivery Options Modal */}\n      <Modal\n        isOpen={showDeliveryModal}\n        onClose={handleCloseDeliveryModal}\n        size=\"md\"\n      >\n        <div className=\"bg-gray-800 rounded-lg p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-xl font-semibold text-white\">\n              Delivery Options\n            </h2>\n            <button\n              onClick={handleCloseDeliveryModal}\n              className=\"text-gray-400 hover:text-white transition-colors\"\n            >\n              <XMarkIcon className=\"h-6 w-6\" />\n            </button>\n          </div>\n\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-300 mb-6\">\n              Choose a delivery method for your invoice.\n            </p>\n\n            {/* Send Email Option */}\n            <button\n              onClick={handleSendEmail}\n              disabled={deliveryLoading}\n              className=\"w-full flex items-center justify-between p-4 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors disabled:opacity-50\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <EnvelopeIcon className=\"h-6 w-6 text-blue-400\" />\n                <div className=\"text-left\">\n                  <div className=\"text-white font-medium\">Send Email</div>\n                  <div className=\"text-gray-400 text-sm\">Send the invoice to the customer via email.</div>\n                </div>\n              </div>\n              {deliveryLoading && <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-400\"></div>}\n            </button>\n\n            {/* Send to QuickBooks Option */}\n            <button\n              onClick={handleSendToQuickBooks}\n              disabled={deliveryLoading}\n              className=\"w-full flex items-center justify-between p-4 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors disabled:opacity-50\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <DocumentTextIcon className=\"h-6 w-6 text-green-400\" />\n                <div className=\"text-left\">\n                  <div className=\"text-white font-medium\">Send to QuickBooks</div>\n                  <div className=\"text-gray-400 text-sm\">Send the invoice to QuickBooks for further processing.</div>\n                </div>\n              </div>\n              {deliveryLoading && <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-green-400\"></div>}\n            </button>\n\n            {/* Save as Draft Option */}\n            <button\n              onClick={handleSaveAsDraftFromDelivery}\n              disabled={deliveryLoading}\n              className=\"w-full flex items-center justify-between p-4 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors disabled:opacity-50\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <DocumentIcon className=\"h-6 w-6 text-yellow-400\" />\n                <div className=\"text-left\">\n                  <div className=\"text-white font-medium\">Save as Draft</div>\n                  <div className=\"text-gray-400 text-sm\">Save the invoice as a draft for later use.</div>\n                </div>\n              </div>\n            </button>\n          </div>\n\n          <div className=\"mt-6 pt-4 border-t border-gray-700\">\n            <button\n              onClick={handleCloseDeliveryModal}\n              className=\"w-full px-4 py-2 text-gray-400 hover:text-white transition-colors\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateInvoiceModal;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { authenticatedFetch } from '../../utils/auth';\nimport { toast } from 'react-toastify';\nimport { \n  DocumentTextIcon,\n  CurrencyDollarIcon,\n  PaperAirplaneIcon,\n  PencilIcon,\n  ExclamationTriangleIcon\n} from '@heroicons/react/24/outline';\nimport CreateInvoiceModal from './CreateInvoiceModal';\n\n/**\n * Invoices Management Component\n * Provides comprehensive invoice management with status cards and data table\n */\nconst Invoices = ({ triggerInvoiceModal = false, setTriggerInvoiceModal }) => {\n  const { t } = useLanguage();\n  const { validateAccess } = useManagerAccess();\n  \n  // State management\n  const [invoices, setInvoices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n\n  // Fetch invoices from backend (placeholder for future implementation)\n  const fetchInvoices = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // TODO: Implement actual API call when backend is ready\n      // const response = await authenticatedFetch('/invoices');\n      // if (response.ok) {\n      //   const data = await response.json();\n      //   setInvoices(data);\n      // } else {\n      //   throw new Error('Failed to fetch invoices');\n      // }\n      \n      // Placeholder data for UI demonstration\n      setTimeout(() => {\n        setInvoices([\n          {\n            id: 1,\n            invoice_number: 'INV-00000001',\n            created_on: '2025-06-15',\n            created_by: 'John Manager',\n            customer_name: 'ABC Corporation',\n            total_amount: 1250.00,\n            status: 'submitted'\n          },\n          {\n            id: 2,\n            invoice_number: 'INV-00000002',\n            created_on: '2025-06-14',\n            created_by: 'John Manager',\n            customer_name: 'XYZ Industries',\n            total_amount: 875.50,\n            status: 'draft'\n          },\n          {\n            id: 3,\n            invoice_number: 'INV-00000003',\n            created_on: '2025-06-13',\n            created_by: 'John Manager',\n            customer_name: 'Tech Solutions LLC',\n            total_amount: 2100.75,\n            status: 'submitted'\n          }\n        ]);\n        setLoading(false);\n      }, 1000);\n      \n    } catch (err) {\n      console.error('Error fetching invoices:', err);\n      setError(err.message);\n      setLoading(false);\n      toast.error(t('manager.invoices.messages.errorLoading'));\n    }\n  }, [t]);\n\n  // Load invoices on component mount\n  useEffect(() => {\n    fetchInvoices();\n  }, [fetchInvoices]);\n\n  // Handle trigger from Quick Actions\n  useEffect(() => {\n    if (triggerInvoiceModal) {\n      setShowCreateModal(true);\n      setTriggerInvoiceModal(false);\n    }\n  }, [triggerInvoiceModal, setTriggerInvoiceModal]);\n\n  // Validate manager access\n  if (!validateAccess()) {\n    return null;\n  }\n\n  // Calculate statistics\n  const getStatusStats = () => {\n    const totalInvoices = invoices.length;\n    const draftInvoices = invoices.filter(invoice => invoice.status === 'draft').length;\n    const submittedInvoices = invoices.filter(invoice => invoice.status === 'submitted').length;\n    \n    return {\n      totalInvoices,\n      draftInvoices,\n      submittedInvoices\n    };\n  };\n\n  // Handle edit invoice\n  const handleEditInvoice = (invoiceId) => {\n    // TODO: Implement edit functionality\n    console.log('Edit invoice clicked - functionality to be implemented', invoiceId);\n    toast.info('Edit functionality will be implemented in future updates');\n  };\n\n  // Format currency\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  // Format date\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const stats = getStatusStats();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-slate-900 p-4 md:p-6\">\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n          <span className=\"ml-3 text-gray-400\">{t('common.loading')}</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 p-4 md:p-6\">\n      {/* Header with Create Invoice Button */}\n      <div className=\"mb-8 flex flex-col lg:flex-row lg:items-start lg:justify-between gap-4\">\n        <div className=\"flex-1\">\n          <h1 className=\"text-2xl font-bold text-white mb-2\">\n            {t('manager.invoices.title')}\n          </h1>\n          <p className=\"text-gray-400\">\n            {t('manager.invoices.subtitle')}\n          </p>\n        </div>\n        \n        {/* Create Invoice Button */}\n        <div className=\"lg:flex-shrink-0\">\n          <button\n            onClick={() => setShowCreateModal(true)}\n            className=\"px-4 py-2 bg-green-600 hover:bg-green-700 focus:bg-green-700 text-white font-medium rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 focus:ring-offset-slate-900\"\n          >\n            {t('manager.invoices.actions.createInvoice')}\n          </button>\n        </div>\n      </div>\n\n      {/* Status Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        {/* Total Invoices */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <DocumentTextIcon className=\"h-8 w-8 text-blue-500\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-2xl font-bold text-white\">{stats.totalInvoices}</p>\n              <p className=\"text-gray-400 text-sm\">{t('manager.invoices.stats.totalInvoices')}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Draft Invoices */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <PencilIcon className=\"h-8 w-8 text-gray-500\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-2xl font-bold text-white\">{stats.draftInvoices}</p>\n              <p className=\"text-gray-400 text-sm\">{t('manager.invoices.stats.draftInvoices')}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Submitted Invoices */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <PaperAirplaneIcon className=\"h-8 w-8 text-green-500\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-2xl font-bold text-white\">{stats.submittedInvoices}</p>\n              <p className=\"text-gray-400 text-sm\">{t('manager.invoices.stats.submittedInvoices')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Invoices Table */}\n      <div className=\"bg-gray-800 border border-gray-700 rounded-lg shadow-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-700\">\n          <h2 className=\"text-lg font-semibold text-white\">\n            {t('manager.invoices.table.title')}\n          </h2>\n        </div>\n\n        {error ? (\n          <div className=\"flex flex-col items-center justify-center py-12\">\n            <ExclamationTriangleIcon className=\"h-12 w-12 text-red-500 mb-4\" />\n            <p className=\"text-red-400 mb-4\">{t('manager.invoices.messages.errorLoading')}</p>\n            <button\n              onClick={fetchInvoices}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors duration-200\"\n            >\n              {t('common.retry')}\n            </button>\n          </div>\n        ) : invoices.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center py-12\">\n            <DocumentTextIcon className=\"h-12 w-12 text-gray-500 mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-300 mb-2\">\n              {t('manager.invoices.empty.title')}\n            </h3>\n            <p className=\"text-gray-400 text-center max-w-md\">\n              {t('manager.invoices.empty.description')}\n            </p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-700\">\n              <thead className=\"bg-gray-750\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.invoices.table.headers.invoiceNumber')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.invoices.table.headers.createdOn')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.invoices.table.headers.createdBy')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.invoices.table.headers.customerName')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.invoices.table.headers.totalAmount')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.invoices.table.headers.status')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.invoices.table.headers.actions')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-gray-800 divide-y divide-gray-700\">\n                {invoices.map((invoice) => (\n                  <tr key={invoice.id} className=\"hover:bg-gray-750 transition-colors duration-150\">\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">\n                      {invoice.invoice_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      {formatDate(invoice.created_on)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      {invoice.created_by}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      {invoice.customer_name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      {formatCurrency(invoice.total_amount)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                        invoice.status === 'submitted' \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {t(`manager.invoices.table.status.${invoice.status}`)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      <button\n                        onClick={() => handleEditInvoice(invoice.id)}\n                        className=\"text-blue-400 hover:text-blue-300 transition-colors duration-200\"\n                        title={t('manager.invoices.actions.edit')}\n                      >\n                        <PencilIcon className=\"h-4 w-4\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n      {showCreateModal && (\n        <CreateInvoiceModal\n          isOpen={showCreateModal}\n          onClose={() => setShowCreateModal(false)}\n          onInvoiceCreated={(newInvoice) => {\n            // Add the new invoice to the beginning of the list\n            setInvoices(prevInvoices => [\n              {\n                id: newInvoice.id,\n                invoice_number: newInvoice.invoice_number,\n                created_on: newInvoice.created_on,\n                created_by: newInvoice.created_by,\n                customer_name: newInvoice.customer_name,\n                total_amount: newInvoice.total,\n                status: newInvoice.status\n              },\n              ...prevInvoices\n            ]);\n            setShowCreateModal(false);\n          }}\n          mode=\"manual\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Invoices;\n","/**\n * Invoice Validation Utilities\n * Provides reusable validation logic for invoice creation\n */\n\n/**\n * Validates that all job tickets are from the same customer company\n * @param {Array} jobTickets - Array of job ticket objects\n * @returns {Object} Validation result with status and details\n */\nexport const validateSameCustomerCompany = (jobTickets) => {\n  if (!jobTickets || jobTickets.length === 0) {\n    return {\n      isValid: false,\n      error: 'NO_TICKETS',\n      message: 'No job tickets selected',\n      customerCompanies: []\n    };\n  }\n\n  // Extract unique customer company names (filter out null/undefined)\n  const customerCompanies = [...new Set(\n    jobTickets\n      .map(ticket => ticket.company_name)\n      .filter(company => company && company.trim())\n  )];\n\n  // Check if we have any customer companies\n  if (customerCompanies.length === 0) {\n    return {\n      isValid: false,\n      error: 'NO_CUSTOMER_INFO',\n      message: 'Selected job tickets do not have customer company information',\n      customerCompanies: []\n    };\n  }\n\n  // Check if all tickets are from the same customer company\n  if (customerCompanies.length > 1) {\n    return {\n      isValid: false,\n      error: 'MULTIPLE_CUSTOMERS',\n      message: `Job tickets are from different customer companies: ${customerCompanies.join(', ')}`,\n      customerCompanies: customerCompanies\n    };\n  }\n\n  // All validation passed\n  return {\n    isValid: true,\n    error: null,\n    message: 'All job tickets are from the same customer company',\n    customerCompanies: customerCompanies,\n    customerCompany: customerCompanies[0]\n  };\n};\n\n/**\n * Groups job tickets by customer company\n * @param {Array} jobTickets - Array of job ticket objects\n * @returns {Object} Object with customer companies as keys and arrays of tickets as values\n */\nexport const groupTicketsByCustomerCompany = (jobTickets) => {\n  if (!jobTickets || jobTickets.length === 0) {\n    return {};\n  }\n\n  return jobTickets.reduce((groups, ticket) => {\n    const company = ticket.company_name || 'Unknown Company';\n    if (!groups[company]) {\n      groups[company] = [];\n    }\n    groups[company].push(ticket);\n    return groups;\n  }, {});\n};\n\n/**\n * Filters job tickets to only include those from a specific customer company\n * @param {Array} jobTickets - Array of job ticket objects\n * @param {string} customerCompany - Target customer company name\n * @returns {Array} Filtered array of job tickets\n */\nexport const filterTicketsByCustomerCompany = (jobTickets, customerCompany) => {\n  if (!jobTickets || jobTickets.length === 0 || !customerCompany) {\n    return [];\n  }\n\n  return jobTickets.filter(ticket => \n    ticket.company_name === customerCompany\n  );\n};\n\n/**\n * Gets validation error message for UI display\n * @param {string} errorCode - Error code from validation result\n * @param {Array} customerCompanies - Array of customer company names\n * @returns {string} User-friendly error message\n */\nexport const getValidationErrorMessage = (errorCode, customerCompanies = []) => {\n  switch (errorCode) {\n    case 'NO_TICKETS':\n      return 'Please select at least one job ticket to create an invoice.';\n    \n    case 'NO_CUSTOMER_INFO':\n      return 'The selected job tickets do not have customer company information. Please check the ticket details.';\n    \n    case 'MULTIPLE_CUSTOMERS':\n      return `You can only create an invoice using job tickets from the same customer. The selected tickets are from different companies: ${customerCompanies.join(', ')}. Please revise your selection.`;\n    \n    default:\n      return 'Unable to validate job tickets for invoice creation. Please try again.';\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useAuth } from '../../context/AuthContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { authenticatedFetch } from '../../utils/auth';\nimport { toast } from 'react-toastify';\nimport Modal from '../ui/Modal';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\n/**\n * CreateJobTicketModal - Modal for managers to create job tickets manually\n * Uses GenericJobTicketForm structure but optimized for manager workflow\n */\nconst CreateJobTicketModal = ({ isOpen, onClose, onJobTicketCreated }) => {\n  const { user } = useAuth();\n  const { companyProfile } = useManager();\n  const { t } = useLanguage();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    watch,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {\n      job_type: 'generic',\n      company_name: '',\n      customer_name: '',\n      location: '',\n      description: '',\n      work_start_time: '08:00',\n      work_end_time: '17:00',\n      drive_start_time: '07:00',\n      drive_end_time: '18:00',\n      total_work_hours: 0,\n      total_travel_hours: 0,\n      parts: []\n    }\n  });\n\n  // Watch time fields for automatic calculation\n  const workStartTime = watch('work_start_time');\n  const workEndTime = watch('work_end_time');\n  const driveStartTime = watch('drive_start_time');\n  const driveEndTime = watch('drive_end_time');\n\n  // Calculate hours automatically\n  useEffect(() => {\n    if (workStartTime && workEndTime) {\n      const start = new Date(`1970-01-01T${workStartTime}`);\n      const end = new Date(`1970-01-01T${workEndTime}`);\n      if (end > start) {\n        const hours = (end - start) / (1000 * 60 * 60);\n        setValue('total_work_hours', Math.round(hours * 100) / 100);\n      }\n    }\n  }, [workStartTime, workEndTime, setValue]);\n\n  useEffect(() => {\n    if (driveStartTime && driveEndTime) {\n      const start = new Date(`1970-01-01T${driveStartTime}`);\n      const end = new Date(`1970-01-01T${driveEndTime}`);\n      if (end > start) {\n        const hours = (end - start) / (1000 * 60 * 60);\n        setValue('total_travel_hours', Math.round(hours * 100) / 100);\n      }\n    }\n  }, [driveStartTime, driveEndTime, setValue]);\n\n  // Handle form submission\n  const onSubmit = async (formData) => {\n    setIsSubmitting(true);\n    \n    // COMPREHENSIVE FRONTEND LOGGING\n    const timestamp = new Date().toISOString();\n    console.log('\\n' + '='.repeat(80));\n    console.log(`🚀 FRONTEND JOB TICKET CREATION - TIMESTAMP: ${timestamp}`);\n    console.log('='.repeat(80));\n    \n    console.log('📝 RAW FORM DATA:');\n    Object.entries(formData).forEach(([key, value]) => {\n      console.log(`   - ${key}: ${JSON.stringify(value)} (type: ${typeof value})`);\n    });\n    \n    console.log('\\n👤 USER CONTEXT:');\n    console.log(`   - Email: ${user?.email}`);\n    console.log(`   - Name: ${user?.name}`);\n    console.log(`   - First Name: ${user?.first_name}`);\n    console.log(`   - Last Name: ${user?.last_name}`);\n    console.log(`   - Company Profile: ${JSON.stringify(companyProfile)}`);\n    \n    try {\n      // Generate job ticket number\n      const currentYear = new Date().getFullYear().toString().slice(-2);\n      const randomNumber = Math.floor(Math.random() * 1000000).toString().padStart(6, '0');\n      const jobTicketNumber = `${currentYear}${randomNumber}`;\n      console.log(`\\n🎫 Generated job ticket number: ${jobTicketNumber}`);\n\n      // Prepare payload with all required fields matching backend schema\n      const payload = {\n        // Backend expects job_number, not job_ticket_number\n        job_number: jobTicketNumber,\n        company_name: formData.company_name?.trim(),\n        customer_name: formData.customer_name?.trim() || '',\n        location: formData.location?.trim() || '',\n        work_description: formData.description?.trim() || '', \n        work_start_time: formData.work_start_time,\n        work_end_time: formData.work_end_time,\n        work_total_hours: parseFloat(formData.total_work_hours) || 0,\n        drive_start_time: formData.drive_start_time,\n        drive_end_time: formData.drive_end_time,\n        drive_total_hours: parseFloat(formData.total_travel_hours) || 0,\n        submitted_by: user.name || `${user.first_name} ${user.last_name}` || 'Manager',\n        status: 'submitted', // Backend only accepts: draft, submitted, complete\n        // Optional fields\n        work_type: 'generic',\n        equipment: '',\n        travel_type: 'roundTrip',\n        parts_used: JSON.stringify([]),\n        additional_notes: formData.additional_notes?.trim() || ''\n      };\n      \n      console.log('\\n📦 PREPARED PAYLOAD FOR BACKEND:');\n      Object.entries(payload).forEach(([key, value]) => {\n        console.log(`   - ${key}: ${JSON.stringify(value)} (type: ${typeof value})`);\n      });\n      \n      // Validate required fields before sending\n      const requiredFields = ['company_name', 'submitted_by'];\n      const missingFields = requiredFields.filter(field => !payload[field]);\n      \n      console.log('\\n🔍 PAYLOAD VALIDATION:');\n      requiredFields.forEach(field => {\n        const isPresent = payload[field] && payload[field].toString().trim();\n        console.log(`   ${isPresent ? '✅' : '❌'} ${field}: ${JSON.stringify(payload[field])}`);\n      });\n      \n      if (missingFields.length > 0) {\n        console.error(`❌ Missing required fields: ${missingFields}`);\n        throw new Error(`Missing required fields: ${missingFields.join(', ')}`);\n      }\n      \n      console.log('✅ All required fields present');\n\n      // Submit to backend\n      console.log('\\n🌐 MAKING API CALL:');\n      console.log(`   - URL: /job-tickets/`);\n      console.log(`   - Method: POST`);\n      console.log(`   - Headers: Content-Type: application/json`);\n      console.log(`   - Body: ${JSON.stringify(payload, null, 2)}`);\n      \n      const response = await authenticatedFetch('/job-tickets/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n      \n      console.log('\\n📡 API RESPONSE:');\n      console.log(`   - Status: ${response.status}`);\n      console.log(`   - Status Text: ${response.statusText}`);\n      console.log(`   - OK: ${response.ok}`);\n      \n      if (response.headers) {\n        console.log('   - Headers:');\n        try {\n          for (const [key, value] of response.headers.entries()) {\n            console.log(`     ${key}: ${value}`);\n          }\n        } catch (e) {\n          console.log('     Headers not available (CORS error)');\n        }\n      }\n      \n      console.log('📡 Raw response received:', {\n        ok: response.ok,\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers ? Object.fromEntries(response.headers.entries()) : 'Headers not available (CORS error)'\n      });\n\n      if (!response.ok) {\n        console.log('❌ Response not OK, parsing error...');\n        console.log('📊 Response status:', response.status);\n        console.log('📋 Response status text:', response.statusText);\n        \n        let errorData;\n        let responseText = '';\n        \n        try {\n          // Clone the response to read it multiple times\n          const responseClone = response.clone();\n          responseText = await responseClone.text();\n          console.log('📄 Raw response text:', responseText);\n          \n          // Try to parse as JSON\n          errorData = JSON.parse(responseText);\n          console.log('📋 Parsed error data:', errorData);\n          \n          // For 422 errors, show detailed validation errors\n          if (response.status === 422) {\n            console.log('🚫 VALIDATION ERROR (422) - Backend rejected payload:');\n            console.log('Validation details:', errorData);\n            if (errorData.detail) {\n              console.log('Field validation errors:', errorData.detail);\n            }\n          }\n          \n        } catch (parseError) {\n          console.log('⚠️ Failed to parse response as JSON:', parseError);\n          errorData = { \n            message: responseText || `HTTP ${response.status}: ${response.statusText}`,\n            status: response.status,\n            statusText: response.statusText\n          };\n        }\n        \n        console.log('💥 Throwing error with message:', errorData.message);\n        \n        // Create more specific error message for 422\n        let errorMessage = errorData.message || 'Failed to create job ticket';\n        if (response.status === 422) {\n          errorMessage = 'Validation error: Please check all required fields are filled correctly';\n          if (errorData.detail && Array.isArray(errorData.detail)) {\n            const fieldErrors = errorData.detail.map(err => `${err.loc?.join('.')}: ${err.msg}`).join(', ');\n            errorMessage = `Validation errors: ${fieldErrors}`;\n          }\n        }\n        \n        throw new Error(errorMessage);\n      }\n\n      const newJobTicket = await response.json();\n      console.log('✅ Successfully created job ticket:', newJobTicket);\n\n      // Success feedback\n      toast.success(t('manager.jobTickets.messages.createSuccess'));\n      console.log('🎉 Success toast shown');\n      \n      // Notify parent component\n      if (onJobTicketCreated) {\n        console.log('📞 Calling onJobTicketCreated callback');\n        onJobTicketCreated(newJobTicket);\n      } else {\n        console.log('⚠️ No onJobTicketCreated callback provided');\n      }\n\n      // Reset form and close modal\n      console.log('🔄 Resetting form and closing modal');\n      reset();\n      onClose();\n      console.log('✨ Job ticket creation completed successfully');\n\n    } catch (error) {\n      console.error('💀 COMPREHENSIVE ERROR DEBUG:');\n      console.error('Error object:', error);\n      console.error('Error message:', error.message);\n      console.error('Error stack:', error.stack);\n      console.error('Error name:', error.name);\n      console.error('Error cause:', error.cause);\n      \n      // Show error message to user\n      const errorMessage = error.message || t('manager.jobTickets.messages.createError');\n      console.error('🚨 Showing error toast:', errorMessage);\n      toast.error(errorMessage);\n      \n    } finally {\n      console.log('🏁 Setting isSubmitting to false');\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle modal close\n  const handleClose = () => {\n    if (!isSubmitting) {\n      reset();\n      onClose();\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      title={t('manager.jobTickets.createModal.title')}\n      size=\"xl\"\n      closeOnEsc={!isSubmitting}\n      closeOnOutsideClick={!isSubmitting}\n    >\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        {/* Company Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"company_name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              {t('manager.jobTickets.createModal.fields.companyName')}\n            </label>\n            <input\n              id=\"company_name\"\n              type=\"text\"\n              {...register('company_name', { required: 'Company name is required' })}\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter customer company name\"\n            />\n            {errors.company_name && (\n              <p className=\"mt-1 text-sm text-red-400\">{errors.company_name.message}</p>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"customer_name\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              {t('manager.jobTickets.createModal.fields.customerName')}\n            </label>\n            <input\n              id=\"customer_name\"\n              type=\"text\"\n              {...register('customer_name', { required: 'Customer name is required' })}\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter customer name\"\n            />\n            {errors.customer_name && (\n              <p className=\"mt-1 text-sm text-red-400\">{errors.customer_name.message}</p>\n            )}\n          </div>\n        </div>\n\n        {/* Location */}\n        <div>\n          <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n            {t('manager.jobTickets.createModal.fields.location')}\n          </label>\n          <input\n            id=\"location\"\n            type=\"text\"\n            {...register('location', { required: 'Location is required' })}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"Enter job location\"\n          />\n          {errors.location && (\n            <p className=\"mt-1 text-sm text-red-400\">{errors.location.message}</p>\n          )}\n        </div>\n\n        {/* Work Description */}\n        <div>\n          <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n            {t('manager.jobTickets.createModal.fields.workDescription')}\n          </label>\n          <textarea\n            id=\"description\"\n            {...register('description', { required: 'Work description is required' })}\n            rows={3}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"Describe the work performed\"\n          />\n          {errors.description && (\n            <p className=\"mt-1 text-sm text-red-400\">{errors.description.message}</p>\n          )}\n        </div>\n\n        {/* Time Tracking */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Work Hours */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium text-white\">Work Hours</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"work_start_time\" className=\"block text-sm font-medium text-gray-300 mb-2\">Start Time</label>\n                <input\n                  id=\"work_start_time\"\n                  type=\"time\"\n                  {...register('work_start_time')}\n                  className=\"w-32 px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"work_end_time\" className=\"block text-sm font-medium text-gray-300 mb-2\">End Time</label>\n                <input\n                  id=\"work_end_time\"\n                  type=\"time\"\n                  {...register('work_end_time')}\n                  className=\"w-32 px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n            <div>\n              <label htmlFor=\"total_work_hours\" className=\"block text-sm font-medium text-gray-300 mb-2\">Total Work Hours</label>\n              <input\n                id=\"total_work_hours\"\n                type=\"number\"\n                step=\"0.25\"\n                {...register('total_work_hours', { min: 0 })}\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"0.0\"\n              />\n            </div>\n          </div>\n\n          {/* Travel Hours */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium text-white\">Travel Hours</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"drive_start_time\" className=\"block text-sm font-medium text-gray-300 mb-2\">Start Time</label>\n                <input\n                  id=\"drive_start_time\"\n                  type=\"time\"\n                  {...register('drive_start_time')}\n                  className=\"w-32 px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"drive_end_time\" className=\"block text-sm font-medium text-gray-300 mb-2\">End Time</label>\n                <input\n                  id=\"drive_end_time\"\n                  type=\"time\"\n                  {...register('drive_end_time')}\n                  className=\"w-32 px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n            <div>\n              <label htmlFor=\"total_travel_hours\" className=\"block text-sm font-medium text-gray-300 mb-2\">Total Travel Hours</label>\n              <input\n                id=\"total_travel_hours\"\n                type=\"number\"\n                step=\"0.25\"\n                {...register('total_travel_hours', { min: 0 })}\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"0.0\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Additional Notes */}\n        <div>\n          <label htmlFor=\"additional_notes\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n            Additional Notes (Optional)\n          </label>\n          <textarea\n            id=\"additional_notes\"\n            {...register('additional_notes')}\n            rows={2}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            placeholder=\"Any additional notes or comments\"\n          />\n        </div>\n\n        {/* Form Actions */}\n        <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-700\">\n          <button\n            type=\"button\"\n            onClick={handleClose}\n            disabled={isSubmitting}\n            className=\"px-4 py-2 text-gray-300 hover:text-white transition-colors duration-200 disabled:opacity-50\"\n          >\n            {t('common.cancel')}\n          </button>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"px-6 py-2 bg-orange-600 hover:bg-orange-700 disabled:bg-orange-800 text-white font-medium rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:cursor-not-allowed\"\n          >\n            {isSubmitting ? (\n              <div className=\"flex items-center\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                {t('common.creating')}\n              </div>\n            ) : (\n              t('manager.jobTickets.createModal.submit')\n            )}\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateJobTicketModal;\n","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { authenticatedFetch } from '../../utils/auth';\nimport { toast } from 'react-toastify';\n\nconst EditJobTicketModal = ({ isOpen, onClose, jobTicket, onJobTicketUpdated }) => {\n  const { t } = useLanguage();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    setValue\n  } = useForm();\n\n  // Pre-populate form when jobTicket changes\n  useEffect(() => {\n    if (jobTicket && isOpen) {\n      console.log('📝 Pre-populating edit form with job ticket:', jobTicket);\n      \n      // Set all form values from the job ticket\n      setValue('companyName', jobTicket.company_name || '');\n      setValue('customerName', jobTicket.customer_name || '');\n      setValue('location', jobTicket.location || '');\n      setValue('workDescription', jobTicket.work_description || '');\n      setValue('workStartTime', jobTicket.work_start_time || '');\n      setValue('workEndTime', jobTicket.work_end_time || '');\n      setValue('driveStartTime', jobTicket.drive_start_time || '');\n      setValue('driveEndTime', jobTicket.drive_end_time || '');\n      setValue('totalWorkHours', jobTicket.work_total_hours || '');\n      setValue('totalTravelHours', jobTicket.drive_total_hours || '');\n      setValue('additionalNotes', jobTicket.additional_notes || '');\n      setValue('equipment', jobTicket.equipment || '');\n      setValue('workType', jobTicket.work_type || '');\n    }\n  }, [jobTicket, isOpen, setValue]);\n\n  const onSubmit = async (formData) => {\n    if (!jobTicket) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      console.log('📤 Updating job ticket:', jobTicket.id);\n      console.log('📋 Form data:', formData);\n\n      // Prepare the payload for the backend\n      const payload = {\n        company_name: formData.companyName,\n        customer_name: formData.customerName,\n        location: formData.location,\n        work_description: formData.workDescription,\n        work_start_time: formData.workStartTime,\n        work_end_time: formData.workEndTime,\n        drive_start_time: formData.driveStartTime,\n        drive_end_time: formData.driveEndTime,\n        work_total_hours: parseFloat(formData.totalWorkHours) || 0,\n        drive_total_hours: parseFloat(formData.totalTravelHours) || 0,\n        equipment: formData.equipment,\n        work_type: formData.workType,\n        additional_notes: formData.additionalNotes\n      };\n\n      console.log('📦 Prepared payload:', payload);\n\n      const response = await authenticatedFetch(`/job-tickets/${jobTicket.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        const updatedJobTicket = await response.json();\n        console.log('✅ Job ticket updated successfully:', updatedJobTicket);\n        \n        toast.success(t('manager.jobTickets.messages.editSuccess'));\n        \n        // Call the callback to refresh the job tickets list\n        if (onJobTicketUpdated) {\n          onJobTicketUpdated(updatedJobTicket);\n        }\n        \n        // Reset form and close modal\n        reset();\n        onClose();\n      } else {\n        const errorData = await response.json();\n        console.error('❌ Error updating job ticket:', errorData);\n        throw new Error(errorData.detail || 'Failed to update job ticket');\n      }\n    } catch (error) {\n      console.error('❌ Error updating job ticket:', error);\n      toast.error(t('manager.jobTickets.messages.editError'));\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleClose = () => {\n    reset();\n    onClose();\n  };\n\n  if (!isOpen || !jobTicket) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-slate-800 rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-700\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-white\">\n              {t('manager.jobTickets.editModal.title')}\n            </h2>\n            <p className=\"text-sm text-gray-400 mt-1\">\n              {t('manager.jobTickets.editModal.subtitle')} {jobTicket.ticket_number}\n            </p>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit(onSubmit)} className=\"p-6 space-y-6\">\n          {/* Company Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label htmlFor=\"companyName\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                {t('manager.jobTickets.createModal.fields.companyName')} *\n              </label>\n              <input\n                id=\"companyName\"\n                type=\"text\"\n                {...register('companyName', { required: 'Company name is required' })}\n                className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter company name\"\n              />\n              {errors.companyName && (\n                <p className=\"mt-1 text-sm text-red-400\">{errors.companyName.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"customerName\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                {t('manager.jobTickets.createModal.fields.customerName')}\n              </label>\n              <input\n                id=\"customerName\"\n                type=\"text\"\n                {...register('customerName')}\n                className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter customer name\"\n              />\n            </div>\n          </div>\n\n          {/* Location and Work Type */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                {t('manager.jobTickets.createModal.fields.location')} *\n              </label>\n              <input\n                id=\"location\"\n                type=\"text\"\n                {...register('location', { required: 'Location is required' })}\n                className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter location\"\n              />\n              {errors.location && (\n                <p className=\"mt-1 text-sm text-red-400\">{errors.location.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"workType\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Work Type\n              </label>\n              <input\n                id=\"workType\"\n                type=\"text\"\n                {...register('workType')}\n                className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter work type\"\n              />\n            </div>\n          </div>\n\n          {/* Equipment */}\n          <div>\n            <label htmlFor=\"equipment\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Equipment\n            </label>\n            <input\n              id=\"equipment\"\n              type=\"text\"\n              {...register('equipment')}\n              className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter equipment details\"\n            />\n          </div>\n\n          {/* Work Description */}\n          <div>\n            <label htmlFor=\"workDescription\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              {t('manager.jobTickets.createModal.fields.workDescription')} *\n            </label>\n            <textarea\n              id=\"workDescription\"\n              {...register('workDescription', { required: 'Work description is required' })}\n              rows={4}\n              className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Describe the work performed\"\n            />\n            {errors.workDescription && (\n              <p className=\"mt-1 text-sm text-red-400\">{errors.workDescription.message}</p>\n            )}\n          </div>\n\n          {/* Time Fields */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-white\">Work Time</h3>\n              \n              <div>\n                <label htmlFor=\"workStartTime\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  {t('manager.jobTickets.createModal.fields.workStartTime')}\n                </label>\n                <input\n                  id=\"workStartTime\"\n                  type=\"time\"\n                  {...register('workStartTime')}\n                  className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"workEndTime\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  {t('manager.jobTickets.createModal.fields.workEndTime')}\n                </label>\n                <input\n                  id=\"workEndTime\"\n                  type=\"time\"\n                  {...register('workEndTime')}\n                  className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"totalWorkHours\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  {t('manager.jobTickets.createModal.fields.totalWorkHours')}\n                </label>\n                <input\n                  id=\"totalWorkHours\"\n                  type=\"number\"\n                  step=\"0.5\"\n                  min=\"0\"\n                  {...register('totalWorkHours')}\n                  className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"0.0\"\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-white\">Travel Time</h3>\n              \n              <div>\n                <label htmlFor=\"driveStartTime\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  {t('manager.jobTickets.createModal.fields.driveStartTime')}\n                </label>\n                <input\n                  id=\"driveStartTime\"\n                  type=\"time\"\n                  {...register('driveStartTime')}\n                  className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"driveEndTime\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  {t('manager.jobTickets.createModal.fields.driveEndTime')}\n                </label>\n                <input\n                  id=\"driveEndTime\"\n                  type=\"time\"\n                  {...register('driveEndTime')}\n                  className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"totalTravelHours\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  {t('manager.jobTickets.createModal.fields.totalTravelHours')}\n                </label>\n                <input\n                  id=\"totalTravelHours\"\n                  type=\"number\"\n                  step=\"0.5\"\n                  min=\"0\"\n                  {...register('totalTravelHours')}\n                  className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"0.0\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Additional Notes */}\n          <div>\n            <label htmlFor=\"additionalNotes\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n              {t('manager.jobTickets.createModal.fields.additionalNotes')}\n            </label>\n            <textarea\n              id=\"additionalNotes\"\n              {...register('additionalNotes')}\n              rows={3}\n              className=\"w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter any additional notes\"\n            />\n          </div>\n\n          {/* Form Actions */}\n          <div className=\"flex justify-end space-x-4 pt-6 border-t border-slate-700\">\n            <button\n              type=\"button\"\n              onClick={handleClose}\n              className=\"px-4 py-2 text-gray-300 hover:text-white transition-colors\"\n              disabled={isSubmitting}\n            >\n              {t('common.cancel')}\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-slate-800 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {isSubmitting ? t('common.saving') : t('common.save')}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditJobTicketModal;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { authenticatedFetch } from '../../utils/auth';\nimport { validateSameCustomerCompany, getValidationErrorMessage } from '../../utils/invoiceValidation';\nimport { toast } from 'react-toastify';\nimport { \n  ClipboardDocumentListIcon, \n  DocumentTextIcon, \n  CheckIcon,\n  EyeIcon,\n  TrashIcon,\n  ExclamationTriangleIcon\n} from '@heroicons/react/24/outline';\nimport CreateJobTicketModal from './CreateJobTicketModal';\nimport EditJobTicketModal from './EditJobTicketModal';\nimport CreateInvoiceModal from './CreateInvoiceModal';\nimport Modal from '../ui/Modal';\n\n/**\n * Job Tickets Management Component\n * Provides comprehensive job ticket management with status cards and data table\n */\nconst JobTickets = () => {\n  const { t } = useLanguage();\n  const { validateAccess } = useManagerAccess();\n\n  // State management\n  const [jobTickets, setJobTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [selectedTicket, setSelectedTicket] = useState(null);\n  const [selectedTickets, setSelectedTickets] = useState([]); // New state for bulk selection\n  const [showCreateInvoiceModal, setShowCreateInvoiceModal] = useState(false); // New state for CreateInvoiceModal\n  const [showWarningModal, setShowWarningModal] = useState(false); // New state for warning modal\n  const [validationError, setValidationError] = useState(null); // Store validation error details\n\n  // Fetch job tickets from API\n  const fetchJobTickets = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      console.log('🎫 Fetching job tickets...');\n      const response = await authenticatedFetch('/job-tickets/?limit=100');\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('✅ Job tickets fetched:', data);\n        setJobTickets(data.job_tickets || []);\n      } else {\n        const errorText = await response.text();\n        console.error('❌ Response error:', response.status, errorText);\n        throw new Error(`Failed to fetch job tickets: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('❌ Error fetching job tickets:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Handle job ticket created\n  const handleJobTicketCreated = useCallback((newJobTicket) => {\n    console.log('🆕 Job ticket created, refreshing list...');\n    fetchJobTickets(); // Refresh the entire list\n  }, [fetchJobTickets]);\n\n  // Handle job ticket updated\n  const handleJobTicketUpdated = useCallback((updatedTicket) => {\n    console.log('📝 Job ticket updated, refreshing list...');\n    fetchJobTickets(); // Refresh the entire list\n    toast.success(t('manager.jobTickets.messages.editSuccess'));\n  }, [fetchJobTickets, t]);\n\n  // Handle job ticket deletion\n  const handleDeleteJobTicket = useCallback(async (ticketId, ticketNumber) => {\n    try {\n      console.log(`🗑️ Deleting job ticket ${ticketNumber} (ID: ${ticketId})...`);\n      \n      const response = await authenticatedFetch(`/job-tickets/${ticketId}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        console.log('✅ Job ticket deleted successfully');\n        toast.success(t('manager.jobTickets.messages.deleteSuccess'));\n        fetchJobTickets(); // Refresh the list\n      } else {\n        const errorText = await response.text();\n        console.error('❌ Delete response error:', response.status, errorText);\n        throw new Error(`Failed to delete job ticket: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('❌ Error deleting job ticket:', error);\n      toast.error(t('manager.jobTickets.messages.deleteError'));\n    }\n  }, [fetchJobTickets, t]);\n\n  // Load job tickets on component mount\n  useEffect(() => {\n    fetchJobTickets();\n  }, [fetchJobTickets]);\n\n  // Calculate status statistics\n  const getStatusStats = useCallback(() => {\n    const totalTickets = jobTickets.length;\n    const assignedToInvoice = jobTickets.filter(ticket => ticket.invoice_id).length;\n    const notAssigned = totalTickets - assignedToInvoice;\n\n    return {\n      totalTickets,\n      assignedToInvoice,\n      notAssigned\n    };\n  }, [jobTickets]);\n\n  // Format date for display\n  const formatDate = (dateString) => {\n    if (!dateString) return '-';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  // Format hours for display\n  const formatHours = (hours) => {\n    if (!hours) return '0';\n    return parseFloat(hours).toFixed(1);\n  };\n\n  // Manager access check\n  const { loading: accessLoading, error: accessError } = useManagerAccess();\n\n  if (accessLoading) {\n    return (\n      <div className=\"min-h-screen bg-slate-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-white\">{t('common.loading')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (accessError) {\n    return (\n      <div className=\"min-h-screen bg-slate-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-red-400 mb-4\">Access Denied</h2>\n          <p className=\"text-gray-300 mb-4\">{accessError}</p>\n          <button\n            onClick={() => window.history.back()}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors duration-200\"\n          >\n            {t('common.goHome')}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!validateAccess()) {\n    return null;\n  }\n\n  const stats = getStatusStats();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-slate-900 p-4 md:p-6\">\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n          <span className=\"ml-3 text-gray-400\">{t('common.loading')}</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 p-4 md:p-6\">\n      {/* Header with Action Buttons */}\n      <div className=\"mb-8 flex flex-col lg:flex-row lg:items-start lg:justify-between gap-4\">\n        <div className=\"flex-1\">\n          <h1 className=\"text-2xl font-bold text-white mb-2\">\n            {t('manager.jobTickets.title')}\n          </h1>\n          <p className=\"text-gray-400\">\n            {t('manager.jobTickets.subtitle')}\n          </p>\n        </div>\n        \n        {/* Action Buttons */}\n        <div className=\"flex flex-col sm:flex-row gap-3 lg:flex-shrink-0\">\n          {/* Create Job Ticket Button */}\n          <button\n            onClick={() => setShowCreateModal(true)}\n            className=\"px-4 py-2 bg-orange-600 hover:bg-orange-700 focus:bg-orange-700 text-white font-medium rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 focus:ring-offset-slate-900\"\n          >\n            {t('manager.jobTickets.actions.createJobTicket')}\n          </button>\n          \n          {/* Create Invoice Button */}\n          <button\n            onClick={() => {\n              const selectedJobTickets = jobTickets.filter(ticket => selectedTickets.includes(ticket.id));\n              const validation = validateSameCustomerCompany(selectedJobTickets);\n              if (!validation.isValid) {\n                setValidationError(validation);\n                setShowWarningModal(true);\n              } else {\n                setShowCreateInvoiceModal(true);\n              }\n            }}\n            className=\"px-4 py-2 bg-green-600 hover:bg-green-700 focus:bg-green-700 text-white font-medium rounded-lg transition-colors duration-200\"\n          >\n            {t('manager.jobTickets.actions.createInvoice')}\n          </button>\n        </div>\n      </div>\n\n      {/* Status Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        {/* Total Tickets */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <ClipboardDocumentListIcon className=\"h-8 w-8 text-blue-500\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-2xl font-bold text-white\">{jobTickets.length}</p>\n              <p className=\"text-gray-400 text-sm\">{t('manager.jobTickets.stats.totalTickets')}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Assigned to Invoice */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <CheckIcon className=\"h-8 w-8 text-green-500\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-2xl font-bold text-white\">{stats.assignedToInvoice}</p>\n              <p className=\"text-gray-400 text-sm\">{t('manager.jobTickets.stats.assignedToInvoice')}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Not Assigned */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 shadow-lg\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <DocumentTextIcon className=\"h-8 w-8 text-yellow-500\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-2xl font-bold text-white\">{stats.notAssigned}</p>\n              <p className=\"text-gray-400 text-sm\">{t('manager.jobTickets.stats.notAssigned')}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Job Tickets Table */}\n      <div className=\"bg-gray-800 border border-gray-700 rounded-lg shadow-lg\">\n        <div className=\"px-6 py-4 border-b border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-white\">\n              {t('manager.jobTickets.table.title')}\n            </h2>\n            \n            {/* Bulk Actions Bar */}\n            {selectedTickets.length > 0 && (\n              <div className=\"flex items-center gap-4 bg-blue-900/20 border border-blue-700 rounded-lg px-4 py-2\">\n                <span className=\"text-sm text-blue-300\">\n                  {selectedTickets.length} ticket{selectedTickets.length !== 1 ? 's' : ''} selected\n                </span>\n                <button\n                  onClick={() => {\n                    const selectedJobTickets = jobTickets.filter(ticket => selectedTickets.includes(ticket.id));\n                    const validation = validateSameCustomerCompany(selectedJobTickets);\n                    if (!validation.isValid) {\n                      setValidationError(validation);\n                      setShowWarningModal(true);\n                    } else {\n                      setShowCreateInvoiceModal(true);\n                    }\n                  }}\n                  className=\"px-3 py-1 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded transition-colors duration-200\"\n                >\n                  Create Invoice from Selected\n                </button>\n                <button\n                  onClick={() => setSelectedTickets([])}\n                  className=\"px-3 py-1 bg-gray-600 hover:bg-gray-700 text-white text-sm font-medium rounded transition-colors duration-200\"\n                >\n                  Clear Selection\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {error ? (\n          <div className=\"flex flex-col items-center justify-center py-12\">\n            <ExclamationTriangleIcon className=\"h-12 w-12 text-red-500 mb-4\" />\n            <p className=\"text-red-400 mb-4\">{t('manager.jobTickets.messages.loadError')}</p>\n            <button\n              onClick={fetchJobTickets}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors duration-200\"\n            >\n              {t('common.retry')}\n            </button>\n          </div>\n        ) : jobTickets.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center py-12\">\n            <ClipboardDocumentListIcon className=\"h-12 w-12 text-gray-500 mb-4\" />\n            <h3 className=\"text-lg font-semibold text-white mb-2\">\n              {t('manager.jobTickets.empty.title')}\n            </h3>\n            <p className=\"text-gray-400 text-center max-w-md\">\n              {t('manager.jobTickets.empty.description')}\n            </p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-700\">\n              <thead className=\"bg-gray-700\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedTickets.length === jobTickets.length && jobTickets.length > 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setSelectedTickets(jobTickets.map(ticket => ticket.id));\n                        } else {\n                          setSelectedTickets([]);\n                        }\n                      }}\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded bg-gray-700 border-gray-600\"\n                    />\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.jobTickets.table.headers.ticketNumber')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.jobTickets.table.headers.submittedBy')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.jobTickets.table.headers.companyName')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider hidden sm:table-cell\">\n                    {t('manager.jobTickets.table.headers.workHours')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider hidden sm:table-cell\">\n                    {t('manager.jobTickets.table.headers.travelHours')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.jobTickets.table.headers.invoiceLink')}\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    {t('manager.jobTickets.table.headers.actions')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-gray-800 divide-y divide-gray-700\">\n                {jobTickets.map((ticket) => (\n                  <tr key={ticket.id} className=\"hover:bg-gray-750 transition-colors duration-150\">\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedTickets.includes(ticket.id)}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setSelectedTickets([...selectedTickets, ticket.id]);\n                          } else {\n                            setSelectedTickets(selectedTickets.filter(id => id !== ticket.id));\n                          }\n                        }}\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded bg-gray-700 border-gray-600\"\n                      />\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">\n                      {ticket.ticket_number}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      {ticket.submitted_by_name || t('common.notAvailable')}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      {ticket.company_name || t('common.notAvailable')}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300 hidden sm:table-cell\">\n                      {formatHours(ticket.work_total_hours)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300 hidden sm:table-cell\">\n                      {formatHours(ticket.drive_total_hours)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                        ticket.invoice_id \n                          ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n                          : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\n                      }`}>\n                        {ticket.invoice_id ? t('manager.jobTickets.table.status.linked') : t('manager.jobTickets.table.status.notLinked')}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      <div className=\"flex items-center space-x-2\">\n                        <button\n                          onClick={() => {\n                            setSelectedTicket(ticket);\n                            setShowEditModal(true);\n                          }}\n                          className=\"text-orange-400 hover:text-orange-300 p-1 rounded transition-colors duration-200\"\n                          title={t('common.view')}\n                        >\n                          <EyeIcon className=\"h-4 w-4\" />\n                        </button>\n                        <button\n                          onClick={() => {\n                            if (window.confirm(t('manager.jobTickets.confirmDelete'))) {\n                              handleDeleteJobTicket(ticket.id, ticket.ticket_number);\n                            }\n                          }}\n                          className=\"text-red-400 hover:text-red-300 p-1 rounded transition-colors duration-200\"\n                          title={t('common.delete')}\n                        >\n                          <TrashIcon className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {showCreateModal && (\n        <CreateJobTicketModal \n          isOpen={showCreateModal}\n          onClose={() => setShowCreateModal(false)} \n          onJobTicketCreated={handleJobTicketCreated} \n        />\n      )}\n      {showEditModal && selectedTicket && (\n        <EditJobTicketModal \n          isOpen={showEditModal}\n          onClose={() => {\n            setShowEditModal(false);\n            setSelectedTicket(null);\n          }} \n          jobTicket={selectedTicket}\n          onJobTicketUpdated={handleJobTicketUpdated}\n        />\n      )}\n      {showCreateInvoiceModal && (\n        <CreateInvoiceModal \n          isOpen={showCreateInvoiceModal}\n          onClose={() => {\n            setShowCreateInvoiceModal(false);\n            setSelectedTickets([]); // Clear selection when modal closes\n          }}\n          onInvoiceCreated={(newInvoice) => {\n            console.log('✅ Invoice created from job tickets:', newInvoice);\n            setShowCreateInvoiceModal(false);\n            setSelectedTickets([]);\n            fetchJobTickets(); // Refresh job tickets\n          }}\n          selectedJobTickets={jobTickets.filter(ticket => selectedTickets.includes(ticket.id))}\n          mode={selectedTickets.length > 0 ? 'jobTickets' : 'manual'}\n        />\n      )}\n      {showWarningModal && (\n        <Modal\n          isOpen={showWarningModal}\n          onClose={() => setShowWarningModal(false)}\n          title={t('manager.jobTickets.warning.title')}\n          content={validationError ? getValidationErrorMessage(validationError.error, validationError.customerCompanies) : t('manager.jobTickets.warning.content')}\n          actions={[\n            {\n              label: t('common.ok'),\n              onClick: () => setShowWarningModal(false),\n            },\n          ]}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default JobTickets;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { fetchAuditLogs, exportAuditLogs, AUDIT_CATEGORIES } from '../../utils/audit';\nimport Toast from '../ui/Toast';\nimport './AuditLogs.css';\n\n/**\n * Audit Logs Component\n * Displays audit logs with filtering, pagination, and export functionality\n */\nconst AuditLogs = () => {\n  const { t } = useLanguage();\n  const { auditLogs, loadingAuditLogs, auditError } = useManager();\n  const { validateAccess } = useManagerAccess();\n  \n  // Local state\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [toast, setToast] = useState(null);\n  \n  // Filters\n  const [filters, setFilters] = useState({\n    category: '',\n    action: '',\n    user: '',\n    dateFrom: '',\n    dateTo: '',\n    search: ''\n  });\n  \n  // Pagination\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 50,\n    total: 0,\n    totalPages: 0\n  });\n  \n  // Sorting\n  const [sortBy, setSortBy] = useState('timestamp');\n  const [sortOrder, setSortOrder] = useState('desc');\n  \n  // Export state\n  const [exporting, setExporting] = useState(false);\n\n  // Load audit logs\n  const loadAuditLogs = useCallback(async () => {\n    const { hasAccess } = await validateAccess('audit_logs');\n    if (!hasAccess) {\n      setError(t('common.accessDenied'));\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const params = {\n        page: pagination.page,\n        limit: pagination.limit,\n        sort_by: sortBy,\n        sort_order: sortOrder,\n        ...filters\n      };\n\n      // Remove empty filters\n      Object.keys(params).forEach(key => {\n        if (!params[key]) delete params[key];\n      });\n\n      const result = await fetchAuditLogs(params);\n      \n      // Handle both success and graceful failure cases\n      if (result.success || result.logs !== undefined) {\n        setLogs(result.logs || []);\n        setPagination(prev => ({\n          ...prev,\n          total: result.total || 0,\n          totalPages: Math.ceil((result.total || 0) / prev.limit)\n        }));\n        \n        // Clear any previous errors if we got data (even if empty)\n        if (result.success) {\n          setError(null);\n        }\n        \n        // Show informational message if audit logs are not available\n        if (result.message && result.logs.length === 0) {\n          console.log('Audit logs info:', result.message);\n        }\n      } else {\n        // Only set error for actual failures, not when audit system is unavailable\n        if (result.error && !result.error.includes('Authentication') && !result.error.includes('token')) {\n          setError(result.error);\n        } else {\n          // For auth errors, just clear the logs silently\n          setLogs([]);\n          setPagination(prev => ({ ...prev, total: 0, totalPages: 0 }));\n          setError(null);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading audit logs:', error);\n      // Only show user-facing errors for unexpected failures\n      setError(t('common.errorOccurred'));\n      setLogs([]);\n      setPagination(prev => ({ ...prev, total: 0, totalPages: 0 }));\n    } finally {\n      setLoading(false);\n    }\n  }, [pagination.page, pagination.limit, sortBy, sortOrder, filters, validateAccess, t]);\n\n  // Load logs on mount and when dependencies change\n  useEffect(() => {\n    loadAuditLogs();\n  }, [loadAuditLogs]);\n\n  // Handle filter change\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    setPagination(prev => ({\n      ...prev,\n      page: 1\n    }));\n  };\n\n  // Handle sort change\n  const handleSortChange = (newSortBy) => {\n    if (sortBy === newSortBy) {\n      setSortOrder(prev => prev === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(newSortBy);\n      setSortOrder('desc');\n    }\n    setPagination(prev => ({\n      ...prev,\n      page: 1\n    }));\n  };\n\n  // Handle page change\n  const handlePageChange = (newPage) => {\n    setPagination(prev => ({\n      ...prev,\n      page: newPage\n    }));\n  };\n\n  // Handle export\n  const handleExport = async () => {\n    const { hasAccess } = await validateAccess('data_export');\n    if (!hasAccess) {\n      setToast({\n        type: 'error',\n        message: t('common.accessDenied')\n      });\n      return;\n    }\n\n    setExporting(true);\n\n    try {\n      const params = {\n        ...filters,\n        sort_by: sortBy,\n        sort_order: sortOrder\n      };\n\n      // Remove empty filters\n      Object.keys(params).forEach(key => {\n        if (!params[key]) delete params[key];\n      });\n\n      const result = await exportAuditLogs(params);\n      \n      if (result.success) {\n        // Create download link\n        const blob = new Blob([result.csv], { type: 'text/csv' });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `audit-logs-${new Date().toISOString().split('T')[0]}.csv`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n\n        setToast({\n          type: 'success',\n          message: t('manager.auditLogs.messages.exportSuccess')\n        });\n      } else {\n        throw new Error(result.error || 'Export failed');\n      }\n    } catch (error) {\n      console.error('Error exporting audit logs:', error);\n      setToast({\n        type: 'error',\n        message: error.message || t('common.errorOccurred')\n      });\n    } finally {\n      setExporting(false);\n    }\n  };\n\n  // Clear filters\n  const clearFilters = () => {\n    setFilters({\n      category: '',\n      action: '',\n      user: '',\n      dateFrom: '',\n      dateTo: '',\n      search: ''\n    });\n    setPagination(prev => ({\n      ...prev,\n      page: 1\n    }));\n  };\n\n  // Format log entry\n  const formatLogEntry = (log) => {\n    const timestamp = new Date(log.timestamp).toLocaleString();\n    const category = log.category || 'System';\n    const action = log.action || 'Unknown';\n    const user = log.user_name || log.user_email || 'System';\n    const details = log.details ? JSON.stringify(log.details, null, 2) : '';\n    \n    return {\n      ...log,\n      formattedTimestamp: timestamp,\n      formattedCategory: category,\n      formattedAction: action,\n      formattedUser: user,\n      formattedDetails: details\n    };\n  };\n\n  // Get category badge class\n  const getCategoryBadgeClass = (category) => {\n    switch (category?.toLowerCase()) {\n      case 'security': return 'bg-danger';\n      case 'user': return 'bg-primary';\n      case 'company': return 'bg-info';\n      case 'technician': return 'bg-success';\n      case 'system': return 'bg-secondary';\n      default: return 'bg-light text-dark';\n    }\n  };\n\n  // Get unique categories and actions for filters\n  const getFilterOptions = () => {\n    const categories = [...new Set(logs.map(log => log.category).filter(Boolean))];\n    const actions = [...new Set(logs.map(log => log.action).filter(Boolean))];\n    const users = [...new Set(logs.map(log => log.user_name || log.user_email).filter(Boolean))];\n    \n    return { categories, actions, users };\n  };\n\n  const { categories, actions, users } = getFilterOptions();\n\n  return (\n    <div className=\"audit-logs\">\n      {/* Header */}\n      <div className=\"logs-header mb-4\">\n        <div className=\"row align-items-center\">\n          <div className=\"col\">\n            <h2 className=\"h4 mb-1\">{t('manager.auditLogs.title')}</h2>\n            <p className=\"text-muted mb-0\">{t('manager.auditLogs.subtitle')}</p>\n          </div>\n          <div className=\"col-auto\">\n            <button\n              className=\"btn btn-outline-primary\"\n              onClick={handleExport}\n              disabled={exporting || logs.length === 0}\n            >\n              {exporting ? (\n                <>\n                  <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                  {t('manager.auditLogs.exporting')}\n                </>\n              ) : (\n                <>\n                  <i className=\"bi bi-download me-2\"></i>\n                  {t('manager.auditLogs.exportLogs')}\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"filters-section card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row g-3 align-items-end\">\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.category')}</label>\n              <select\n                className=\"form-select\"\n                value={filters.category}\n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">{t('common.all')}</option>\n                {Object.values(AUDIT_CATEGORIES).map(category => (\n                  <option key={category} value={category}>\n                    {t(`manager.auditLogs.categories.${category.toLowerCase()}`)}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.action')}</label>\n              <select\n                className=\"form-select\"\n                value={filters.action}\n                onChange={(e) => handleFilterChange('action', e.target.value)}\n              >\n                <option value=\"\">{t('common.all')}</option>\n                {actions.map(action => (\n                  <option key={action} value={action}>\n                    {action}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.user')}</label>\n              <select\n                className=\"form-select\"\n                value={filters.user}\n                onChange={(e) => handleFilterChange('user', e.target.value)}\n              >\n                <option value=\"\">{t('common.all')}</option>\n                {users.map(user => (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.dateFrom')}</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={filters.dateFrom}\n                onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-2\">\n              <label className=\"form-label\">{t('manager.auditLogs.filters.dateTo')}</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={filters.dateTo}\n                onChange={(e) => handleFilterChange('dateTo', e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-2\">\n              <div className=\"d-flex gap-2\">\n                <button\n                  className=\"btn btn-outline-secondary\"\n                  onClick={clearFilters}\n                  title={t('manager.auditLogs.clearFilters')}\n                >\n                  <i className=\"bi bi-x-circle\"></i>\n                </button>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={loadAuditLogs}\n                  disabled={loading}\n                  title={t('common.refresh')}\n                >\n                  <i className=\"bi bi-arrow-clockwise\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"row g-3 mt-2\">\n            <div className=\"col-md-6\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder={t('manager.auditLogs.filters.searchPlaceholder')}\n                value={filters.search}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"d-flex align-items-center gap-3\">\n                <small className=\"text-muted\">\n                  {t('manager.auditLogs.totalLogs', { count: pagination.total })}\n                </small>\n                <select\n                  className=\"form-select form-select-sm\"\n                  style={{ width: 'auto' }}\n                  value={pagination.limit}\n                  onChange={(e) => setPagination(prev => ({ ...prev, limit: parseInt(e.target.value), page: 1 }))}\n                >\n                  <option value={25}>25</option>\n                  <option value={50}>50</option>\n                  <option value={100}>100</option>\n                </select>\n                <small className=\"text-muted\">{t('manager.auditLogs.perPage')}</small>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Logs Table */}\n      <div className=\"logs-table card\">\n        <div className=\"card-body p-0\">\n          {loading ? (\n            <div className=\"text-center py-5\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">{t('manager.auditLogs.messages.loadingLogs')}</span>\n              </div>\n              <p className=\"mt-2 text-muted\">{t('manager.auditLogs.messages.loadingLogs')}</p>\n            </div>\n          ) : error ? (\n            <div className=\"alert alert-danger m-3\" role=\"alert\">\n              <i className=\"bi bi-exclamation-triangle me-2\"></i>\n              {error}\n            </div>\n          ) : logs.length === 0 ? (\n            <div className=\"text-center py-5\">\n              <i className=\"bi bi-journal-text display-1 text-muted\"></i>\n              <p className=\"mt-3 text-muted\">{t('manager.auditLogs.messages.noLogsFound')}</p>\n            </div>\n          ) : (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover mb-0\">\n                <thead className=\"table-light\">\n                  <tr>\n                    <th \n                      className=\"sortable\"\n                      onClick={() => handleSortChange('timestamp')}\n                    >\n                      {t('manager.auditLogs.timestamp')}\n                      {sortBy === 'timestamp' && (\n                        <i className={`bi bi-arrow-${sortOrder === 'asc' ? 'up' : 'down'} ms-1`}></i>\n                      )}\n                    </th>\n                    <th \n                      className=\"sortable\"\n                      onClick={() => handleSortChange('category')}\n                    >\n                      {t('manager.auditLogs.category')}\n                      {sortBy === 'category' && (\n                        <i className={`bi bi-arrow-${sortOrder === 'asc' ? 'up' : 'down'} ms-1`}></i>\n                      )}\n                    </th>\n                    <th \n                      className=\"sortable\"\n                      onClick={() => handleSortChange('action')}\n                    >\n                      {t('manager.auditLogs.action')}\n                      {sortBy === 'action' && (\n                        <i className={`bi bi-arrow-${sortOrder === 'asc' ? 'up' : 'down'} ms-1`}></i>\n                      )}\n                    </th>\n                    <th \n                      className=\"sortable\"\n                      onClick={() => handleSortChange('user_name')}\n                    >\n                      {t('manager.auditLogs.user')}\n                      {sortBy === 'user_name' && (\n                        <i className={`bi bi-arrow-${sortOrder === 'asc' ? 'up' : 'down'} ms-1`}></i>\n                      )}\n                    </th>\n                    <th>{t('manager.auditLogs.description')}</th>\n                    <th>{t('manager.auditLogs.ipAddress')}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {logs.map((log) => {\n                    const formattedLog = formatLogEntry(log);\n                    return (\n                      <tr key={log.id}>\n                        <td>\n                          <small className=\"text-muted\">\n                            {formattedLog.formattedTimestamp}\n                          </small>\n                        </td>\n                        <td>\n                          <span className={`badge ${getCategoryBadgeClass(log.category)}`}>\n                            {t(`manager.auditLogs.categories.${(log.category || 'system').toLowerCase()}`)}\n                          </span>\n                        </td>\n                        <td>\n                          <code className=\"small\">{log.action}</code>\n                        </td>\n                        <td>\n                          <div className=\"d-flex align-items-center\">\n                            <div className=\"avatar-sm me-2\">\n                              <div className=\"avatar-initials-sm\">\n                                {(formattedLog.formattedUser[0] || 'S').toUpperCase()}\n                              </div>\n                            </div>\n                            <div>\n                              <div className=\"small fw-medium\">{formattedLog.formattedUser}</div>\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"log-description\">\n                            {log.description || log.action}\n                            {log.details && (\n                              <button\n                                className=\"btn btn-link btn-sm p-0 ms-2\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target={`#details-${log.id}`}\n                                aria-expanded=\"false\"\n                              >\n                                <i className=\"bi bi-info-circle\"></i>\n                              </button>\n                            )}\n                          </div>\n                          {log.details && (\n                            <div className=\"collapse mt-2\" id={`details-${log.id}`}>\n                              <div className=\"card card-body small\">\n                                <pre className=\"mb-0\">{formattedLog.formattedDetails}</pre>\n                              </div>\n                            </div>\n                          )}\n                        </td>\n                        <td>\n                          <small className=\"text-muted font-monospace\">\n                            {log.ip_address || 'N/A'}\n                          </small>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Pagination */}\n      {pagination.totalPages > 1 && (\n        <div className=\"d-flex justify-content-between align-items-center mt-4\">\n          <div>\n            <small className=\"text-muted\">\n              {t('manager.auditLogs.showingResults', {\n                start: (pagination.page - 1) * pagination.limit + 1,\n                end: Math.min(pagination.page * pagination.limit, pagination.total),\n                total: pagination.total\n              })}\n            </small>\n          </div>\n          <nav>\n            <ul className=\"pagination pagination-sm mb-0\">\n              <li className={`page-item ${pagination.page === 1 ? 'disabled' : ''}`}>\n                <button\n                  className=\"page-link\"\n                  onClick={() => handlePageChange(pagination.page - 1)}\n                  disabled={pagination.page === 1}\n                >\n                  <i className=\"bi bi-chevron-left\"></i>\n                </button>\n              </li>\n              {Array.from({ length: Math.min(5, pagination.totalPages) }, (_, i) => {\n                const page = Math.max(1, Math.min(pagination.totalPages - 4, pagination.page - 2)) + i;\n                return (\n                  <li key={page} className={`page-item ${pagination.page === page ? 'active' : ''}`}>\n                    <button\n                      className=\"page-link\"\n                      onClick={() => handlePageChange(page)}\n                    >\n                      {page}\n                    </button>\n                  </li>\n                );\n              })}\n              <li className={`page-item ${pagination.page === pagination.totalPages ? 'disabled' : ''}`}>\n                <button\n                  className=\"page-link\"\n                  onClick={() => handlePageChange(pagination.page + 1)}\n                  disabled={pagination.page === pagination.totalPages}\n                >\n                  <i className=\"bi bi-chevron-right\"></i>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      )}\n\n      {/* Toast Notifications */}\n      {toast && (\n        <Toast\n          type={toast.type}\n          message={toast.message}\n          show={true}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AuditLogs;\n","import React, { useState, useEffect } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useAuth } from '../../context/AuthContext';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { authenticatedFetch } from '../../utils/auth';\nimport { auditTechnicianAction, AUDIT_ACTIONS } from '../../utils/audit';\n\n/**\n * Format phone number as user types: (XXX) XXX-XXXX\n * @param {string} value - The input value\n * @returns {string} - Formatted phone number\n */\nconst formatPhoneNumber = (value) => {\n  // Remove all non-digit characters\n  const cleaned = value.replace(/\\D/g, '');\n  \n  // Limit to 10 digits\n  const limited = cleaned.substring(0, 10);\n  \n  // Apply formatting based on length\n  if (limited.length <= 3) {\n    return limited;\n  } else if (limited.length <= 6) {\n    return `(${limited.substring(0, 3)}) ${limited.substring(3)}`;\n  } else {\n    return `(${limited.substring(0, 3)}) ${limited.substring(3, 6)}-${limited.substring(6)}`;\n  }\n};\n\n/**\n * InviteTechnician Modal Component\n * Provides three ways to invite technicians: Create Your Own, Send Email, Send SMS\n */\nconst InviteTechnician = ({ isOpen, onClose, onSuccess }) => {\n  const { t } = useLanguage();\n  const { user } = useAuth();\n  \n  const [activeTab, setActiveTab] = useState('email'); // Default to Send Email\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Form states for each tab\n  const [createForm, setCreateForm] = useState({\n    fullName: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [emailForm, setEmailForm] = useState({\n    techName: '',\n    email: ''\n  });\n\n  const [smsForm, setSmsForm] = useState({\n    techName: '',\n    phone: ''\n  });\n\n  // Clear messages when tab changes\n  useEffect(() => {\n    setError(null);\n    setSuccess(null);\n  }, [activeTab]);\n\n  // Reset forms and states when modal opens/closes\n  useEffect(() => {\n    if (!isOpen) {\n      setActiveTab('email');\n      setIsLoading(false);\n      setError(null);\n      setSuccess(null);\n      setCreateForm({ fullName: '', email: '', phone: '', password: '', confirmPassword: '' });\n      setEmailForm({ techName: '', email: '' });\n      setSmsForm({ techName: '', phone: '' });\n    }\n  }, [isOpen]);\n\n  // API Base URL\n  const API_BASE_URL = process.env.REACT_APP_API_URL || \n    (window.location.hostname === 'localhost' ? \n      'http://localhost:8000/api/v1' : \n      'https://jobticketinvoice-backend.onrender.com/api/v1');\n\n  // Early return after all hooks\n  if (!isOpen) return null;\n\n  // Handle phone number changes for Create Your Own form\n  const handleCreatePhoneChange = (e) => {\n    const rawValue = e.target.value.replace(/\\D/g, ''); // Store only digits\n    setCreateForm({...createForm, phone: rawValue});\n  };\n\n  // Handle phone number changes for SMS form\n  const handleSmsPhoneChange = (e) => {\n    const rawValue = e.target.value.replace(/\\D/g, ''); // Store only digits\n    setSmsForm({...smsForm, phone: rawValue});\n  };\n\n  // Handle form submissions\n  const handleCreateSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    // Validation\n    if (createForm.password !== createForm.confirmPassword) {\n      setError(t('manager.techManagement.inviteForm.passwordMismatch'));\n      setIsLoading(false);\n      return;\n    }\n\n    if (createForm.password.length < 8) {\n      setError(t('manager.techManagement.inviteForm.passwordMinLengthError'));\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      // Use the existing working endpoint that's already deployed\n      const response = await authenticatedFetch('/invitations/create-technician-direct', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: createForm.email,\n          name: createForm.fullName,\n          job_type: 'other', // Using correct enum value\n          temporary_password: createForm.password\n        })\n      });\n\n      if (!response.ok) {\n        // Try to get error details from response\n        let errorData;\n        try {\n          errorData = await response.json();\n        } catch (parseErr) {\n          // If JSON parsing fails, try to get text\n          try {\n            errorData = { detail: await response.text() };\n          } catch (textErr) {\n            errorData = { detail: `HTTP ${response.status}: ${response.statusText}` };\n          }\n        }\n        \n        // Create a detailed error object\n        const error = new Error(errorData.detail || t('manager.techManagement.inviteForm.createError'));\n        error.response = response;\n        error.responseData = errorData;\n        throw error;\n      }\n\n      const result = await response.json();\n      setSuccess(t('manager.techManagement.inviteForm.createSuccess', { name: createForm.fullName }));\n      \n      // Call onSuccess callback with the new technician data\n      if (onSuccess) {\n        onSuccess(result);\n      }\n      \n      // Close modal after 2 seconds\n      setTimeout(() => {\n        onClose();\n      }, 2000);\n\n    } catch (err) {\n      console.error('Tech account creation error:', err);\n      \n      // Comprehensive error gathering\n      let errorMessage = t('manager.techManagement.inviteForm.createError');\n      let errorDetails = [];\n      \n      try {\n        if (err.response) {\n          // Server responded with error status\n          errorDetails.push(`Status: ${err.response.status}`);\n          errorDetails.push(`Status Text: ${err.response.statusText}`);\n          errorDetails.push(`URL: ${err.response.url || '/invitations/create-technician-direct'}`);\n          \n          if (err.responseData) {\n            if (typeof err.responseData === 'string') {\n              errorDetails.push(`Response: ${err.responseData}`);\n            } else if (err.responseData.detail) {\n              errorMessage = err.responseData.detail;\n              errorDetails.push(`Detail: ${err.responseData.detail}`);\n            } else {\n              errorDetails.push(`Response: ${JSON.stringify(err.responseData)}`);\n            }\n          }\n        } else if (err.message) {\n          // Network or other error\n          errorMessage = err.message;\n          errorDetails.push(`Error: ${err.message}`);\n        }\n        \n      } catch (processingErr) {\n        errorDetails.push(`Error processing error: ${processingErr.message}`);\n      }\n      \n      // Log comprehensive error details to console\n      console.error('Comprehensive error details:', {\n        originalError: err,\n        errorMessage,\n        errorDetails,\n        timestamp: new Date().toISOString(),\n        url: '/invitations/create-technician-direct',\n        method: 'POST',\n        requestBody: {\n          email: createForm.email,\n          name: createForm.fullName,\n          job_type: 'other',\n          temporary_password: createForm.password\n        }\n      });\n      \n      // Show detailed error to user in development, generic in production\n      const isDevelopment = process.env.NODE_ENV === 'development';\n      if (isDevelopment && errorDetails.length > 0) {\n        setError(`${errorMessage}\\n\\nDEBUG INFO:\\n${errorDetails.join('\\n')}`);\n      } else {\n        setError(errorMessage);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await authenticatedFetch('/tech-invites/send-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tech_name: emailForm.techName,\n          email: emailForm.email\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        \n        // Log audit event for technician invitation\n        await auditTechnicianAction(\n          AUDIT_ACTIONS.TECHNICIAN_INVITED,\n          emailForm.email,\n          { \n            tech_name: emailForm.techName,\n            invitation_method: 'email'\n          }\n        );\n        \n        setSuccess(t('manager.techManagement.inviteForm.emailSent'));\n        setEmailForm({ techName: '', email: '' });\n        \n        // Close modal after 2 seconds\n        setTimeout(() => {\n          onClose();\n        }, 2000);\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to send email invitation');\n      }\n    } catch (err) {\n      console.error('Email invitation error:', err);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSmsSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await authenticatedFetch('/tech-invites/send-sms', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tech_name: smsForm.techName,\n          phone: smsForm.phone\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        \n        // Log audit event for technician invitation\n        await auditTechnicianAction(\n          AUDIT_ACTIONS.TECHNICIAN_INVITED,\n          smsForm.phone,\n          { \n            tech_name: smsForm.techName,\n            invitation_method: 'sms'\n          }\n        );\n        \n        setSuccess(t('manager.techManagement.inviteForm.smsSent'));\n        setSmsForm({ techName: '', phone: '' });\n        \n        // Close modal after 2 seconds\n        setTimeout(() => {\n          onClose();\n        }, 2000);\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to send SMS invitation');\n      }\n    } catch (err) {\n      console.error('SMS invitation error:', err);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n            {t('manager.techManagement.inviteForm.title')}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"flex space-x-8 px-6\">\n            <button\n              onClick={() => setActiveTab('create')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'create'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              {t('manager.techManagement.inviteForm.createTab')}\n            </button>\n            <button\n              onClick={() => setActiveTab('email')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'email'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              {t('manager.techManagement.inviteForm.emailTab')}\n            </button>\n            <button\n              onClick={() => setActiveTab('sms')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === 'sms'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              {t('manager.techManagement.inviteForm.smsTab')}\n            </button>\n          </nav>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {/* Success Message */}\n          {success && (\n            <div className=\"mb-4 p-4 bg-green-50 border border-green-200 rounded-md\">\n              <p className=\"text-green-800\">{success}</p>\n            </div>\n          )}\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-md\">\n              <p className=\"text-red-800\">{error}</p>\n            </div>\n          )}\n\n          {/* Create Your Own Tab */}\n          {activeTab === 'create' && (\n            <form onSubmit={handleCreateSubmit} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.fullNameRequired')}\n                </label>\n                <input\n                  type=\"text\"\n                  required\n                  value={createForm.fullName}\n                  onChange={(e) => setCreateForm({...createForm, fullName: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.enterFullName')}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.emailAddressRequired')}\n                </label>\n                <input\n                  type=\"email\"\n                  required\n                  value={createForm.email}\n                  onChange={(e) => setCreateForm({...createForm, email: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.enterEmail')}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.phoneNumber')}\n                </label>\n                <input\n                  type=\"tel\"\n                  value={formatPhoneNumber(createForm.phone)}\n                  onChange={handleCreatePhoneChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.enterPhone')}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.passwordRequired')} <span className=\"text-gray-400 font-normal\">{t('manager.techManagement.inviteForm.passwordMinLength')}</span>\n                </label>\n                <input\n                  type=\"password\"\n                  required\n                  value={createForm.password}\n                  onChange={(e) => setCreateForm({...createForm, password: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.enterPassword')}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.confirmPasswordRequired')}\n                </label>\n                <input\n                  type=\"password\"\n                  required\n                  value={createForm.confirmPassword}\n                  onChange={(e) => setCreateForm({...createForm, confirmPassword: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.confirmPasswordPlaceholder')}\n                />\n              </div>\n              \n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {isLoading ? t('manager.techManagement.inviteForm.creating') : t('manager.techManagement.inviteForm.createTechnician')}\n              </button>\n            </form>\n          )}\n\n          {/* Send Email Tab */}\n          {activeTab === 'email' && (\n            <form onSubmit={handleEmailSubmit} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.technicianNameRequired')}\n                </label>\n                <input\n                  type=\"text\"\n                  required\n                  value={emailForm.techName}\n                  onChange={(e) => setEmailForm({...emailForm, techName: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.enterTechnicianName')}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.emailAddressRequired')}\n                </label>\n                <input\n                  type=\"email\"\n                  required\n                  value={emailForm.email}\n                  onChange={(e) => setEmailForm({...emailForm, email: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.enterEmail')}\n                />\n              </div>\n              \n              <div className=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n                <p className=\"text-sm text-blue-800\">\n                  {t('manager.techManagement.inviteForm.emailInviteInfo')}\n                </p>\n              </div>\n              \n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {isLoading ? t('manager.techManagement.inviteForm.sending') : t('manager.techManagement.inviteForm.sendEmailInvitation')}\n              </button>\n            </form>\n          )}\n\n          {/* Send SMS Tab */}\n          {activeTab === 'sms' && (\n            <form onSubmit={handleSmsSubmit} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.technicianNameRequired')}\n                </label>\n                <input\n                  type=\"text\"\n                  required\n                  value={smsForm.techName}\n                  onChange={(e) => setSmsForm({...smsForm, techName: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.enterTechnicianName')}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  {t('manager.techManagement.inviteForm.phoneNumberRequired')}\n                </label>\n                <input\n                  type=\"tel\"\n                  required\n                  value={formatPhoneNumber(smsForm.phone)}\n                  onChange={handleSmsPhoneChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder={t('manager.techManagement.inviteForm.enterPhone')}\n                />\n              </div>\n              \n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n                <p className=\"text-sm text-yellow-800\">\n                  {t('manager.techManagement.inviteForm.smsInviteInfo')}\n                </p>\n              </div>\n              \n              <button\n                type=\"submit\"\n                disabled={true}\n                className=\"w-full bg-gray-400 text-white py-2 px-4 rounded-md cursor-not-allowed\"\n              >\n                {t('manager.techManagement.inviteForm.smsInviteComingSoon')}\n              </button>\n            </form>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end space-x-3 p-6 border-t border-gray-200\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n          >\n            {t('manager.techManagement.inviteForm.cancel')}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InviteTechnician;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useManager } from '../../context/ManagerContext';\nimport { useManagerAccess } from '../../hooks/useManagerAccess';\nimport { useAuth } from '../../context/AuthContext';\nimport TechnicianManagement from './TechnicianManagement';\nimport CompanyProfile from './CompanyProfile';\nimport Invoices from './Invoices'; // Update import statement\nimport JobTickets from './JobTickets';\nimport AuditLogs from './AuditLogs';\nimport InviteTechnician from './InviteTechnician';\nimport CreateInvoiceModal from './CreateInvoiceModal';\nimport { \n  HomeIcon, \n  UsersIcon, \n  BuildingOfficeIcon, \n  ClipboardDocumentListIcon,\n  DocumentTextIcon,\n  Cog6ToothIcon,\n  Bars3Icon,\n  XMarkIcon,\n  ArrowRightOnRectangleIcon\n} from '@heroicons/react/24/outline';\nimport LanguageToggle from '../LanguageToggle';\n\n/**\n * Main Manager Dashboard Component\n * Provides navigation and content area for manager-specific features\n */\nconst ManagerDashboard = () => {\n  const { t } = useLanguage();\n  const { hasManagerAccess, getTechnicianStats } = useManager();\n  const { validateAccess } = useManagerAccess();\n  const { user, logout } = useAuth();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [accessValidated, setAccessValidated] = useState(false);\n  const [accessError, setAccessError] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [triggerInvoiceModal, setTriggerInvoiceModal] = useState(false);\n  const toggleButtonRef = useRef();\n  const sidebarRef = useRef();\n\n  // Validate access on component mount\n  useEffect(() => {\n    const checkAccess = async () => {\n      const { hasAccess, reason } = await validateAccess('manager_features');\n      if (hasAccess) {\n        setAccessValidated(true);\n      } else {\n        setAccessError(reason);\n      }\n    };\n    \n    checkAccess();\n  }, [validateAccess]);\n\n  // Handle clicks outside the sidebar to close it on mobile\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (window.innerWidth >= 768) return;\n      \n      if (\n        sidebarOpen && \n        sidebarRef.current && \n        !sidebarRef.current.contains(event.target) &&\n        toggleButtonRef.current && \n        !toggleButtonRef.current.contains(event.target)\n      ) {\n        setSidebarOpen(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [sidebarOpen]);\n\n  // Navigation items\n  const navigationItems = [\n    {\n      id: 'overview',\n      label: t('manager.overview'),\n      icon: HomeIcon,\n      component: <OverviewTab stats={getTechnicianStats()} setActiveTab={setActiveTab} setShowInviteModal={setShowInviteModal} setTriggerInvoiceModal={setTriggerInvoiceModal} />\n    },\n    {\n      id: 'invoicing',\n      label: t('manager.invoicing.title'),\n      icon: DocumentTextIcon,\n      component: <Invoices triggerInvoiceModal={triggerInvoiceModal} setTriggerInvoiceModal={setTriggerInvoiceModal} />\n    },\n    {\n      id: 'jobTickets',\n      label: t('manager.jobTickets.title'),\n      icon: ClipboardDocumentListIcon,\n      component: <JobTickets />\n    },\n    {\n      id: 'company',\n      label: t('manager.company'),\n      icon: BuildingOfficeIcon,\n      component: <CompanyProfile />\n    },\n    {\n      id: 'technicians',\n      label: t('manager.technicians'),\n      icon: UsersIcon,\n      component: <TechnicianManagement />\n    },\n    {\n      id: 'audit',\n      label: t('audit.title'),\n      icon: Cog6ToothIcon,\n      component: <AuditLogs />\n    }\n  ];\n\n  // Handle access errors\n  if (accessError) {\n    return (\n      <div className=\"bg-slate-900 min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-red-400 text-6xl mb-4\">⚠️</div>\n          <h2 className=\"text-2xl font-bold text-white mb-2\">{t('common.accessDenied')}</h2>\n          <p className=\"text-gray-400 mb-4\">{accessError}</p>\n          <p className=\"text-gray-500\">{t('common.contactAdmin')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Loading state\n  if (!accessValidated) {\n    return (\n      <div className=\"bg-slate-900 min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-gray-400\">{t('common.loading')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-slate-900 min-h-screen\">\n      {/* Header area for language toggle */}\n      <div className=\"h-14 relative\">\n        <LanguageToggle />\n      </div>\n      \n      <div className=\"flex\">\n        {/* Mobile sidebar toggle */}\n        <button\n          ref={toggleButtonRef}\n          className=\"md:hidden fixed top-4 left-4 z-50 p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700\"\n          onClick={() => setSidebarOpen(!sidebarOpen)}\n        >\n          <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n        </button>\n        \n        {/* Sidebar */}\n        <div\n          ref={sidebarRef}\n          className={`${\n            sidebarOpen ? 'translate-x-0' : '-translate-x-full'\n          } md:translate-x-0 transition-transform duration-300 ease-in-out fixed md:static inset-y-0 left-0 z-40 w-64 bg-gray-800 border-r border-gray-700 h-screen`}\n        >\n          <div className=\"flex h-full flex-col gap-y-3 md:gap-y-4 overflow-y-auto px-6 py-4 pt-16 md:pt-4\">\n            {/* Company/Manager Header - moved down on mobile to avoid hamburger overlap */}\n            <div className=\"flex h-16 shrink-0 items-center\">\n              <div className=\"flex items-center\">\n                <BuildingOfficeIcon className=\"h-8 w-8 text-blue-500 mr-3\" />\n                <div>\n                  <h2 className=\"text-lg font-semibold text-white\">\n                    {user?.company_name || t('manager.dashboard')}\n                  </h2>\n                  <p className=\"text-sm text-gray-400\">{t('manager.portal')}</p>\n                </div>\n              </div>\n            </div>\n            \n            {/* Navigation */}\n            <nav className=\"flex flex-1 flex-col\">\n              <ul className=\"flex flex-1 flex-col gap-y-4 md:gap-y-5\">\n                <li>\n                  <ul className=\"-mx-2 space-y-1\">\n                    {navigationItems.map((item) => {\n                      const Icon = item.icon;\n                      return (\n                        <li key={item.id}>\n                          <button\n                            onClick={() => {\n                              setActiveTab(item.id);\n                              setSidebarOpen(false); // Close mobile sidebar\n                            }}\n                            className={`${\n                              activeTab === item.id\n                                ? 'bg-gray-700 text-white'\n                                : 'text-gray-300 hover:text-white hover:bg-gray-700'\n                            } group flex w-full gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold transition-colors duration-200`}\n                          >\n                            <Icon className=\"h-6 w-6 shrink-0\" aria-hidden=\"true\" />\n                            {item.label}\n                          </button>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </li>\n                \n                {/* User section at bottom */}\n                <li className=\"mt-auto\">\n                  <div className=\"border-t border-gray-700 pt-3 md:pt-4\">\n                    <div className=\"flex items-center gap-x-3 mb-2 md:mb-3\">\n                      <div className=\"flex h-8 w-8 items-center justify-center rounded-full bg-blue-600\">\n                        <span className=\"text-sm font-medium text-white\">\n                          {user?.name?.charAt(0)?.toUpperCase() || 'M'}\n                        </span>\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium text-white truncate\">\n                          {user?.name || t('common.manager')}\n                        </p>\n                        <p className=\"text-xs text-gray-400 truncate\">\n                          {user?.email}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <button\n                      onClick={logout}\n                      className=\"group flex w-full gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold text-gray-300 hover:text-white hover:bg-gray-700 transition-colors duration-200\"\n                    >\n                      <ArrowRightOnRectangleIcon className=\"h-6 w-6 shrink-0\" aria-hidden=\"true\" />\n                      {t('auth.logout')}\n                    </button>\n                  </div>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n        \n        {/* Main content */}\n        <main className=\"flex-1 bg-slate-900 p-6 overflow-y-auto text-white\">\n          <div className=\"mt-2 md:mt-0 pl-14 md:pl-0 md:ml-64\">\n            <div className=\"max-w-7xl mx-auto\">\n              {/* Page Header */}\n              <div className=\"mb-8\">\n                <h1 className=\"text-3xl font-bold text-white\">\n                  {navigationItems.find(item => item.id === activeTab)?.label}\n                </h1>\n                <p className=\"text-gray-400 mt-2\">\n                  {activeTab === 'overview' && t('manager.dashboardSubtitle')}\n                  {activeTab === 'technicians' && t('manager.manageTechnicians')}\n                  {activeTab === 'invoicing' && t('manager.invoicing.subtitle')}\n                  {activeTab === 'jobTickets' && t('manager.jobTickets.subtitle')}\n                  {activeTab === 'company' && t('manager.manageCompany')}\n                  {activeTab === 'audit' && t('audit.viewLogs')}\n                </p>\n              </div>\n              \n              {/* Tab Content */}\n              <div className=\"bg-gray-800 rounded-lg shadow-xl\">\n                {navigationItems.find(item => item.id === activeTab)?.component}\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n      \n      {/* Render the InviteTechnician modal */}\n      <InviteTechnician\n        isOpen={showInviteModal}\n        onClose={() => setShowInviteModal(false)}\n        onSuccess={(result) => {\n          console.log('Technician invitation successful:', result);\n          // Optionally refresh technician list or show additional success feedback\n        }}\n      />\n    </div>\n  );\n};\n\n// Overview Tab Component\nconst OverviewTab = ({ stats, setActiveTab, setShowInviteModal, setTriggerInvoiceModal }) => {\n  const { t } = useLanguage();\n  const { user } = useAuth();\n\n  const overviewCards = [\n    {\n      title: t('manager.totalTechnicians'),\n      value: stats?.totalTechnicians || 0,\n      icon: UsersIcon,\n      color: 'blue',\n      description: t('manager.activeTechnicians')\n    },\n    {\n      title: t('manager.totalWorkHours'),\n      value: stats?.totalWorkHours || 0,\n      icon: Cog6ToothIcon,\n      color: 'yellow',\n      description: t('manager.thisMonth')\n    },\n    {\n      title: t('manager.completedJobs'),\n      value: stats?.completedJobs || 0,\n      icon: ClipboardDocumentListIcon,\n      color: 'green',\n      description: t('manager.thisMonth')\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-gray-700 rounded-lg p-6 border border-gray-600\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <UsersIcon className=\"h-8 w-8 text-blue-400\" />\n            </div>\n            <div className=\"ml-5 w-0 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-400 truncate\">\n                  {t('manager.totalTechnicians')}\n                </dt>\n                <dd className=\"text-lg font-medium text-white\">\n                  {stats.totalTechnicians}\n                </dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-700 rounded-lg p-6 border border-gray-600\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <ClipboardDocumentListIcon className=\"h-8 w-8 text-green-400\" />\n            </div>\n            <div className=\"ml-5 w-0 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-400 truncate\">\n                  {t('manager.activeTickets')}\n                </dt>\n                <dd className=\"text-lg font-medium text-white\">\n                  {stats.activeTickets}\n                </dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-700 rounded-lg p-6 border border-gray-600\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <DocumentTextIcon className=\"h-8 w-8 text-yellow-400\" />\n            </div>\n            <div className=\"ml-5 w-0 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-400 truncate\">\n                  {t('manager.pendingInvoices')}\n                </dt>\n                <dd className=\"text-lg font-medium text-white\">\n                  {stats.pendingInvoices}\n                </dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-700 rounded-lg p-6 border border-gray-600\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <BuildingOfficeIcon className=\"h-8 w-8 text-purple-400\" />\n            </div>\n            <div className=\"ml-5 w-0 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-400 truncate\">\n                  {t('manager.companyStatus')}\n                </dt>\n                <dd className=\"text-lg font-medium text-white\">\n                  Active\n                </dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <QuickActionsSection setActiveTab={setActiveTab} setShowInviteModal={setShowInviteModal} setTriggerInvoiceModal={setTriggerInvoiceModal} />\n    </div>\n  );\n};\n\n// Quick Actions Section\nconst QuickActionsSection = ({ setActiveTab, setShowInviteModal, setTriggerInvoiceModal }) => {\n  const { t } = useLanguage();\n\n  return (\n    <div className=\"bg-gray-700 rounded-lg p-6 border border-gray-600\">\n      <h3 className=\"text-lg font-semibold text-white mb-4\">{t('manager.quickActions')}</h3>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        <button \n          className=\"flex items-center p-4 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors duration-200\"\n          onClick={() => setShowInviteModal(true)}\n        >\n          <UsersIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('manager.inviteTechnician')}</span>\n        </button>\n        <button \n          className=\"flex items-center p-4 bg-green-600 hover:bg-green-700 rounded-lg transition-colors duration-200\"\n          onClick={() => {\n            setActiveTab('invoicing');\n            setTriggerInvoiceModal(true);\n          }}\n        >\n          <DocumentTextIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('manager.createInvoice')}</span>\n        </button>\n        <button className=\"flex items-center p-4 bg-gray-500 hover:bg-gray-600 rounded-lg transition-colors duration-200\">\n          <BuildingOfficeIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('manager.updateCompany')}</span>\n        </button>\n        <button className=\"flex items-center p-4 bg-purple-600 hover:bg-purple-700 rounded-lg transition-colors duration-200\">\n          <ClipboardDocumentListIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('audit.viewReports')}</span>\n        </button>\n        <button \n          className=\"flex items-center p-4 bg-orange-600 hover:bg-orange-700 rounded-lg transition-colors duration-200\"\n          onClick={() => setActiveTab('jobTickets')}\n        >\n          <ClipboardDocumentListIcon className=\"h-5 w-5 text-white mr-3\" />\n          <span className=\"text-white font-medium\">{t('manager.createJobTicket')}</span>\n        </button>\n        <button \n          className=\"relative flex items-center p-4 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl overflow-hidden group\"\n          style={{\n            background: 'linear-gradient(135deg, #39b198 0%, #2d8a73 100%)',\n            boxShadow: '0 4px 15px rgba(57, 177, 152, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.2)'\n          }}\n        >\n          {/* Animated shine overlay effect */}\n          <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white to-transparent opacity-0 group-hover:opacity-20 transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-all duration-700\"></div>\n          \n          <svg className=\"h-5 w-5 text-white mr-3 relative z-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n          </svg>\n          <span className=\"text-white font-medium relative z-10\">PatchAI</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerDashboard;\n"],"names":["LanguageToggle","language","toggleLanguage","useLanguage","targetLanguage","instructionText","_jsxs","onClick","className","concat","title","tabIndex","children","_jsx","memo","useManagerAccess","user","isAuthenticated","useAuth","isManager","useMemo","role","isAdmin","isTechnician","companyId","company_id","canAccessManagerFeatures","useCallback","canManageTechnicians","canEditCompanyProfile","canViewAuditLogs","canExportData","canInviteTechnicians","canDeactivateTechnicians","canPerformBatchOperations","canUploadCompanyLogo","belongsToSameCompany","targetCompanyId","validateAccess","async","requiredPermission","context","arguments","length","undefined","hasAccess","reason","auditSecurityEvent","AUDIT_ACTIONS","UNAUTHORIZED_ACCESS_ATTEMPT","permission","user_id","id","user_email","email","user_role","url","window","location","pathname","timestamp","Date","toISOString","withManagerAccess","WrappedComponent","props","_objectSpread","getPermissionsSummary","permissions","managerFeatures","technicianManagement","companyProfile","auditLogs","dataExport","inviteTechnicians","deactivateTechnicians","batchOperations","uploadLogo","_ref","show","onHide","onSuccess","t","inviteTechnician","useManager","formData","setFormData","useState","firstName","lastName","jobType","errors","setErrors","isSubmitting","setIsSubmitting","handleInputChange","e","name","value","target","prev","handleClose","style","backgroundColor","type","disabled","onSubmit","preventDefault","validateForm","newErrors","trim","test","Object","keys","result","first_name","last_name","job_type","_result$invitation","_result$error","_result$error2","_result$error3","success","auditTechnicianAction","TECHNICIAN_INVITED","invitation_id","invitation","error","includes","submit","console","htmlFor","onChange","placeholder","autoComplete","map","_Fragment","message","duration","onClose","isVisible","setIsVisible","useEffect","timer","setTimeout","clearTimeout","styles","warning","info","XMarkIcon","TechnicianManagement","technicians","loadingTechnicians","technicianError","technicianFilter","setTechnicianFilter","selectedTechnicians","setSelectedTechnicians","fetchTechnicians","updateTechnicianStatus","batchUpdateTechnicians","resendInvitation","getTechnicianStats","invitations","showInviteModal","setShowInviteModal","toast","setToast","searchTerm","setSearchTerm","sortBy","setSortBy","sortOrder","setSortOrder","mockTechnicians","phone","is_active","displayTechnicians","stats","activeTechnicians","filter","tech","force_password_reset","pendingInvitations","total","active","pending","filteredAndSortedTechnicians","filtered","_tech$first_name","_tech$last_name","_tech$email","_tech$job_type","toLowerCase","sort","a","b","aValue","bValue","getStatusPriority","last_login","comparison","toString","localeCompare","technician","getTechnicianStatus","key","label","color","filteredTechnicians","UserPlusIcon","UsersIcon","CheckCircleIcon","ClockIcon","index","EnvelopeIcon","PhoneIcon","log","technicianId","prevState","handleDeactivateTechnician","technicianName","confirm","handleDeleteTechnician","InviteTechnicianModal","isOpen","newTechnicianData","Toast","CompanyProfile","loadingCompany","companyError","fetchCompanyProfile","onInvoiceCreated","selectedJobTickets","mode","loading","setLoading","invoiceData","setInvoiceData","invoice_number","invoice_date","split","company_name","customer_name","line_items","notes","newInvoiceNumber","generateInvoiceNumber","year","getFullYear","slice","sequence","Math","floor","random","padStart","generateLineItemsFromJobTickets","lineItems","customerName","companyName","customerCompanies","Set","ticket","Boolean","join","rate","parseFloat","workHours","total_work_hours","quantity","total_travel_hours","cost","job_ticket_id","description","totals","subtotal","reduce","sum","item","serviceFee","toFixed","tax","updateLineItem","field","numericValue","i","updatedItem","calculatedCost","handleSubmit","status","validationErrors","validateInvoiceData","_invoiceData$invoice_","_invoiceData$company_","push","forEach","_item$description","totalAmount","isNaN","invoicePayload","service_fee","total_amount","amount","job_ticket_ids","created_by","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","ok","errorData","json","catch","Error","detail","showDeliveryModal","setShowDeliveryModal","deliveryLoading","setDeliveryLoading","handleCloseDeliveryModal","Modal","size","footer","DocumentIcon","PaperAirplaneIcon","CalendarIcon","addLineItem","newItem","now","PlusIcon","_ref2","_item$cost","_ref3","_safeItem$cost","safeItem","CurrencyDollarIcon","step","min","_","removeLineItem","TrashIcon","Promise","resolve","DocumentTextIcon","handleSaveAsDraftFromDelivery","triggerInvoiceModal","setTriggerInvoiceModal","invoices","setInvoices","setError","showCreateModal","setShowCreateModal","fetchInvoices","created_on","err","totalInvoices","draftInvoices","invoice","submittedInvoices","PencilIcon","ExclamationTriangleIcon","dateString","toLocaleDateString","month","day","Intl","NumberFormat","currency","format","handleEditInvoice","invoiceId","CreateInvoiceModal","newInvoice","prevInvoices","validateSameCustomerCompany","jobTickets","isValid","company","customerCompany","getValidationErrorMessage","errorCode","onJobTicketCreated","register","reset","setValue","watch","formState","useForm","defaultValues","work_start_time","work_end_time","drive_start_time","drive_end_time","parts","workStartTime","workEndTime","driveStartTime","driveEndTime","start","end","hours","round","closeOnEsc","closeOnOutsideClick","repeat","entries","_formData$company_nam","_formData$customer_na","_formData$location","_formData$description","_formData$additional_","currentYear","randomNumber","jobTicketNumber","payload","job_number","work_description","work_total_hours","drive_total_hours","submitted_by","work_type","equipment","travel_type","parts_used","additional_notes","requiredFields","missingFields","isPresent","authenticatedFetch","statusText","fromEntries","responseText","responseClone","clone","text","parse","parseError","errorMessage","Array","isArray","fieldErrors","_err$loc","loc","msg","newJobTicket","stack","cause","required","rows","jobTicket","onJobTicketUpdated","ticket_number","workDescription","totalWorkHours","totalTravelHours","workType","additionalNotes","updatedJobTicket","JobTickets","setJobTickets","showEditModal","setShowEditModal","selectedTicket","setSelectedTicket","selectedTickets","setSelectedTickets","showCreateInvoiceModal","setShowCreateInvoiceModal","showWarningModal","setShowWarningModal","validationError","setValidationError","fetchJobTickets","errorText","data","job_tickets","handleJobTicketCreated","handleJobTicketUpdated","updatedTicket","handleDeleteJobTicket","ticketId","ticketNumber","getStatusStats","totalTickets","assignedToInvoice","invoice_id","notAssigned","formatHours","accessLoading","accessError","history","back","validation","ClipboardDocumentListIcon","CheckIcon","checked","submitted_by_name","EyeIcon","CreateJobTicketModal","EditJobTicketModal","content","actions","AuditLogs","loadingAuditLogs","auditError","logs","setLogs","filters","setFilters","category","action","dateFrom","dateTo","search","pagination","setPagination","page","limit","totalPages","exporting","setExporting","loadAuditLogs","params","sort_by","sort_order","fetchAuditLogs","ceil","handleFilterChange","handleSortChange","newSortBy","handlePageChange","newPage","getCategoryBadgeClass","categories","users","user_name","exportAuditLogs","blob","Blob","csv","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","values","AUDIT_CATEGORIES","clearFilters","count","width","parseInt","formattedLog","toLocaleString","details","formattedTimestamp","formattedCategory","formattedAction","formattedUser","formattedDetails","formatLogEntry","toUpperCase","ip_address","from","max","formatPhoneNumber","limited","replace","substring","activeTab","setActiveTab","isLoading","setIsLoading","setSuccess","createForm","setCreateForm","fullName","password","confirmPassword","emailForm","setEmailForm","techName","smsForm","setSmsForm","temporary_password","parseErr","textErr","responseData","errorDetails","processingErr","originalError","requestBody","process","rawValue","tech_name","invitation_method","OverviewTab","totalTechnicians","Cog6ToothIcon","completedJobs","activeTickets","pendingInvoices","BuildingOfficeIcon","QuickActionsSection","background","boxShadow","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","ManagerDashboard","_user$name","_user$name$charAt","_navigationItems$find","_navigationItems$find2","hasManagerAccess","logout","accessValidated","setAccessValidated","setAccessError","sidebarOpen","setSidebarOpen","toggleButtonRef","useRef","sidebarRef","checkAccess","handleClickOutside","event","innerWidth","current","contains","addEventListener","removeEventListener","navigationItems","icon","HomeIcon","component","Invoices","ref","Bars3Icon","Icon","charAt","ArrowRightOnRectangleIcon","find","InviteTechnician"],"sourceRoot":""}