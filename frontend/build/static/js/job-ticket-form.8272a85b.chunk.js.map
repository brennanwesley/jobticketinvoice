{"version":3,"file":"static/js/job-ticket-form.8272a85b.chunk.js","mappings":"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","sources":["components/LanguageToggle.js","components/JobTicketFormPage.js","../node_modules/@heroicons/react/24/outline/esm/Bars3Icon.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\n\r\n/**\r\n * Language Toggle component\r\n * Provides a button to switch between English and Spanish\r\n */\r\nconst LanguageToggle = () => {\r\n  const { language, toggleLanguage } = useLanguage();\r\n  \r\n  // Determine which language to show in the toggle button (opposite of current)\r\n  const targetLanguage = language === 'en' ? 'Espa√±ol' : 'English';\r\n  const instructionText = language === 'es' ? 'click for' : 'haga clic para';\r\n  \r\n  return (\r\n    <button\r\n      onClick={toggleLanguage}\r\n      className=\"absolute top-0 right-0 m-4 px-3 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md transition-colors flex items-center focus:outline-none focus:ring-2 focus:ring-orange-700\"\r\n      aria-label={`${instructionText} ${targetLanguage}`}\r\n      title={`${instructionText} ${targetLanguage}`}\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"text-xs italic text-white mr-1\">{instructionText}</span>\r\n      <span>{targetLanguage}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(LanguageToggle);\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Bars3Icon } from '@heroicons/react/24/outline';\nimport { useLanguage } from '../context/LanguageContext';\nimport { useAuth } from '../context/AuthContext';\nimport { useTicket } from '../context/TicketContext';\nimport { LoadingSpinner } from './ui';\nimport Sidebar from './layout/Sidebar';\nimport LanguageToggle from './LanguageToggle';\n\n// Import all form components from the forms directory\nimport {\n  GenericJobTicketForm,\n  PumpTechTicketForm,\n  DriverTicketForm,\n  RoustaboutTicketForm,\n  ElectricianTicketForm,\n  PipelineOperatorTicketForm,\n  TruckDriverTicketForm,\n  OtherTicketForm\n} from './tickets/forms';\n\n/**\n * JobTicketFormPage component\n * Dedicated page for manual job ticket creation\n */\nconst JobTicketFormPage = () => {\n  const { t } = useLanguage();\n  const { user } = useAuth();\n  const { draftData } = useTicket();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const toggleButtonRef = useRef();\n  const sidebarRef = useRef();\n  \n  // Get the user's job type\n  const jobType = user?.jobType || 'manual';\n  \n  // Map job types to their respective form components\n  const jobTypeForms = {\n    'pump_tech': PumpTechTicketForm,\n    'driver': DriverTicketForm,\n    'roustabout': RoustaboutTicketForm,\n    'electrician': ElectricianTicketForm,\n    'pipeline_operator': PipelineOperatorTicketForm,\n    'truck_driver': TruckDriverTicketForm,\n    'other': OtherTicketForm,\n    'manual': GenericJobTicketForm, // Fallback for manual selection or admin users\n  };\n  \n  // Select the appropriate form component based on job type\n  const FormComponent = jobTypeForms[jobType] || GenericJobTicketForm;\n  \n  // Simulate loading to ensure all components are ready\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n    \n    return () => clearTimeout(timer);\n  }, []);\n  \n  // Handle clicks outside the sidebar to close it on mobile\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Only run this on mobile (when sidebar can be toggled)\n      if (window.innerWidth >= 768) return; // md breakpoint\n      \n      // If sidebar is open and click is outside sidebar and not on the toggle button\n      if (\n        sidebarOpen && \n        sidebarRef.current && \n        !sidebarRef.current.contains(event.target) &&\n        toggleButtonRef.current && \n        !toggleButtonRef.current.contains(event.target)\n      ) {\n        setSidebarOpen(false);\n      }\n    };\n    \n    // Add event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n    \n    // Cleanup\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [sidebarOpen]);\n  \n  // Handle back button click\n  const handleBackClick = () => {\n    navigate('/dashboard/landing');\n  };\n  \n  return (\n    <div className=\"bg-slate-900 min-h-screen\">\n      {/* Header area for language toggle */}\n      <div className=\"h-14 relative\">\n        <LanguageToggle />\n      </div>\n      \n      <div className=\"flex\">\n        {/* Mobile sidebar toggle */}\n        <button\n          ref={toggleButtonRef}\n          className=\"md:hidden fixed top-4 left-4 z-50 p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700\"\n          onClick={() => setSidebarOpen(!sidebarOpen)}\n        >\n          <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n        </button>\n        \n        {/* Sidebar */}\n        <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} ref={sidebarRef} />\n        \n        {/* Main content */}\n        <main className=\"flex-1 bg-slate-900 p-6 overflow-y-auto text-white\">\n          <div className=\"mt-2 md:mt-0 pl-14 md:pl-0 md:ml-64\">\n            <div className=\"max-w-4xl mx-auto\">\n              {/* Header with back button */}\n              <div className=\"mb-6 flex items-center\">\n                <button \n                  onClick={handleBackClick}\n                  className=\"mr-4 p-2 rounded-full hover:bg-gray-700 transition-colors\"\n                  aria-label={t('common.back')}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                  </svg>\n                </button>\n                <h1 className=\"text-2xl font-bold text-white\">{t('jobTicket.createNew')}</h1>\n              </div>\n              \n              {/* Form container */}\n              <div className=\"bg-gray-800 rounded-lg shadow-lg p-6\">\n                {isLoading ? (\n                  <div className=\"flex justify-center items-center py-12\">\n                    <LoadingSpinner size=\"lg\" />\n                  </div>\n                ) : (\n                  <FormComponent draftData={draftData} />\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default JobTicketFormPage;\n","import * as React from \"react\";\nfunction Bars3Icon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(Bars3Icon);\nexport default ForwardRef;"],"names":["LanguageToggle","language","toggleLanguage","useLanguage","targetLanguage","instructionText","_jsxs","onClick","className","concat","title","tabIndex","children","_jsx","memo","JobTicketFormPage","t","user","useAuth","draftData","useTicket","navigate","useNavigate","isLoading","setIsLoading","useState","sidebarOpen","setSidebarOpen","toggleButtonRef","useRef","sidebarRef","jobType","FormComponent","PumpTechTicketForm","DriverTicketForm","RoustaboutTicketForm","ElectricianTicketForm","PipelineOperatorTicketForm","TruckDriverTicketForm","OtherTicketForm","GenericJobTicketForm","useEffect","timer","setTimeout","clearTimeout","handleClickOutside","event","window","innerWidth","current","contains","target","document","addEventListener","removeEventListener","ref","Bars3Icon","Sidebar","handleBackClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","LoadingSpinner","size","React","_ref","svgRef","titleId","props","_objectWithoutProperties","_excluded","Object","assign","id"],"sourceRoot":""}