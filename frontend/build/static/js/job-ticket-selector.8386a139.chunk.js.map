{"version":3,"file":"static/js/job-ticket-selector.8386a139.chunk.js","mappings":"2OAaA,MAAMA,EAAwBA,KAC5B,MAAM,KAAEC,IAASC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,OACR,oBAAEC,EAAmB,WAAEC,IAAeC,EAAAA,EAAAA,MAGtCC,GAAeC,EAAAA,EAAAA,UAAQ,MAC3B,UAAaC,EAAAA,GACb,OAAUC,EAAAA,GACV,OAAUC,EAAAA,MAER,IAGEC,GAAaJ,EAAAA,EAAAA,UAAQ,KAEzB,GAAmB,WAAfH,EAAyB,MAAO,SAEpC,IAAKL,IAASA,EAAKa,SAAU,MAAO,YAGpC,MAAMC,EAAoBd,EAAKa,SAASE,cAAcC,QAAQ,UAAW,KAWzE,MARmB,CACjB,gBAAmB,YACnB,eAAkB,YAClB,SAAY,YACZ,wBAA2B,YAC3B,kBAAqB,aAGLF,IAAsBA,IACvC,CAACd,EAAMK,IAGJY,GAAgBT,EAAAA,EAAAA,UAAQ,IACrBD,EAAaK,IAAeH,EAAAA,IAClC,CAACF,EAAcK,IAGZM,GAAYV,EAAAA,EAAAA,UAAQ,IAAMJ,GAAuB,CAAC,GAAG,CAACA,IAGtDe,GAAcX,EAAAA,EAAAA,UAAQ,IAAMY,YAAYC,OAAO,IAarD,OAVAC,EAAAA,WAAgB,KACd,MAAMC,EAAaH,YAAYC,MAAQF,EAGvC,OAFAK,QAAQC,IAAI,kBAADC,OAAmBd,EAAU,kBAAAc,OAAiBH,EAAWI,QAAQ,GAAE,OAEvE,KAELP,YAAYQ,WAAW,eAADF,OAAgBd,OAEvC,CAACO,EAAaP,KAGfiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAChD7B,EAAE,yBAGJE,IACCyB,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACH,UAAU,gFAA+EC,SAAA,EAC7FC,EAAAA,EAAAA,KAAA,KAAAD,SAAI7B,EAAE,6BACN2B,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcC,SAAA,CAAE7B,EAAE,qBAAqB,KAAGE,EAAoB8B,GAAGC,UAAU,EAAG,UAI/FH,EAAAA,EAAAA,KAACV,EAAAA,SAAc,CAACc,UAAUJ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UAACC,EAAAA,EAAAA,KAACK,EAAAA,GAAc,CAACC,KAAK,SAAcP,UACrGC,EAAAA,EAAAA,KAACf,EAAa,CAACC,UAAWA,UAOlC,EAAeI,EAAAA,KAAWvB,E","sources":["components/tickets/JobTicketFormSelector.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { useLanguage } from '../../context/LanguageContext';\nimport { useTicket } from '../../context/TicketContext';\nimport { Card, LoadingSpinner } from '../ui';\n\n// Import job type specific forms\nimport { GenericJobTicketForm, PumpTechTicketForm, DriverTicketForm } from './forms';\n\n/**\n * Job Ticket Form Selector Component\n * Dynamically loads the appropriate job ticket form based on user's job type\n */\nconst JobTicketFormSelector = () => {\n  const { user } = useAuth();\n  const { t } = useLanguage();\n  const { selectedDraftTicket, ticketMode } = useTicket();\n  \n  // Map of job types to their respective form components - defined outside render to avoid recreation\n  const jobTypeForms = useMemo(() => ({\n    'pump_tech': PumpTechTicketForm,\n    'driver': DriverTicketForm,\n    'manual': GenericJobTicketForm,\n    // Add more job types here as they are implemented\n  }), []);\n  \n  // Memoize the job type key to prevent recalculation on every render\n  const jobTypeKey = useMemo(() => {\n    // If manual mode is explicitly set, use the manual form\n    if (ticketMode === 'manual') return 'manual';\n    \n    if (!user || !user.job_type) return 'pump_tech';\n    \n    // Normalize job type string (remove spaces, hyphens, underscores, lowercase)\n    const normalizedJobType = user.job_type.toLowerCase().replace(/[\\s_-]/g, '_');\n    \n    // Map common variations to standard keys\n    const jobTypeMap = {\n      'pump_technician': 'pump_tech',\n      'pumptechnician': 'pump_tech',\n      'pumptech': 'pump_tech',\n      'pump_service_technician': 'pump_tech',\n      'pump_service_tech': 'pump_tech',\n    };\n    \n    return jobTypeMap[normalizedJobType] || normalizedJobType;\n  }, [user, ticketMode]);\n  \n  // Memoize the form component to prevent unnecessary re-renders\n  const FormComponent = useMemo(() => {\n    return jobTypeForms[jobTypeKey] || PumpTechTicketForm;\n  }, [jobTypeForms, jobTypeKey]);\n  \n  // Memoize the draft data to prevent unnecessary re-renders\n  const draftData = useMemo(() => selectedDraftTicket || {}, [selectedDraftTicket]);\n  \n  // Performance monitoring for form rendering\n  const renderStart = useMemo(() => performance.now(), []);\n  \n  // Log form rendering performance\n  React.useEffect(() => {\n    const renderTime = performance.now() - renderStart;\n    console.log(`JobTicketForm (${jobTypeKey}) rendered in ${renderTime.toFixed(2)}ms`);\n    \n    return () => {\n      // Cleanup performance marks\n      performance.clearMarks(`form-render-${jobTypeKey}`);\n    };\n  }, [renderStart, jobTypeKey]);\n  \n  return (\n    <div className=\"py-6 px-4\">\n      <h1 className=\"text-2xl font-bold mb-6 text-center\">\n        {t('jobTicket.createNew')}\n      </h1>\n      \n      {selectedDraftTicket && (\n        <Card className=\"bg-blue-500 bg-opacity-20 border border-blue-500 text-blue-500 px-4 py-3 mb-6\">\n          <p>{t('jobTicket.editingDraft')}</p>\n          <p className=\"text-sm mt-1\">{t('jobTicket.draftId')}: {selectedDraftTicket.id.substring(0, 8)}</p>\n        </Card>\n      )}\n      \n      <React.Suspense fallback={<div className=\"flex justify-center py-8\"><LoadingSpinner size=\"lg\" /></div>}>\n        <FormComponent draftData={draftData} />\n      </React.Suspense>\n    </div>\n  );\n};\n\n// Export memoized component to prevent unnecessary re-renders\nexport default React.memo(JobTicketFormSelector);\n"],"names":["JobTicketFormSelector","user","useAuth","t","useLanguage","selectedDraftTicket","ticketMode","useTicket","jobTypeForms","useMemo","PumpTechTicketForm","DriverTicketForm","GenericJobTicketForm","jobTypeKey","job_type","normalizedJobType","toLowerCase","replace","FormComponent","draftData","renderStart","performance","now","React","renderTime","console","log","concat","toFixed","clearMarks","_jsxs","className","children","_jsx","Card","id","substring","fallback","LoadingSpinner","size"],"sourceRoot":""}