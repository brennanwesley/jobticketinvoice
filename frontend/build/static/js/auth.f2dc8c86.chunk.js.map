{"version":3,"file":"static/js/auth.f2dc8c86.chunk.js","mappings":"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","sources":["components/LanguageToggle.js","components/LoginForm.js","components/LoginPage.js","components/RoleSelection.js","models/user.js","components/TechSignupForm.js","components/ManagerSignupForm.js","components/SignupPage.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\n\r\n/**\r\n * Language Toggle component\r\n * Provides a button to switch between English and Spanish\r\n */\r\nconst LanguageToggle = () => {\r\n  const { language, toggleLanguage } = useLanguage();\r\n  \r\n  // Determine which language to show in the toggle button (opposite of current)\r\n  const targetLanguage = language === 'en' ? 'Español' : 'English';\r\n  const instructionText = language === 'es' ? 'click for' : 'haga clic para';\r\n  \r\n  return (\r\n    <button\r\n      onClick={toggleLanguage}\r\n      className=\"absolute top-0 right-0 m-4 px-3 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md transition-colors flex items-center focus:outline-none focus:ring-2 focus:ring-orange-700\"\r\n      aria-label={`${instructionText} ${targetLanguage}`}\r\n      title={`${instructionText} ${targetLanguage}`}\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"text-xs italic text-gray-400 mr-1\">{instructionText}</span>\r\n      <span>{targetLanguage}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(LanguageToggle);\r\n","import React, { useState } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n/**\r\n * Login Form component\r\n * Handles user authentication\r\n */\r\nconst LoginForm = () => {\r\n  const { t } = useLanguage();\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  \r\n  // Error and loading states\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitError, setSubmitError] = useState(null);\r\n  \r\n  // Handle input change\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear field-specific error when user types\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: null }));\r\n    }\r\n  };\r\n  \r\n  // Validate form\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    // Special case for admin username\r\n    // DEVELOPMENT ONLY - This check will be removed in production\r\n    const isAdminLogin = formData.email.trim() === 'BrennanWesley';\r\n    \r\n    // Email validation - skip format validation for admin username\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = t('validation.emailRequired');\r\n    }\r\n    \r\n    // Password validation\r\n    if (!formData.password) {\r\n      newErrors.password = t('validation.passwordRequired');\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate form\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    setSubmitError(null);\r\n    \r\n    try {\r\n      // Login user\r\n      const result = await login(formData.email, formData.password);\r\n      \r\n      if (result.success) {\r\n        // For the dev admin account, redirect directly to job ticket entry page\r\n        // DEVELOPMENT ONLY - This special routing will be removed in production\r\n        if (result.is_dev_admin) {\r\n          navigate('/dashboard');\r\n        } else {\r\n          // Regular user flow - redirect to dashboard\r\n          navigate('/dashboard');\r\n        }\r\n      } else {\r\n        setSubmitError(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setSubmitError(t('errors.loginFailed'));\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"max-w-md mx-auto bg-slate-800 rounded-lg shadow-lg p-8\">\r\n      <h2 className=\"text-2xl font-bold text-center mb-6\">\r\n        {t('login.title')}\r\n      </h2>\r\n      \r\n      {submitError && (\r\n        <div className=\"bg-red-500 bg-opacity-20 border border-red-500 text-red-500 px-4 py-3 rounded mb-4\">\r\n          {submitError}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Email Field */}\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('login.email')}\r\n          </label>\r\n          <input\r\n            type=\"text\" /* Changed from type=\"email\" to type=\"text\" to allow non-email usernames */\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.email ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n            placeholder=\"Email or Admin Username\" /* Updated placeholder */\r\n          />\r\n          {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n        </div>\r\n        \r\n        {/* Password Field */}\r\n        <div>\r\n          <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('login.password')}\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.password ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.password && <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>}\r\n        </div>\r\n        \r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className=\"w-full bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          {isSubmitting ? t('common.submitting') : t('login.signIn')}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"mt-6 text-center\">\r\n        <p className=\"text-gray-400 text-sm mb-2\">\r\n          {t('login.noAccount')}\r\n        </p>\r\n        <Link to=\"/signup\" className=\"text-orange-500 hover:text-orange-400 font-medium\">\r\n          {t('login.createAccount')}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport LoginForm from './LoginForm';\r\n\r\n/**\r\n * Login Page component\r\n * Displays the login form with appropriate context\r\n */\r\nconst LoginPage = () => {\r\n  const { t } = useLanguage();\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-slate-900 py-12 px-4\">\r\n      <div className=\"max-w-md mx-auto mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-center text-white mb-2\">\r\n          {t('login.title')}\r\n        </h1>\r\n        <p className=\"text-gray-400 text-center\">\r\n          {t('login.description')}\r\n        </p>\r\n      </div>\r\n      \r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * Role Selection component\r\n * Allows users to select their role (Tech or Manager) during signup\r\n */\r\nconst RoleSelection = ({ onRoleSelect }) => {\r\n  const { t } = useLanguage();\r\n  \r\n  return (\r\n    <div className=\"max-w-md mx-auto bg-slate-800 rounded-lg shadow-lg p-8\">\r\n      <h2 className=\"text-2xl font-bold text-center mb-6\">\r\n        {t('signup.selectRole')}\r\n      </h2>\r\n      <p className=\"text-gray-300 mb-8 text-center\">\r\n        {t('signup.roleDescription')}\r\n      </p>\r\n      \r\n      <div className=\"space-y-4\">\r\n        {/* Tech Role Button */}\r\n        <button\r\n          onClick={() => onRoleSelect('tech')}\r\n          className=\"w-full flex items-center justify-between bg-slate-700 hover:bg-slate-600 p-4 rounded-lg transition-colors\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <div className=\"bg-blue-500 p-3 rounded-full mr-4\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-bold text-lg\">{t('signup.techRole')}</h3>\r\n              <p className=\"text-gray-400 text-sm\">{t('signup.techDescription')}</p>\r\n            </div>\r\n          </div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n        \r\n        {/* Manager Role Button */}\r\n        <button\r\n          onClick={() => onRoleSelect('manager')}\r\n          className=\"w-full flex items-center justify-between bg-slate-700 hover:bg-slate-600 p-4 rounded-lg transition-colors\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <div className=\"bg-orange-500 p-3 rounded-full mr-4\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-bold text-lg\">{t('signup.managerRole')}</h3>\r\n              <p className=\"text-gray-400 text-sm\">{t('signup.managerDescription')}</p>\r\n            </div>\r\n          </div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"mt-8 text-center\">\r\n        <p className=\"text-gray-400 text-sm mb-2\">\r\n          {t('signup.alreadyHaveAccount')}\r\n        </p>\r\n        <Link to=\"/login\" className=\"text-orange-500 hover:text-orange-400 font-medium\">\r\n          {t('signup.loginInstead')}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleSelection;\r\n","/**\r\n * User Model\r\n * Defines the user data structure and related constants\r\n */\r\n\r\n// User roles\r\nexport const USER_ROLES = {\r\n  TECH: 'tech',\r\n  MANAGER: 'manager'\r\n};\r\n\r\n// Job types for technicians\r\nexport const JOB_TYPES = {\r\n  PUMP_SERVICE: 'pump_service_technician',\r\n  HVAC: 'hvac_technician',\r\n  PLUMBING: 'plumbing_technician',\r\n  ELECTRICAL: 'electrical_technician',\r\n  GENERAL: 'general_maintenance'\r\n};\r\n\r\n// Default user state\r\nexport const DEFAULT_USER = {\r\n  id: null,\r\n  name: '',\r\n  email: '',\r\n  role: null,\r\n  job_type: null,\r\n  company_name: null,\r\n  logo_url: null,\r\n  created_at: null,\r\n  updated_at: null\r\n};\r\n\r\n/**\r\n * Validates if a user object has the required fields\r\n * @param {Object} user - User object to validate\r\n * @returns {boolean} - True if user is valid\r\n */\r\nexport const isValidUser = (user) => {\r\n  if (!user) return false;\r\n  \r\n  // Basic validation\r\n  if (!user.id || !user.email || !user.name || !user.role) {\r\n    return false;\r\n  }\r\n  \r\n  // Role-specific validation\r\n  if (user.role === USER_ROLES.TECH && !user.job_type) {\r\n    return false;\r\n  }\r\n  \r\n  if (user.role === USER_ROLES.MANAGER && !user.company_name) {\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n};\r\n\r\n/**\r\n * Formats a user object for display\r\n * @param {Object} user - User object to format\r\n * @returns {Object} - Formatted user object\r\n */\r\nexport const formatUserForDisplay = (user) => {\r\n  if (!user) return null;\r\n  \r\n  return {\r\n    ...user,\r\n    displayName: user.name,\r\n    displayRole: user.role === USER_ROLES.TECH ? 'Technician' : 'Manager',\r\n    displayJobType: user.job_type ? formatJobType(user.job_type) : null,\r\n    displayCompany: user.company_name || null,\r\n    hasLogo: !!user.logo_url\r\n  };\r\n};\r\n\r\n/**\r\n * Formats a job type for display\r\n * @param {string} jobType - Job type to format\r\n * @returns {string} - Formatted job type\r\n */\r\nexport const formatJobType = (jobType) => {\r\n  switch (jobType) {\r\n    case JOB_TYPES.PUMP_SERVICE:\r\n      return 'Pump Service Technician';\r\n    case JOB_TYPES.HVAC:\r\n      return 'HVAC Technician';\r\n    case JOB_TYPES.PLUMBING:\r\n      return 'Plumbing Technician';\r\n    case JOB_TYPES.ELECTRICAL:\r\n      return 'Electrical Technician';\r\n    case JOB_TYPES.GENERAL:\r\n      return 'General Maintenance';\r\n    default:\r\n      return jobType;\r\n  }\r\n};\r\n\r\nexport default {\r\n  USER_ROLES,\r\n  JOB_TYPES,\r\n  DEFAULT_USER,\r\n  isValidUser,\r\n  formatUserForDisplay,\r\n  formatJobType\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { models } from '../models/user';\r\n\r\n/**\r\n * Tech Signup Form component\r\n * Handles registration for technician users\r\n */\r\nconst TechSignupForm = () => {\r\n  const { t } = useLanguage();\r\n  const { register } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    job_type: '',\r\n  });\r\n  \r\n  // Error and loading states\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitError, setSubmitError] = useState(null);\r\n  \r\n  // Handle input change\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear field-specific error when user types\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: null }));\r\n    }\r\n  };\r\n  \r\n  // Validate form\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    // Name validation\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = t('validation.nameRequired');\r\n    }\r\n    \r\n    // Email validation\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = t('validation.emailRequired');\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = t('validation.emailInvalid');\r\n    }\r\n    \r\n    // Password validation\r\n    if (!formData.password) {\r\n      newErrors.password = t('validation.passwordRequired');\r\n    } else if (formData.password.length < 8) {\r\n      newErrors.password = t('validation.passwordLength');\r\n    }\r\n    \r\n    // Confirm password validation\r\n    if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = t('validation.passwordsDoNotMatch');\r\n    }\r\n    \r\n    // Job type validation\r\n    if (!formData.job_type) {\r\n      newErrors.job_type = t('validation.jobTypeRequired');\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate form\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    setSubmitError(null);\r\n    \r\n    try {\r\n      // Register user\r\n      const result = await register({\r\n        name: formData.name,\r\n        email: formData.email,\r\n        password: formData.password,\r\n        role: 'tech',\r\n        job_type: formData.job_type\r\n      });\r\n      \r\n      if (result.success) {\r\n        // Redirect to dashboard on success\r\n        navigate('/dashboard');\r\n      } else {\r\n        setSubmitError(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setSubmitError(t('errors.registrationFailed'));\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"max-w-md mx-auto bg-slate-800 rounded-lg shadow-lg p-8\">\r\n      <h2 className=\"text-2xl font-bold text-center mb-6\">\r\n        {t('signup.techSignup')}\r\n      </h2>\r\n      \r\n      {submitError && (\r\n        <div className=\"bg-red-500 bg-opacity-20 border border-red-500 text-red-500 px-4 py-3 rounded mb-4\">\r\n          {submitError}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Name Field */}\r\n        <div>\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.name')} *\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.name ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.name && <p className=\"mt-1 text-sm text-red-500\">{errors.name}</p>}\r\n        </div>\r\n        \r\n        {/* Email Field */}\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.email')} *\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.email ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n        </div>\r\n        \r\n        {/* Job Type Field */}\r\n        <div>\r\n          <label htmlFor=\"job_type\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.jobType')} *\r\n          </label>\r\n          <select\r\n            id=\"job_type\"\r\n            name=\"job_type\"\r\n            value={formData.job_type}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.job_type ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          >\r\n            <option value=\"\">{t('signup.selectJobType')}</option>\r\n            <option value=\"pump_service_technician\">{t('jobTypes.pumpTech')}</option>\r\n            <option value=\"roustabout\">{t('jobTypes.roustabout')}</option>\r\n            <option value=\"electrician\">{t('jobTypes.electrician')}</option>\r\n            <option value=\"pipeline_operator\">{t('jobTypes.pipeline')}</option>\r\n            <option value=\"truck_driver\">{t('jobTypes.truckDriver')}</option>\r\n            <option value=\"other\">{t('jobTypes.other')}</option>\r\n          </select>\r\n          {errors.job_type && <p className=\"mt-1 text-sm text-red-500\">{errors.job_type}</p>}\r\n        </div>\r\n        \r\n        {/* Password Field */}\r\n        <div>\r\n          <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.password')} *\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.password ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.password && <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>}\r\n        </div>\r\n        \r\n        {/* Confirm Password Field */}\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.confirmPassword')} *\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.confirmPassword ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.confirmPassword && <p className=\"mt-1 text-sm text-red-500\">{errors.confirmPassword}</p>}\r\n        </div>\r\n        \r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className=\"w-full bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          {isSubmitting ? t('common.submitting') : t('signup.createAccount')}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"mt-6 text-center\">\r\n        <Link to=\"/signup\" className=\"text-orange-500 hover:text-orange-400 font-medium\">\r\n          &larr; {t('common.back')}\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"mt-4 text-center\">\r\n        <p className=\"text-gray-400 text-sm mb-2\">\r\n          {t('signup.alreadyHaveAccount')}\r\n        </p>\r\n        <Link to=\"/login\" className=\"text-orange-500 hover:text-orange-400 font-medium\">\r\n          {t('signup.loginInstead')}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechSignupForm;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n/**\r\n * Manager Signup Form component\r\n * Handles registration for manager users with company logo upload\r\n */\r\nconst ManagerSignupForm = () => {\r\n  const { t } = useLanguage();\r\n  const { register, uploadLogo } = useAuth();\r\n  const navigate = useNavigate();\r\n  const fileInputRef = useRef(null);\r\n  \r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    company_name: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  \r\n  // Logo state\r\n  const [logo, setLogo] = useState(null);\r\n  const [logoPreview, setLogoPreview] = useState(null);\r\n  \r\n  // Error and loading states\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitError, setSubmitError] = useState(null);\r\n  \r\n  // Handle input change\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear field-specific error when user types\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: null }));\r\n    }\r\n  };\r\n  \r\n  // Handle logo file selection\r\n  const handleLogoChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    \r\n    // Validate file type\r\n    const validTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n    if (!validTypes.includes(file.type)) {\r\n      setErrors(prev => ({ \r\n        ...prev, \r\n        logo: t('validation.invalidFileType') \r\n      }));\r\n      return;\r\n    }\r\n    \r\n    // Validate file size (max 2MB)\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      setErrors(prev => ({ \r\n        ...prev, \r\n        logo: t('validation.fileTooLarge') \r\n      }));\r\n      return;\r\n    }\r\n    \r\n    // Set logo file and create preview\r\n    setLogo(file);\r\n    setLogoPreview(URL.createObjectURL(file));\r\n    \r\n    // Clear logo error\r\n    if (errors.logo) {\r\n      setErrors(prev => ({ ...prev, logo: null }));\r\n    }\r\n  };\r\n  \r\n  // Clear logo selection\r\n  const handleClearLogo = () => {\r\n    setLogo(null);\r\n    setLogoPreview(null);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  };\r\n  \r\n  // Validate form\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    // Name validation\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = t('validation.nameRequired');\r\n    }\r\n    \r\n    // Email validation\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = t('validation.emailRequired');\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = t('validation.emailInvalid');\r\n    }\r\n    \r\n    // Company name validation\r\n    if (!formData.company_name.trim()) {\r\n      newErrors.company_name = t('validation.companyNameRequired');\r\n    }\r\n    \r\n    // Password validation\r\n    if (!formData.password) {\r\n      newErrors.password = t('validation.passwordRequired');\r\n    } else if (formData.password.length < 8) {\r\n      newErrors.password = t('validation.passwordLength');\r\n    }\r\n    \r\n    // Confirm password validation\r\n    if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = t('validation.passwordsDoNotMatch');\r\n    }\r\n    \r\n    // Logo validation (optional for initial signup)\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate form\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    setSubmitError(null);\r\n    \r\n    try {\r\n      // Register user\r\n      const result = await register({\r\n        name: formData.name,\r\n        email: formData.email,\r\n        password: formData.password,\r\n        role: 'manager',\r\n        company_name: formData.company_name\r\n      });\r\n      \r\n      if (result.success) {\r\n        // Upload logo if provided\r\n        if (logo) {\r\n          const logoResult = await uploadLogo(logo);\r\n          if (!logoResult.success) {\r\n            console.warn('Logo upload failed:', logoResult.error);\r\n            // Continue anyway as this is not critical\r\n          }\r\n        }\r\n        \r\n        // Redirect to dashboard on success\r\n        navigate('/dashboard');\r\n      } else {\r\n        setSubmitError(result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setSubmitError(t('errors.registrationFailed'));\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"max-w-md mx-auto bg-slate-800 rounded-lg shadow-lg p-8\">\r\n      <h2 className=\"text-2xl font-bold text-center mb-6\">\r\n        {t('signup.managerSignup')}\r\n      </h2>\r\n      \r\n      {submitError && (\r\n        <div className=\"bg-red-500 bg-opacity-20 border border-red-500 text-red-500 px-4 py-3 rounded mb-4\">\r\n          {submitError}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Name Field */}\r\n        <div>\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.name')} *\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.name ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.name && <p className=\"mt-1 text-sm text-red-500\">{errors.name}</p>}\r\n        </div>\r\n        \r\n        {/* Email Field */}\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.email')} *\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.email ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n        </div>\r\n        \r\n        {/* Company Name Field */}\r\n        <div>\r\n          <label htmlFor=\"company_name\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.companyName')} *\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"company_name\"\r\n            name=\"company_name\"\r\n            value={formData.company_name}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.company_name ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.company_name && <p className=\"mt-1 text-sm text-red-500\">{errors.company_name}</p>}\r\n        </div>\r\n        \r\n        {/* Logo Upload Field */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.companyLogo')}\r\n          </label>\r\n          <div className={`border-2 border-dashed rounded-lg p-4 ${errors.logo ? 'border-red-500' : 'border-gray-600'} hover:border-orange-500 transition-colors`}>\r\n            {logoPreview ? (\r\n              <div className=\"flex flex-col items-center\">\r\n                <img \r\n                  src={logoPreview} \r\n                  alt=\"Company logo preview\" \r\n                  className=\"max-h-32 max-w-full mb-2 rounded\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClearLogo}\r\n                  className=\"text-sm text-red-500 hover:text-red-400\"\r\n                >\r\n                  {t('common.remove')}\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                </svg>\r\n                <p className=\"mt-1 text-sm text-gray-400\">\r\n                  {t('signup.dragDropOrClick')}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  {t('signup.logoRequirements')}\r\n                </p>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"logo\"\r\n                  name=\"logo\"\r\n                  accept=\"image/jpeg,image/png,image/gif\"\r\n                  onChange={handleLogoChange}\r\n                  ref={fileInputRef}\r\n                  className=\"hidden\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => fileInputRef.current?.click()}\r\n                  className=\"mt-2 inline-flex items-center px-3 py-1 border border-gray-600 text-sm leading-4 font-medium rounded-md text-gray-300 bg-slate-700 hover:bg-slate-600 transition-colors\"\r\n                >\r\n                  {t('signup.selectFile')}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {errors.logo && <p className=\"mt-1 text-sm text-red-500\">{errors.logo}</p>}\r\n        </div>\r\n        \r\n        {/* Password Field */}\r\n        <div>\r\n          <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.password')} *\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.password ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.password && <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>}\r\n        </div>\r\n        \r\n        {/* Confirm Password Field */}\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n            {t('signup.confirmPassword')} *\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            className={`w-full px-4 py-2 bg-slate-700 border ${errors.confirmPassword ? 'border-red-500' : 'border-gray-600'} rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500`}\r\n          />\r\n          {errors.confirmPassword && <p className=\"mt-1 text-sm text-red-500\">{errors.confirmPassword}</p>}\r\n        </div>\r\n        \r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className=\"w-full bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          {isSubmitting ? t('common.submitting') : t('signup.createAccount')}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"mt-6 text-center\">\r\n        <Link to=\"/signup\" className=\"text-orange-500 hover:text-orange-400 font-medium\">\r\n          &larr; {t('common.back')}\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"mt-4 text-center\">\r\n        <p className=\"text-gray-400 text-sm mb-2\">\r\n          {t('signup.alreadyHaveAccount')}\r\n        </p>\r\n        <Link to=\"/login\" className=\"text-orange-500 hover:text-orange-400 font-medium\">\r\n          {t('signup.loginInstead')}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerSignupForm;\r\n","import React, { useState } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport RoleSelection from './RoleSelection';\r\nimport TechSignupForm from './TechSignupForm';\r\nimport ManagerSignupForm from './ManagerSignupForm';\r\nimport LanguageToggle from './LanguageToggle';\r\n\r\n/**\r\n * Signup Page component\r\n * Manages the multi-step signup flow with role selection\r\n */\r\nconst SignupPage = () => {\r\n  const { t } = useLanguage();\r\n  const [selectedRole, setSelectedRole] = useState(null);\r\n  \r\n  // Handle role selection\r\n  const handleRoleSelect = (role) => {\r\n    setSelectedRole(role);\r\n  };\r\n  \r\n  // Render appropriate form based on selected role\r\n  const renderForm = () => {\r\n    if (!selectedRole) {\r\n      return <RoleSelection onRoleSelect={handleRoleSelect} />;\r\n    }\r\n    \r\n    switch (selectedRole) {\r\n      case 'tech':\r\n        return <TechSignupForm />;\r\n      case 'manager':\r\n        return <ManagerSignupForm />;\r\n      default:\r\n        return <RoleSelection onRoleSelect={handleRoleSelect} />;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-slate-900 py-12 px-4 relative\">\r\n      {/* Language Toggle */}\r\n      <div className=\"h-14 relative\">\r\n        <LanguageToggle />\r\n      </div>\r\n      <div className=\"max-w-md mx-auto mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-center text-white mb-2\">\r\n          {selectedRole ? t(`signup.${selectedRole}Signup`) : t('signup.title')}\r\n        </h1>\r\n        <p className=\"text-gray-400 text-center\">\r\n          {selectedRole ? t(`signup.${selectedRole}Description`) : t('signup.description')}\r\n        </p>\r\n      </div>\r\n      \r\n      {renderForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n"],"names":["LanguageToggle","language","toggleLanguage","useLanguage","targetLanguage","instructionText","_jsxs","onClick","className","concat","title","tabIndex","children","_jsx","memo","LoginForm","t","login","useAuth","navigate","useNavigate","formData","setFormData","useState","email","password","errors","setErrors","isSubmitting","setIsSubmitting","submitError","setSubmitError","handleChange","e","name","value","target","prev","_objectSpread","onSubmit","async","preventDefault","validateForm","newErrors","trim","Object","keys","length","result","success","is_dev_admin","error","console","htmlFor","type","id","onChange","placeholder","disabled","Link","to","LoginPage","_ref","onRoleSelect","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","TechSignupForm","register","confirmPassword","job_type","test","role","ManagerSignupForm","uploadLogo","fileInputRef","useRef","company_name","logo","setLogo","logoPreview","setLogoPreview","logoResult","warn","src","alt","handleClearLogo","current","accept","file","files","includes","size","URL","createObjectURL","ref","_fileInputRef$current","click","SignupPage","selectedRole","setSelectedRole","handleRoleSelect","renderForm","RoleSelection"],"sourceRoot":""}