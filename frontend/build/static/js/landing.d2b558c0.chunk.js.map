{"version":3,"file":"static/js/landing.d2b558c0.chunk.js","mappings":"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","sources":["components/LanguageToggle.js","../node_modules/@heroicons/react/24/outline/esm/QuestionMarkCircleIcon.js","components/PublicLandingPage.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\n\r\n/**\r\n * Language Toggle component\r\n * Provides a button to switch between English and Spanish\r\n */\r\nconst LanguageToggle = () => {\r\n  const { language, toggleLanguage } = useLanguage();\r\n  \r\n  // Determine which language to show in the toggle button (opposite of current)\r\n  const targetLanguage = language === 'en' ? 'Espa√±ol' : 'English';\r\n  const instructionText = language === 'es' ? 'click for' : 'haga clic para';\r\n  \r\n  return (\r\n    <button\r\n      onClick={toggleLanguage}\r\n      className=\"absolute top-0 right-0 m-4 px-3 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md transition-colors flex items-center focus:outline-none focus:ring-2 focus:ring-orange-700\"\r\n      aria-label={`${instructionText} ${targetLanguage}`}\r\n      title={`${instructionText} ${targetLanguage}`}\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"text-xs italic text-white mr-1\">{instructionText}</span>\r\n      <span>{targetLanguage}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(LanguageToggle);\r\n","import * as React from \"react\";\nfunction QuestionMarkCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(QuestionMarkCircleIcon);\nexport default ForwardRef;","import React from 'react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { Link } from 'react-router-dom';\r\nimport LanguageToggle from './LanguageToggle';\r\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/outline';\r\n\r\n/**\r\n * Public Landing Page component\r\n * Displays the initial public screen with options to sign up or login\r\n */\r\nconst PublicLandingPage = () => {\r\n  const { t, language } = useLanguage();\r\n  \r\n  // Handle help button click (placeholder for future functionality)\r\n  const handleHelpClick = () => {\r\n    console.log('Help button clicked');\r\n    // Future functionality will be added here\r\n  };\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-slate-900 to-slate-800 text-white relative\">\r\n      {/* Language Toggle */}\r\n      <div className=\"h-14 relative\">\r\n        <LanguageToggle />\r\n      </div>\r\n      {/* Hero Section */}\r\n      <div className=\"container mx-auto px-4 py-16 md:py-24\">\r\n        <div className=\"flex flex-col md:flex-row items-center justify-between\">\r\n          <div className=\"md:w-1/2 mb-10 md:mb-0\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold mb-6\">\r\n              {t('publicLanding.headline') || \"Oilfield Job Ticketing & Invoicing Made Simple\"}\r\n            </h1>\r\n            <p className=\"text-xl text-gray-300 mb-8\">\r\n              {t('publicLanding.subheadline') || \"The fastest way for oilfield service companies to get paid.\"}\r\n            </p>\r\n            <div className=\"flex flex-col sm:flex-row gap-4\">\r\n              <Link\r\n                to=\"/signup\"\r\n                className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-6 rounded-lg text-center transition-colors\"\r\n              >\r\n                {t('publicLanding.getStarted') || \"Get Started\"}\r\n              </Link>\r\n              <Link\r\n                to=\"/login\"\r\n                className=\"bg-gray-700 hover:bg-gray-600 text-white font-bold py-3 px-6 rounded-lg text-center transition-colors\"\r\n              >\r\n                {t('publicLanding.login')}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"md:w-1/2\">\r\n            {/* Simple image placeholder */}\r\n            <div className=\"w-full max-w-md mx-auto flex items-center justify-center\">\r\n              <img \r\n                src=\"/images/job-ticket-hero.svg\" \r\n                alt=\"Job Ticket Platform\" \r\n                className=\"w-full h-auto\" \r\n                onError={(e) => {\r\n                  e.target.style.display = 'none';\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Features Section */}\r\n      <div className=\"bg-slate-800 py-16\">\r\n        <div className=\"container mx-auto px-4\">\r\n          <h2 className=\"text-3xl font-bold text-center mb-12\">\r\n            {t('publicLanding.featuresTitle')}\r\n          </h2>\r\n          <div className=\"grid md:grid-cols-3 gap-8\">\r\n            {/* Feature 1 */}\r\n            <div className=\"bg-slate-700 p-6 rounded-lg\">\r\n              <div className=\"text-orange-500 text-4xl mb-4\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-xl font-bold mb-2\">{t('publicLanding.feature1Title')}</h3>\r\n              <p className=\"text-gray-300\">{t('publicLanding.feature1Description')}</p>\r\n            </div>\r\n            \r\n            {/* Feature 2 */}\r\n            <div className=\"bg-slate-700 p-6 rounded-lg\">\r\n              <div className=\"text-orange-500 text-4xl mb-4\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-xl font-bold mb-2\">{t('publicLanding.feature2Title')}</h3>\r\n              <p className=\"text-gray-300\">{t('publicLanding.feature2Description')}</p>\r\n            </div>\r\n            \r\n            {/* Feature 3 */}\r\n            <div className=\"bg-slate-700 p-6 rounded-lg\">\r\n              <div className=\"text-orange-500 text-4xl mb-4\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-xl font-bold mb-2\">{t('publicLanding.feature3Title')}</h3>\r\n              <p className=\"text-gray-300\">{t('publicLanding.feature3Description')}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* CTA Section */}\r\n      <div className=\"container mx-auto px-4 py-16 text-center\">\r\n        <h2 className=\"text-3xl font-bold mb-6\">{t('publicLanding.ctaTitle')}</h2>\r\n        <p className=\"text-xl text-gray-300 mb-8 max-w-2xl mx-auto\">{t('publicLanding.ctaDescription')}</p>\r\n        <Link\r\n          to=\"/signup\"\r\n          className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-8 rounded-lg inline-block transition-colors\"\r\n        >\r\n          {t('publicLanding.getStarted')}\r\n        </Link>\r\n      </div>\r\n      \r\n      {/* Need Help button */}\r\n      <div className=\"fixed bottom-4 right-4 z-20\">\r\n        <button\r\n          onClick={handleHelpClick}\r\n          className=\"flex items-center space-x-2 bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-full transition-colors shadow-lg\"\r\n          aria-label=\"Need Help\"\r\n        >\r\n          <QuestionMarkCircleIcon className=\"h-5 w-5 text-white\" />\r\n          <span className=\"text-sm\">\r\n            {language === 'en' ? 'Need Help' : '¬øNecesita Ayuda?'}\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicLandingPage;\r\n"],"names":["LanguageToggle","language","toggleLanguage","useLanguage","targetLanguage","instructionText","_jsxs","onClick","className","concat","title","tabIndex","children","_jsx","memo","React","_ref","svgRef","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","PublicLandingPage","t","Link","to","src","alt","onError","e","target","style","display","handleHelpClick","console","log","QuestionMarkCircleIcon"],"sourceRoot":""}